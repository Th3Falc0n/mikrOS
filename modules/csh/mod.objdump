
../../initrfs/ibin/csh:     file format elf32-i386


Disassembly of section .text:

40000000 <main>:
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
40000004:	83 e4 f0             	and    $0xfffffff0,%esp
40000007:	ff 71 fc             	pushl  -0x4(%ecx)
4000000a:	55                   	push   %ebp
4000000b:	89 e5                	mov    %esp,%ebp
4000000d:	53                   	push   %ebx
4000000e:	51                   	push   %ecx
4000000f:	81 ec 10 05 00 00    	sub    $0x510,%esp
    char epath[512];
    char instr[512];

    cd("ibin");
40000015:	83 ec 0c             	sub    $0xc,%esp
40000018:	68 00 20 00 40       	push   $0x40002000
4000001d:	e8 bf 04 00 00       	call   400004e1 <cd>
40000022:	83 c4 10             	add    $0x10,%esp
40000025:	eb 01                	jmp    40000028 <main+0x28>
                continue;
            }

            texec(instr, pargs);
        }
    }
40000027:	90                   	nop    
    char instr[512];

    cd("ibin");

    while(1) {
        getExecPath(epath);
40000028:	83 ec 0c             	sub    $0xc,%esp
4000002b:	8d 85 f0 fd ff ff    	lea    -0x210(%ebp),%eax
40000031:	50                   	push   %eax
40000032:	e8 27 04 00 00       	call   4000045e <getExecPath>
40000037:	83 c4 10             	add    $0x10,%esp
        printf("$%s> ", epath);
4000003a:	83 ec 08             	sub    $0x8,%esp
4000003d:	8d 85 f0 fd ff ff    	lea    -0x210(%ebp),%eax
40000043:	50                   	push   %eax
40000044:	68 05 20 00 40       	push   $0x40002005
40000049:	e8 35 0d 00 00       	call   40000d83 <printf>
4000004e:	83 c4 10             	add    $0x10,%esp
        getln(instr);
40000051:	83 ec 0c             	sub    $0xc,%esp
40000054:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
4000005a:	50                   	push   %eax
4000005b:	e8 8c 0a 00 00       	call   40000aec <getln>
40000060:	83 c4 10             	add    $0x10,%esp

        char* cmd = strtoknc(instr, " ");
40000063:	83 ec 08             	sub    $0x8,%esp
40000066:	68 0b 20 00 40       	push   $0x4000200b
4000006b:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
40000071:	50                   	push   %eax
40000072:	e8 d1 10 00 00       	call   40001148 <strtoknc>
40000077:	83 c4 10             	add    $0x10,%esp
4000007a:	89 45 f0             	mov    %eax,-0x10(%ebp)

        if(cmd != 0) {
4000007d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
40000081:	74 a4                	je     40000027 <main+0x27>
            char* pargs[64];
            int n = 0;
40000083:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

            do {
                pargs[n] = strtoknc(0, " ");
4000008a:	8b 5d f4             	mov    -0xc(%ebp),%ebx
4000008d:	83 ec 08             	sub    $0x8,%esp
40000090:	68 0b 20 00 40       	push   $0x4000200b
40000095:	6a 00                	push   $0x0
40000097:	e8 ac 10 00 00       	call   40001148 <strtoknc>
4000009c:	83 c4 10             	add    $0x10,%esp
4000009f:	89 84 9d f0 fa ff ff 	mov    %eax,-0x510(%ebp,%ebx,4)
                n++;
400000a6:	ff 45 f4             	incl   -0xc(%ebp)
            } while(pargs[n-1] != 0);
400000a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
400000ac:	48                   	dec    %eax
400000ad:	8b 84 85 f0 fa ff ff 	mov    -0x510(%ebp,%eax,4),%eax
400000b4:	85 c0                	test   %eax,%eax
400000b6:	75 d2                	jne    4000008a <main+0x8a>

            if(!strcmp(cmd, "cd")) {
400000b8:	83 ec 08             	sub    $0x8,%esp
400000bb:	68 0d 20 00 40       	push   $0x4000200d
400000c0:	ff 75 f0             	pushl  -0x10(%ebp)
400000c3:	e8 46 0f 00 00       	call   4000100e <strcmp>
400000c8:	83 c4 10             	add    $0x10,%esp
400000cb:	85 c0                	test   %eax,%eax
400000cd:	75 34                	jne    40000103 <main+0x103>
                if(pargs[0] != 0) {
400000cf:	8b 85 f0 fa ff ff    	mov    -0x510(%ebp),%eax
400000d5:	85 c0                	test   %eax,%eax
400000d7:	74 14                	je     400000ed <main+0xed>
                    cd((char*)pargs[0]);
400000d9:	8b 85 f0 fa ff ff    	mov    -0x510(%ebp),%eax
400000df:	83 ec 0c             	sub    $0xc,%esp
400000e2:	50                   	push   %eax
400000e3:	e8 f9 03 00 00       	call   400004e1 <cd>
400000e8:	83 c4 10             	add    $0x10,%esp
400000eb:	eb 10                	jmp    400000fd <main+0xfd>
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400000ed:	83 ec 0c             	sub    $0xc,%esp
400000f0:	68 10 20 00 40       	push   $0x40002010
400000f5:	e8 89 0c 00 00       	call   40000d83 <printf>
400000fa:	83 c4 10             	add    $0x10,%esp
                }

                continue;
400000fd:	90                   	nop    
            }

            texec(instr, pargs);
        }
    }
400000fe:	e9 25 ff ff ff       	jmp    40000028 <main+0x28>
                }

                continue;
            }

            texec(instr, pargs);
40000103:	83 ec 08             	sub    $0x8,%esp
40000106:	8d 85 f0 fa ff ff    	lea    -0x510(%ebp),%eax
4000010c:	50                   	push   %eax
4000010d:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
40000113:	50                   	push   %eax
40000114:	e8 38 04 00 00       	call   40000551 <texec>
40000119:	83 c4 10             	add    $0x10,%esp
        }
    }
4000011c:	e9 07 ff ff ff       	jmp    40000028 <main+0x28>
40000121:	00 00                	add    %al,(%eax)
	...

40000124 <return_rpc>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"

40000124:	55                   	push   %ebp
40000125:	89 e5                	mov    %esp,%ebp
40000127:	83 ec 28             	sub    $0x28,%esp
int main(int argc, char* args[])
{
    char epath[512];
4000012a:	8b 45 08             	mov    0x8(%ebp),%eax
    char instr[512];

    cd("ibin");

    while(1) {
4000012d:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
40000134:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000137:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000013e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000145:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000014c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
40000153:	83 ec 0c             	sub    $0xc,%esp
40000156:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000159:	50                   	push   %eax
4000015a:	e8 4d 16 00 00       	call   400017ac <syscall>
4000015f:	83 c4 10             	add    $0x10,%esp
        getln(instr);

40000162:	eb fe                	jmp    40000162 <return_rpc+0x3e>

40000164 <call_rpc>:
        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000164:	55                   	push   %ebp
40000165:	89 e5                	mov    %esp,%ebp
40000167:	83 ec 28             	sub    $0x28,%esp
            char* pargs[64];
            int n = 0;

4000016a:	8b 55 08             	mov    0x8(%ebp),%edx
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
4000016d:	8b 45 14             	mov    0x14(%ebp),%eax
            } while(pargs[n-1] != 0);

40000170:	c7 45 e0 1f 00 00 00 	movl   $0x1f,-0x20(%ebp)
40000177:	89 55 e4             	mov    %edx,-0x1c(%ebp)
4000017a:	8b 55 0c             	mov    0xc(%ebp),%edx
4000017d:	89 55 e8             	mov    %edx,-0x18(%ebp)
40000180:	8b 55 10             	mov    0x10(%ebp),%edx
40000183:	89 55 ec             	mov    %edx,-0x14(%ebp)
40000186:	89 45 f0             	mov    %eax,-0x10(%ebp)
40000189:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000190:	83 ec 0c             	sub    $0xc,%esp
40000193:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000196:	50                   	push   %eax
40000197:	e8 10 16 00 00       	call   400017ac <syscall>
4000019c:	83 c4 10             	add    $0x10,%esp
                    cd((char*)pargs[0]);
                }
4000019f:	8b 45 e0             	mov    -0x20(%ebp),%eax
                else
400001a2:	c9                   	leave  
400001a3:	c3                   	ret    

400001a4 <fetch_rpc_data>:
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400001a4:	55                   	push   %ebp
400001a5:	89 e5                	mov    %esp,%ebp
400001a7:	83 ec 28             	sub    $0x28,%esp
                }

                continue;
400001aa:	8b 45 08             	mov    0x8(%ebp),%eax
            }

            texec(instr, pargs);
        }
    }
400001ad:	c7 45 e0 21 00 00 00 	movl   $0x21,-0x20(%ebp)
400001b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400001b7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400001be:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400001c5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400001cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    return 0;
400001d3:	83 ec 0c             	sub    $0xc,%esp
400001d6:	8d 45 e0             	lea    -0x20(%ebp),%eax
400001d9:	50                   	push   %eax
400001da:	e8 cd 15 00 00       	call   400017ac <syscall>
400001df:	83 c4 10             	add    $0x10,%esp
}
400001e2:	c9                   	leave  
400001e3:	c3                   	ret    

400001e4 <register_irq_rpc_syscall>:
400001e4:	55                   	push   %ebp
400001e5:	89 e5                	mov    %esp,%ebp
400001e7:	83 ec 28             	sub    $0x28,%esp
400001ea:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%ebp)
400001f1:	8b 45 08             	mov    0x8(%ebp),%eax
400001f4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400001f7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400001fe:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000205:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000020c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000213:	83 ec 0c             	sub    $0xc,%esp
40000216:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000219:	50                   	push   %eax
4000021a:	e8 8d 15 00 00       	call   400017ac <syscall>
4000021f:	83 c4 10             	add    $0x10,%esp
40000222:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000225:	c9                   	leave  
40000226:	c3                   	ret    

40000227 <register_irq_handler>:
40000227:	55                   	push   %ebp
40000228:	89 e5                	mov    %esp,%ebp
4000022a:	83 ec 08             	sub    $0x8,%esp
4000022d:	83 ec 0c             	sub    $0xc,%esp
40000230:	ff 75 08             	pushl  0x8(%ebp)
40000233:	e8 ac ff ff ff       	call   400001e4 <register_irq_rpc_syscall>
40000238:	83 c4 10             	add    $0x10,%esp
4000023b:	85 c0                	test   %eax,%eax
4000023d:	74 14                	je     40000253 <register_irq_handler+0x2c>
4000023f:	8b 45 08             	mov    0x8(%ebp),%eax
40000242:	8b 55 0c             	mov    0xc(%ebp),%edx
40000245:	89 14 85 00 30 00 40 	mov    %edx,0x40003000(,%eax,4)
4000024c:	b8 01 00 00 00       	mov    $0x1,%eax
40000251:	eb 05                	jmp    40000258 <register_irq_handler+0x31>
40000253:	b8 00 00 00 00       	mov    $0x0,%eax
40000258:	c9                   	leave  
40000259:	c3                   	ret    

4000025a <_handle_rpc>:
4000025a:	55                   	push   %ebp
4000025b:	89 e5                	mov    %esp,%ebp
4000025d:	83 ec 18             	sub    $0x18,%esp
40000260:	83 ec 0c             	sub    $0xc,%esp
40000263:	ff 75 10             	pushl  0x10(%ebp)
40000266:	e8 f2 11 00 00       	call   4000145d <malloc>
4000026b:	83 c4 10             	add    $0x10,%esp
4000026e:	89 45 f4             	mov    %eax,-0xc(%ebp)
40000271:	83 ec 0c             	sub    $0xc,%esp
40000274:	ff 75 f4             	pushl  -0xc(%ebp)
40000277:	e8 28 ff ff ff       	call   400001a4 <fetch_rpc_data>
4000027c:	83 c4 10             	add    $0x10,%esp
4000027f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40000283:	75 30                	jne    400002b5 <_handle_rpc+0x5b>
40000285:	8b 45 0c             	mov    0xc(%ebp),%eax
40000288:	8b 04 85 00 30 00 40 	mov    0x40003000(,%eax,4),%eax
4000028f:	85 c0                	test   %eax,%eax
40000291:	74 22                	je     400002b5 <_handle_rpc+0x5b>
40000293:	8b 45 0c             	mov    0xc(%ebp),%eax
40000296:	8b 04 85 00 30 00 40 	mov    0x40003000(,%eax,4),%eax
4000029d:	83 ec 0c             	sub    $0xc,%esp
400002a0:	ff 75 0c             	pushl  0xc(%ebp)
400002a3:	ff d0                	call   *%eax
400002a5:	83 c4 10             	add    $0x10,%esp
400002a8:	83 ec 0c             	sub    $0xc,%esp
400002ab:	6a 00                	push   $0x0
400002ad:	e8 72 fe ff ff       	call   40000124 <return_rpc>
400002b2:	83 c4 10             	add    $0x10,%esp
400002b5:	83 ec 0c             	sub    $0xc,%esp
400002b8:	68 28 20 00 40       	push   $0x40002028
400002bd:	e8 c1 0a 00 00       	call   40000d83 <printf>
400002c2:	83 c4 10             	add    $0x10,%esp
400002c5:	83 ec 0c             	sub    $0xc,%esp
400002c8:	ff 75 f4             	pushl  -0xc(%ebp)
400002cb:	e8 d0 13 00 00       	call   400016a0 <free>
400002d0:	83 c4 10             	add    $0x10,%esp
400002d3:	83 ec 0c             	sub    $0xc,%esp
400002d6:	6a 00                	push   $0x0
400002d8:	e8 47 fe ff ff       	call   40000124 <return_rpc>
400002dd:	83 c4 10             	add    $0x10,%esp
400002e0:	c9                   	leave  
400002e1:	c3                   	ret    

400002e2 <set_rpc_handler>:
400002e2:	55                   	push   %ebp
400002e3:	89 e5                	mov    %esp,%ebp
400002e5:	57                   	push   %edi
400002e6:	56                   	push   %esi
400002e7:	53                   	push   %ebx
400002e8:	83 ec 2c             	sub    $0x2c,%esp
400002eb:	83 ec 04             	sub    $0x4,%esp
400002ee:	68 00 02 00 00       	push   $0x200
400002f3:	6a 00                	push   $0x0
400002f5:	68 00 30 00 40       	push   $0x40003000
400002fa:	e8 01 0c 00 00       	call   40000f00 <memset>
400002ff:	83 c4 10             	add    $0x10,%esp
40000302:	8d 55 d0             	lea    -0x30(%ebp),%edx
40000305:	bb 24 21 00 40       	mov    $0x40002124,%ebx
4000030a:	b8 06 00 00 00       	mov    $0x6,%eax
4000030f:	89 d7                	mov    %edx,%edi
40000311:	89 de                	mov    %ebx,%esi
40000313:	89 c1                	mov    %eax,%ecx
40000315:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
40000317:	83 ec 0c             	sub    $0xc,%esp
4000031a:	8d 45 d0             	lea    -0x30(%ebp),%eax
4000031d:	50                   	push   %eax
4000031e:	e8 89 14 00 00       	call   400017ac <syscall>
40000323:	83 c4 10             	add    $0x10,%esp
40000326:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000329:	83 c4 00             	add    $0x0,%esp
4000032c:	5b                   	pop    %ebx
4000032d:	5e                   	pop    %esi
4000032e:	5f                   	pop    %edi
4000032f:	5d                   	pop    %ebp
40000330:	c3                   	ret    

40000331 <getargs>:
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000331:	55                   	push   %ebp
40000332:	89 e5                	mov    %esp,%ebp
40000334:	83 ec 28             	sub    $0x28,%esp

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
40000337:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%ebp)
4000033e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000345:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000034c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000353:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000035a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getln(instr);

40000361:	83 ec 0c             	sub    $0xc,%esp
40000364:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000367:	50                   	push   %eax
40000368:	e8 3f 14 00 00       	call   400017ac <syscall>
4000036d:	83 c4 10             	add    $0x10,%esp
        char* cmd = strtoknc(instr, " ");

40000370:	8b 45 e0             	mov    -0x20(%ebp),%eax
        if(cmd != 0) {
40000373:	c9                   	leave  
40000374:	c3                   	ret    

40000375 <_start>:
            char* pargs[64];
            int n = 0;
40000375:	55                   	push   %ebp
40000376:	89 e5                	mov    %esp,%ebp
40000378:	83 ec 18             	sub    $0x18,%esp

4000037b:	e8 b1 ff ff ff       	call   40000331 <getargs>
40000380:	89 45 ec             	mov    %eax,-0x14(%ebp)
            do {
                pargs[n] = strtoknc(0, " ");
40000383:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
                n++;
            } while(pargs[n-1] != 0);
4000038a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
4000038e:	74 14                	je     400003a4 <_start+0x2f>

40000390:	eb 03                	jmp    40000395 <_start+0x20>
            if(!strcmp(cmd, "cd")) {
40000392:	ff 45 f0             	incl   -0x10(%ebp)

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

40000395:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000398:	c1 e0 02             	shl    $0x2,%eax
4000039b:	03 45 ec             	add    -0x14(%ebp),%eax
4000039e:	8b 00                	mov    (%eax),%eax
400003a0:	85 c0                	test   %eax,%eax
400003a2:	75 ee                	jne    40000392 <_start+0x1d>
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
400003a4:	e8 39 ff ff ff       	call   400002e2 <set_rpc_handler>
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400003a9:	83 ec 08             	sub    $0x8,%esp
400003ac:	ff 75 ec             	pushl  -0x14(%ebp)
400003af:	ff 75 f0             	pushl  -0x10(%ebp)
400003b2:	e8 49 fc ff ff       	call   40000000 <main>
400003b7:	83 c4 10             	add    $0x10,%esp
400003ba:	89 45 f4             	mov    %eax,-0xc(%ebp)
                }

400003bd:	83 ec 0c             	sub    $0xc,%esp
400003c0:	ff 75 f4             	pushl  -0xc(%ebp)
400003c3:	e8 46 00 00 00       	call   4000040e <exit>
400003c8:	83 c4 10             	add    $0x10,%esp
                continue;
400003cb:	c9                   	leave  
400003cc:	c3                   	ret    

400003cd <yield>:
            }

400003cd:	55                   	push   %ebp
400003ce:	89 e5                	mov    %esp,%ebp
400003d0:	83 ec 28             	sub    $0x28,%esp
    }

    return 0;
}
400003d3:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%ebp)
400003da:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400003e1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400003e8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400003ef:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400003f6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400003fd:	83 ec 0c             	sub    $0xc,%esp
40000400:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000403:	50                   	push   %eax
40000404:	e8 a3 13 00 00       	call   400017ac <syscall>
40000409:	83 c4 10             	add    $0x10,%esp
4000040c:	c9                   	leave  
4000040d:	c3                   	ret    

4000040e <exit>:
4000040e:	55                   	push   %ebp
4000040f:	89 e5                	mov    %esp,%ebp
40000411:	83 ec 28             	sub    $0x28,%esp
40000414:	8b 45 08             	mov    0x8(%ebp),%eax
40000417:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
4000041e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000421:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000428:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000042f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000436:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000043d:	83 ec 0c             	sub    $0xc,%esp
40000440:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000443:	50                   	push   %eax
40000444:	e8 63 13 00 00       	call   400017ac <syscall>
40000449:	83 c4 10             	add    $0x10,%esp
4000044c:	83 ec 0c             	sub    $0xc,%esp
4000044f:	68 38 20 00 40       	push   $0x40002038
40000454:	e8 2a 09 00 00       	call   40000d83 <printf>
40000459:	83 c4 10             	add    $0x10,%esp
4000045c:	eb ee                	jmp    4000044c <exit+0x3e>

4000045e <getExecPath>:
4000045e:	55                   	push   %ebp
4000045f:	89 e5                	mov    %esp,%ebp
40000461:	83 ec 28             	sub    $0x28,%esp
40000464:	8b 45 08             	mov    0x8(%ebp),%eax
40000467:	c7 45 e0 06 00 00 00 	movl   $0x6,-0x20(%ebp)
4000046e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000471:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000478:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000047f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000486:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000048d:	83 ec 0c             	sub    $0xc,%esp
40000490:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000493:	50                   	push   %eax
40000494:	e8 13 13 00 00       	call   400017ac <syscall>
40000499:	83 c4 10             	add    $0x10,%esp
4000049c:	c9                   	leave  
4000049d:	c3                   	ret    

4000049e <changeExecPath>:
4000049e:	55                   	push   %ebp
4000049f:	89 e5                	mov    %esp,%ebp
400004a1:	83 ec 28             	sub    $0x28,%esp
400004a4:	8b 45 08             	mov    0x8(%ebp),%eax
400004a7:	c7 45 e0 07 00 00 00 	movl   $0x7,-0x20(%ebp)
400004ae:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400004b1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400004b8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400004bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400004c6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400004cd:	83 ec 0c             	sub    $0xc,%esp
400004d0:	8d 45 e0             	lea    -0x20(%ebp),%eax
400004d3:	50                   	push   %eax
400004d4:	e8 d3 12 00 00       	call   400017ac <syscall>
400004d9:	83 c4 10             	add    $0x10,%esp
400004dc:	8b 45 e0             	mov    -0x20(%ebp),%eax
400004df:	c9                   	leave  
400004e0:	c3                   	ret    

400004e1 <cd>:
400004e1:	55                   	push   %ebp
400004e2:	89 e5                	mov    %esp,%ebp
400004e4:	83 ec 08             	sub    $0x8,%esp
400004e7:	83 ec 0c             	sub    $0xc,%esp
400004ea:	ff 75 08             	pushl  0x8(%ebp)
400004ed:	e8 ac ff ff ff       	call   4000049e <changeExecPath>
400004f2:	83 c4 10             	add    $0x10,%esp
400004f5:	85 c0                	test   %eax,%eax
400004f7:	75 14                	jne    4000050d <cd+0x2c>
400004f9:	e8 4e 01 00 00       	call   4000064c <getLastVFSErr>
400004fe:	83 ec 08             	sub    $0x8,%esp
40000501:	50                   	push   %eax
40000502:	ff 75 08             	pushl  0x8(%ebp)
40000505:	e8 80 00 00 00       	call   4000058a <printFilesystemError>
4000050a:	83 c4 10             	add    $0x10,%esp
4000050d:	c9                   	leave  
4000050e:	c3                   	ret    

4000050f <exec>:
4000050f:	55                   	push   %ebp
40000510:	89 e5                	mov    %esp,%ebp
40000512:	83 ec 28             	sub    $0x28,%esp
40000515:	8b 55 08             	mov    0x8(%ebp),%edx
40000518:	8b 45 0c             	mov    0xc(%ebp),%eax
4000051b:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%ebp)
40000522:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000525:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000528:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000052f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000536:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000053d:	83 ec 0c             	sub    $0xc,%esp
40000540:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000543:	50                   	push   %eax
40000544:	e8 63 12 00 00       	call   400017ac <syscall>
40000549:	83 c4 10             	add    $0x10,%esp
4000054c:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000054f:	c9                   	leave  
40000550:	c3                   	ret    

40000551 <texec>:
40000551:	55                   	push   %ebp
40000552:	89 e5                	mov    %esp,%ebp
40000554:	83 ec 18             	sub    $0x18,%esp
40000557:	83 ec 08             	sub    $0x8,%esp
4000055a:	ff 75 0c             	pushl  0xc(%ebp)
4000055d:	ff 75 08             	pushl  0x8(%ebp)
40000560:	e8 aa ff ff ff       	call   4000050f <exec>
40000565:	83 c4 10             	add    $0x10,%esp
40000568:	89 45 f4             	mov    %eax,-0xc(%ebp)
4000056b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
4000056f:	75 14                	jne    40000585 <texec+0x34>
40000571:	e8 d6 00 00 00       	call   4000064c <getLastVFSErr>
40000576:	83 ec 08             	sub    $0x8,%esp
40000579:	50                   	push   %eax
4000057a:	ff 75 08             	pushl  0x8(%ebp)
4000057d:	e8 08 00 00 00       	call   4000058a <printFilesystemError>
40000582:	83 c4 10             	add    $0x10,%esp
40000585:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000588:	c9                   	leave  
40000589:	c3                   	ret    

4000058a <printFilesystemError>:
4000058a:	55                   	push   %ebp
4000058b:	89 e5                	mov    %esp,%ebp
4000058d:	83 ec 08             	sub    $0x8,%esp
40000590:	83 7d 0c 05          	cmpl   $0x5,0xc(%ebp)
40000594:	0f 87 8c 00 00 00    	ja     40000626 <printFilesystemError+0x9c>
4000059a:	8b 45 0c             	mov    0xc(%ebp),%eax
4000059d:	c1 e0 02             	shl    $0x2,%eax
400005a0:	8b 80 0c 21 00 40    	mov    0x4000210c(%eax),%eax
400005a6:	ff e0                	jmp    *%eax
400005a8:	83 ec 08             	sub    $0x8,%esp
400005ab:	ff 75 08             	pushl  0x8(%ebp)
400005ae:	68 3f 20 00 40       	push   $0x4000203f
400005b3:	e8 cb 07 00 00       	call   40000d83 <printf>
400005b8:	83 c4 10             	add    $0x10,%esp
400005bb:	eb 7c                	jmp    40000639 <printFilesystemError+0xaf>
400005bd:	83 ec 08             	sub    $0x8,%esp
400005c0:	ff 75 08             	pushl  0x8(%ebp)
400005c3:	68 54 20 00 40       	push   $0x40002054
400005c8:	e8 b6 07 00 00       	call   40000d83 <printf>
400005cd:	83 c4 10             	add    $0x10,%esp
400005d0:	eb 67                	jmp    40000639 <printFilesystemError+0xaf>
400005d2:	83 ec 08             	sub    $0x8,%esp
400005d5:	ff 75 08             	pushl  0x8(%ebp)
400005d8:	68 74 20 00 40       	push   $0x40002074
400005dd:	e8 a1 07 00 00       	call   40000d83 <printf>
400005e2:	83 c4 10             	add    $0x10,%esp
400005e5:	eb 52                	jmp    40000639 <printFilesystemError+0xaf>
400005e7:	83 ec 08             	sub    $0x8,%esp
400005ea:	ff 75 08             	pushl  0x8(%ebp)
400005ed:	68 9e 20 00 40       	push   $0x4000209e
400005f2:	e8 8c 07 00 00       	call   40000d83 <printf>
400005f7:	83 c4 10             	add    $0x10,%esp
400005fa:	eb 3d                	jmp    40000639 <printFilesystemError+0xaf>
400005fc:	83 ec 08             	sub    $0x8,%esp
400005ff:	ff 75 08             	pushl  0x8(%ebp)
40000602:	68 b4 20 00 40       	push   $0x400020b4
40000607:	e8 77 07 00 00       	call   40000d83 <printf>
4000060c:	83 c4 10             	add    $0x10,%esp
4000060f:	eb 28                	jmp    40000639 <printFilesystemError+0xaf>
40000611:	83 ec 08             	sub    $0x8,%esp
40000614:	ff 75 08             	pushl  0x8(%ebp)
40000617:	68 ef 20 00 40       	push   $0x400020ef
4000061c:	e8 62 07 00 00       	call   40000d83 <printf>
40000621:	83 c4 10             	add    $0x10,%esp
40000624:	eb 13                	jmp    40000639 <printFilesystemError+0xaf>
40000626:	83 ec 08             	sub    $0x8,%esp
40000629:	ff 75 08             	pushl  0x8(%ebp)
4000062c:	68 02 21 00 40       	push   $0x40002102
40000631:	e8 4d 07 00 00       	call   40000d83 <printf>
40000636:	83 c4 10             	add    $0x10,%esp
40000639:	83 ec 0c             	sub    $0xc,%esp
4000063c:	68 0a 21 00 40       	push   $0x4000210a
40000641:	e8 3d 07 00 00       	call   40000d83 <printf>
40000646:	83 c4 10             	add    $0x10,%esp
40000649:	c9                   	leave  
4000064a:	c3                   	ret    
	...

4000064c <getLastVFSErr>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"

4000064c:	55                   	push   %ebp
4000064d:	89 e5                	mov    %esp,%ebp
4000064f:	83 ec 28             	sub    $0x28,%esp
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000652:	c7 45 e0 0f 00 00 00 	movl   $0xf,-0x20(%ebp)
40000659:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000660:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000667:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000066e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000675:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
4000067c:	83 ec 0c             	sub    $0xc,%esp
4000067f:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000682:	50                   	push   %eax
40000683:	e8 24 11 00 00       	call   400017ac <syscall>
40000688:	83 c4 10             	add    $0x10,%esp
        getln(instr);

4000068b:	8b 45 e0             	mov    -0x20(%ebp),%eax
        char* cmd = strtoknc(instr, " ");
4000068e:	c9                   	leave  
4000068f:	c3                   	ret    

40000690 <getpmhandle>:

        if(cmd != 0) {
40000690:	55                   	push   %ebp
40000691:	89 e5                	mov    %esp,%ebp
40000693:	83 ec 28             	sub    $0x28,%esp

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

40000696:	c7 45 e0 14 00 00 00 	movl   $0x14,-0x20(%ebp)
4000069d:	8b 45 08             	mov    0x8(%ebp),%eax
400006a0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006a3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006aa:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006b1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400006b8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
400006bf:	83 ec 0c             	sub    $0xc,%esp
400006c2:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006c5:	50                   	push   %eax
400006c6:	e8 e1 10 00 00       	call   400017ac <syscall>
400006cb:	83 c4 10             	add    $0x10,%esp
                    cd((char*)pargs[0]);
                }
400006ce:	8b 45 e0             	mov    -0x20(%ebp),%eax
                else
400006d1:	c9                   	leave  
400006d2:	c3                   	ret    

400006d3 <getstdout>:
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400006d3:	55                   	push   %ebp
400006d4:	89 e5                	mov    %esp,%ebp
400006d6:	83 ec 08             	sub    $0x8,%esp
400006d9:	83 ec 0c             	sub    $0xc,%esp
400006dc:	6a 00                	push   $0x0
400006de:	e8 ad ff ff ff       	call   40000690 <getpmhandle>
400006e3:	83 c4 10             	add    $0x10,%esp
400006e6:	c9                   	leave  
400006e7:	c3                   	ret    

400006e8 <getstdin>:
                }
400006e8:	55                   	push   %ebp
400006e9:	89 e5                	mov    %esp,%ebp
400006eb:	83 ec 08             	sub    $0x8,%esp
400006ee:	83 ec 0c             	sub    $0xc,%esp
400006f1:	6a 01                	push   $0x1
400006f3:	e8 98 ff ff ff       	call   40000690 <getpmhandle>
400006f8:	83 c4 10             	add    $0x10,%esp
400006fb:	c9                   	leave  
400006fc:	c3                   	ret    

400006fd <getstderr>:

400006fd:	55                   	push   %ebp
400006fe:	89 e5                	mov    %esp,%ebp
40000700:	83 ec 08             	sub    $0x8,%esp
40000703:	83 ec 0c             	sub    $0xc,%esp
40000706:	6a 02                	push   $0x2
40000708:	e8 83 ff ff ff       	call   40000690 <getpmhandle>
4000070d:	83 c4 10             	add    $0x10,%esp
40000710:	c9                   	leave  
40000711:	c3                   	ret    

40000712 <fopenpmhandle>:
                continue;
            }
40000712:	55                   	push   %ebp
40000713:	89 e5                	mov    %esp,%ebp
40000715:	83 ec 28             	sub    $0x28,%esp

            texec(instr, pargs);
        }
    }
40000718:	8b 45 0c             	mov    0xc(%ebp),%eax

    return 0;
}
4000071b:	c7 45 e0 15 00 00 00 	movl   $0x15,-0x20(%ebp)
40000722:	8b 55 08             	mov    0x8(%ebp),%edx
40000725:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000728:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000072b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000732:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000739:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000740:	83 ec 0c             	sub    $0xc,%esp
40000743:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000746:	50                   	push   %eax
40000747:	e8 60 10 00 00       	call   400017ac <syscall>
4000074c:	83 c4 10             	add    $0x10,%esp
4000074f:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000752:	c9                   	leave  
40000753:	c3                   	ret    

40000754 <setstdout>:
40000754:	55                   	push   %ebp
40000755:	89 e5                	mov    %esp,%ebp
40000757:	83 ec 08             	sub    $0x8,%esp
4000075a:	83 ec 08             	sub    $0x8,%esp
4000075d:	ff 75 08             	pushl  0x8(%ebp)
40000760:	6a 00                	push   $0x0
40000762:	e8 ab ff ff ff       	call   40000712 <fopenpmhandle>
40000767:	83 c4 10             	add    $0x10,%esp
4000076a:	c9                   	leave  
4000076b:	c3                   	ret    

4000076c <setstdin>:
4000076c:	55                   	push   %ebp
4000076d:	89 e5                	mov    %esp,%ebp
4000076f:	83 ec 08             	sub    $0x8,%esp
40000772:	83 ec 08             	sub    $0x8,%esp
40000775:	ff 75 08             	pushl  0x8(%ebp)
40000778:	6a 01                	push   $0x1
4000077a:	e8 93 ff ff ff       	call   40000712 <fopenpmhandle>
4000077f:	83 c4 10             	add    $0x10,%esp
40000782:	c9                   	leave  
40000783:	c3                   	ret    

40000784 <setstderr>:
40000784:	55                   	push   %ebp
40000785:	89 e5                	mov    %esp,%ebp
40000787:	83 ec 08             	sub    $0x8,%esp
4000078a:	83 ec 08             	sub    $0x8,%esp
4000078d:	ff 75 08             	pushl  0x8(%ebp)
40000790:	6a 02                	push   $0x2
40000792:	e8 7b ff ff ff       	call   40000712 <fopenpmhandle>
40000797:	83 c4 10             	add    $0x10,%esp
4000079a:	c9                   	leave  
4000079b:	c3                   	ret    

4000079c <fopen>:
4000079c:	55                   	push   %ebp
4000079d:	89 e5                	mov    %esp,%ebp
4000079f:	83 ec 28             	sub    $0x28,%esp
400007a2:	8b 45 08             	mov    0x8(%ebp),%eax
400007a5:	c7 45 e0 0a 00 00 00 	movl   $0xa,-0x20(%ebp)
400007ac:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400007af:	8b 45 0c             	mov    0xc(%ebp),%eax
400007b2:	89 45 e8             	mov    %eax,-0x18(%ebp)
400007b5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400007bc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400007c3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400007ca:	83 ec 0c             	sub    $0xc,%esp
400007cd:	8d 45 e0             	lea    -0x20(%ebp),%eax
400007d0:	50                   	push   %eax
400007d1:	e8 d6 0f 00 00       	call   400017ac <syscall>
400007d6:	83 c4 10             	add    $0x10,%esp
400007d9:	8b 45 e0             	mov    -0x20(%ebp),%eax
400007dc:	c9                   	leave  
400007dd:	c3                   	ret    

400007de <fclose>:
400007de:	55                   	push   %ebp
400007df:	89 e5                	mov    %esp,%ebp
400007e1:	83 ec 28             	sub    $0x28,%esp
400007e4:	c7 45 e0 0b 00 00 00 	movl   $0xb,-0x20(%ebp)
400007eb:	8b 45 08             	mov    0x8(%ebp),%eax
400007ee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400007f1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400007f8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400007ff:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000806:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000080d:	83 ec 0c             	sub    $0xc,%esp
40000810:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000813:	50                   	push   %eax
40000814:	e8 93 0f 00 00       	call   400017ac <syscall>
40000819:	83 c4 10             	add    $0x10,%esp
4000081c:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000081f:	c9                   	leave  
40000820:	c3                   	ret    

40000821 <printrwerror>:
40000821:	55                   	push   %ebp
40000822:	89 e5                	mov    %esp,%ebp
40000824:	83 ec 08             	sub    $0x8,%esp
40000827:	83 7d 0c 02          	cmpl   $0x2,0xc(%ebp)
4000082b:	75 13                	jne    40000840 <printrwerror+0x1f>
4000082d:	83 ec 08             	sub    $0x8,%esp
40000830:	ff 75 08             	pushl  0x8(%ebp)
40000833:	68 3c 21 00 40       	push   $0x4000213c
40000838:	e8 46 05 00 00       	call   40000d83 <printf>
4000083d:	83 c4 10             	add    $0x10,%esp
40000840:	83 7d 0c 03          	cmpl   $0x3,0xc(%ebp)
40000844:	75 13                	jne    40000859 <printrwerror+0x38>
40000846:	83 ec 08             	sub    $0x8,%esp
40000849:	ff 75 08             	pushl  0x8(%ebp)
4000084c:	68 54 21 00 40       	push   $0x40002154
40000851:	e8 2d 05 00 00       	call   40000d83 <printf>
40000856:	83 c4 10             	add    $0x10,%esp
40000859:	83 7d 0c 04          	cmpl   $0x4,0xc(%ebp)
4000085d:	75 13                	jne    40000872 <printrwerror+0x51>
4000085f:	83 ec 08             	sub    $0x8,%esp
40000862:	ff 75 08             	pushl  0x8(%ebp)
40000865:	68 70 21 00 40       	push   $0x40002170
4000086a:	e8 14 05 00 00       	call   40000d83 <printf>
4000086f:	83 c4 10             	add    $0x10,%esp
40000872:	83 7d 0c 05          	cmpl   $0x5,0xc(%ebp)
40000876:	75 13                	jne    4000088b <printrwerror+0x6a>
40000878:	83 ec 08             	sub    $0x8,%esp
4000087b:	ff 75 08             	pushl  0x8(%ebp)
4000087e:	68 9c 21 00 40       	push   $0x4000219c
40000883:	e8 fb 04 00 00       	call   40000d83 <printf>
40000888:	83 c4 10             	add    $0x10,%esp
4000088b:	c9                   	leave  
4000088c:	c3                   	ret    

4000088d <frwrite>:
4000088d:	55                   	push   %ebp
4000088e:	89 e5                	mov    %esp,%ebp
40000890:	83 ec 28             	sub    $0x28,%esp
40000893:	8b 45 0c             	mov    0xc(%ebp),%eax
40000896:	c7 45 e0 0c 00 00 00 	movl   $0xc,-0x20(%ebp)
4000089d:	8b 55 08             	mov    0x8(%ebp),%edx
400008a0:	89 55 e4             	mov    %edx,-0x1c(%ebp)
400008a3:	89 45 e8             	mov    %eax,-0x18(%ebp)
400008a6:	8b 45 10             	mov    0x10(%ebp),%eax
400008a9:	89 45 ec             	mov    %eax,-0x14(%ebp)
400008ac:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400008b3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400008ba:	83 ec 0c             	sub    $0xc,%esp
400008bd:	8d 45 e0             	lea    -0x20(%ebp),%eax
400008c0:	50                   	push   %eax
400008c1:	e8 e6 0e 00 00       	call   400017ac <syscall>
400008c6:	83 c4 10             	add    $0x10,%esp
400008c9:	8b 45 e0             	mov    -0x20(%ebp),%eax
400008cc:	c9                   	leave  
400008cd:	c3                   	ret    

400008ce <fwrite>:
400008ce:	55                   	push   %ebp
400008cf:	89 e5                	mov    %esp,%ebp
400008d1:	83 ec 18             	sub    $0x18,%esp
400008d4:	83 ec 04             	sub    $0x4,%esp
400008d7:	ff 75 10             	pushl  0x10(%ebp)
400008da:	ff 75 0c             	pushl  0xc(%ebp)
400008dd:	ff 75 08             	pushl  0x8(%ebp)
400008e0:	e8 a8 ff ff ff       	call   4000088d <frwrite>
400008e5:	83 c4 10             	add    $0x10,%esp
400008e8:	89 45 f4             	mov    %eax,-0xc(%ebp)
400008eb:	eb 1c                	jmp    40000909 <fwrite+0x3b>
400008ed:	e8 db fa ff ff       	call   400003cd <yield>
400008f2:	83 ec 04             	sub    $0x4,%esp
400008f5:	ff 75 10             	pushl  0x10(%ebp)
400008f8:	ff 75 0c             	pushl  0xc(%ebp)
400008fb:	ff 75 08             	pushl  0x8(%ebp)
400008fe:	e8 8a ff ff ff       	call   4000088d <frwrite>
40000903:	83 c4 10             	add    $0x10,%esp
40000906:	89 45 f4             	mov    %eax,-0xc(%ebp)
40000909:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
4000090d:	74 de                	je     400008ed <fwrite+0x1f>
4000090f:	83 ec 08             	sub    $0x8,%esp
40000912:	ff 75 f4             	pushl  -0xc(%ebp)
40000915:	ff 75 08             	pushl  0x8(%ebp)
40000918:	e8 04 ff ff ff       	call   40000821 <printrwerror>
4000091d:	83 c4 10             	add    $0x10,%esp
40000920:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000923:	c9                   	leave  
40000924:	c3                   	ret    

40000925 <frread>:
40000925:	55                   	push   %ebp
40000926:	89 e5                	mov    %esp,%ebp
40000928:	83 ec 28             	sub    $0x28,%esp
4000092b:	8b 45 0c             	mov    0xc(%ebp),%eax
4000092e:	c7 45 e0 0d 00 00 00 	movl   $0xd,-0x20(%ebp)
40000935:	8b 55 08             	mov    0x8(%ebp),%edx
40000938:	89 55 e4             	mov    %edx,-0x1c(%ebp)
4000093b:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000093e:	8b 45 10             	mov    0x10(%ebp),%eax
40000941:	89 45 ec             	mov    %eax,-0x14(%ebp)
40000944:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000094b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000952:	83 ec 0c             	sub    $0xc,%esp
40000955:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000958:	50                   	push   %eax
40000959:	e8 4e 0e 00 00       	call   400017ac <syscall>
4000095e:	83 c4 10             	add    $0x10,%esp
40000961:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000964:	c9                   	leave  
40000965:	c3                   	ret    

40000966 <fread>:
40000966:	55                   	push   %ebp
40000967:	89 e5                	mov    %esp,%ebp
40000969:	83 ec 18             	sub    $0x18,%esp
4000096c:	83 ec 04             	sub    $0x4,%esp
4000096f:	ff 75 10             	pushl  0x10(%ebp)
40000972:	ff 75 0c             	pushl  0xc(%ebp)
40000975:	ff 75 08             	pushl  0x8(%ebp)
40000978:	e8 a8 ff ff ff       	call   40000925 <frread>
4000097d:	83 c4 10             	add    $0x10,%esp
40000980:	89 45 f4             	mov    %eax,-0xc(%ebp)
40000983:	eb 1c                	jmp    400009a1 <fread+0x3b>
40000985:	e8 43 fa ff ff       	call   400003cd <yield>
4000098a:	83 ec 04             	sub    $0x4,%esp
4000098d:	ff 75 10             	pushl  0x10(%ebp)
40000990:	ff 75 0c             	pushl  0xc(%ebp)
40000993:	ff 75 08             	pushl  0x8(%ebp)
40000996:	e8 8a ff ff ff       	call   40000925 <frread>
4000099b:	83 c4 10             	add    $0x10,%esp
4000099e:	89 45 f4             	mov    %eax,-0xc(%ebp)
400009a1:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
400009a5:	74 de                	je     40000985 <fread+0x1f>
400009a7:	83 ec 08             	sub    $0x8,%esp
400009aa:	ff 75 f4             	pushl  -0xc(%ebp)
400009ad:	ff 75 08             	pushl  0x8(%ebp)
400009b0:	e8 6c fe ff ff       	call   40000821 <printrwerror>
400009b5:	83 c4 10             	add    $0x10,%esp
400009b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
400009bb:	c9                   	leave  
400009bc:	c3                   	ret    

400009bd <fmkfifo>:
400009bd:	55                   	push   %ebp
400009be:	89 e5                	mov    %esp,%ebp
400009c0:	83 ec 28             	sub    $0x28,%esp
400009c3:	8b 45 08             	mov    0x8(%ebp),%eax
400009c6:	c7 45 e0 0e 00 00 00 	movl   $0xe,-0x20(%ebp)
400009cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400009d0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400009d7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400009de:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400009e5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400009ec:	83 ec 0c             	sub    $0xc,%esp
400009ef:	8d 45 e0             	lea    -0x20(%ebp),%eax
400009f2:	50                   	push   %eax
400009f3:	e8 b4 0d 00 00       	call   400017ac <syscall>
400009f8:	83 c4 10             	add    $0x10,%esp
400009fb:	8b 45 e0             	mov    -0x20(%ebp),%eax
400009fe:	c9                   	leave  
400009ff:	c3                   	ret    

40000a00 <resolveHandle>:
40000a00:	55                   	push   %ebp
40000a01:	89 e5                	mov    %esp,%ebp
40000a03:	83 ec 08             	sub    $0x8,%esp
40000a06:	81 7d 08 fe 0f 00 00 	cmpl   $0xffe,0x8(%ebp)
40000a0d:	77 11                	ja     40000a20 <resolveHandle+0x20>
40000a0f:	83 ec 0c             	sub    $0xc,%esp
40000a12:	ff 75 08             	pushl  0x8(%ebp)
40000a15:	e8 76 fc ff ff       	call   40000690 <getpmhandle>
40000a1a:	83 c4 10             	add    $0x10,%esp
40000a1d:	89 45 08             	mov    %eax,0x8(%ebp)
40000a20:	8b 45 08             	mov    0x8(%ebp),%eax
40000a23:	c9                   	leave  
40000a24:	c3                   	ret    

40000a25 <fgetc>:
40000a25:	55                   	push   %ebp
40000a26:	89 e5                	mov    %esp,%ebp
40000a28:	83 ec 18             	sub    $0x18,%esp
40000a2b:	83 ec 0c             	sub    $0xc,%esp
40000a2e:	ff 75 08             	pushl  0x8(%ebp)
40000a31:	e8 ca ff ff ff       	call   40000a00 <resolveHandle>
40000a36:	83 c4 10             	add    $0x10,%esp
40000a39:	89 45 08             	mov    %eax,0x8(%ebp)
40000a3c:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
40000a40:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40000a44:	74 14                	je     40000a5a <fgetc+0x35>
40000a46:	83 ec 04             	sub    $0x4,%esp
40000a49:	6a 01                	push   $0x1
40000a4b:	8d 45 f7             	lea    -0x9(%ebp),%eax
40000a4e:	50                   	push   %eax
40000a4f:	ff 75 08             	pushl  0x8(%ebp)
40000a52:	e8 0f ff ff ff       	call   40000966 <fread>
40000a57:	83 c4 10             	add    $0x10,%esp
40000a5a:	8a 45 f7             	mov    -0x9(%ebp),%al
40000a5d:	c9                   	leave  
40000a5e:	c3                   	ret    

40000a5f <fgets>:
40000a5f:	55                   	push   %ebp
40000a60:	89 e5                	mov    %esp,%ebp
40000a62:	53                   	push   %ebx
40000a63:	83 ec 14             	sub    $0x14,%esp
40000a66:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000a6d:	eb 38                	jmp    40000aa7 <fgets+0x48>
40000a6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000a72:	89 c3                	mov    %eax,%ebx
40000a74:	03 5d 08             	add    0x8(%ebp),%ebx
40000a77:	83 ec 0c             	sub    $0xc,%esp
40000a7a:	ff 75 10             	pushl  0x10(%ebp)
40000a7d:	e8 a3 ff ff ff       	call   40000a25 <fgetc>
40000a82:	83 c4 10             	add    $0x10,%esp
40000a85:	88 03                	mov    %al,(%ebx)
40000a87:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000a8a:	03 45 08             	add    0x8(%ebp),%eax
40000a8d:	8a 00                	mov    (%eax),%al
40000a8f:	84 c0                	test   %al,%al
40000a91:	74 0c                	je     40000a9f <fgets+0x40>
40000a93:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000a96:	03 45 08             	add    0x8(%ebp),%eax
40000a99:	8a 00                	mov    (%eax),%al
40000a9b:	84 c0                	test   %al,%al
40000a9d:	75 05                	jne    40000aa4 <fgets+0x45>
40000a9f:	8b 45 08             	mov    0x8(%ebp),%eax
40000aa2:	eb 18                	jmp    40000abc <fgets+0x5d>
40000aa4:	ff 45 f4             	incl   -0xc(%ebp)
40000aa7:	8b 45 0c             	mov    0xc(%ebp),%eax
40000aaa:	48                   	dec    %eax
40000aab:	3b 45 f4             	cmp    -0xc(%ebp),%eax
40000aae:	7f bf                	jg     40000a6f <fgets+0x10>
40000ab0:	8b 45 0c             	mov    0xc(%ebp),%eax
40000ab3:	03 45 08             	add    0x8(%ebp),%eax
40000ab6:	c6 00 00             	movb   $0x0,(%eax)
40000ab9:	8b 45 08             	mov    0x8(%ebp),%eax
40000abc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
40000abf:	c9                   	leave  
40000ac0:	c3                   	ret    

40000ac1 <getc>:
40000ac1:	55                   	push   %ebp
40000ac2:	89 e5                	mov    %esp,%ebp
40000ac4:	83 ec 08             	sub    $0x8,%esp
40000ac7:	83 ec 0c             	sub    $0xc,%esp
40000aca:	ff 75 08             	pushl  0x8(%ebp)
40000acd:	e8 53 ff ff ff       	call   40000a25 <fgetc>
40000ad2:	83 c4 10             	add    $0x10,%esp
40000ad5:	c9                   	leave  
40000ad6:	c3                   	ret    

40000ad7 <getchar>:
40000ad7:	55                   	push   %ebp
40000ad8:	89 e5                	mov    %esp,%ebp
40000ada:	83 ec 08             	sub    $0x8,%esp
40000add:	83 ec 0c             	sub    $0xc,%esp
40000ae0:	6a 01                	push   $0x1
40000ae2:	e8 3e ff ff ff       	call   40000a25 <fgetc>
40000ae7:	83 c4 10             	add    $0x10,%esp
40000aea:	c9                   	leave  
40000aeb:	c3                   	ret    

40000aec <getln>:
40000aec:	55                   	push   %ebp
40000aed:	89 e5                	mov    %esp,%ebp
40000aef:	83 ec 18             	sub    $0x18,%esp
40000af2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000af9:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
40000afd:	eb 5f                	jmp    40000b5e <getln+0x72>
40000aff:	80 7d f7 0a          	cmpb   $0xa,-0x9(%ebp)
40000b03:	75 0f                	jne    40000b14 <getln+0x28>
40000b05:	83 ec 0c             	sub    $0xc,%esp
40000b08:	6a 0a                	push   $0xa
40000b0a:	e8 c0 00 00 00       	call   40000bcf <putchar>
40000b0f:	83 c4 10             	add    $0x10,%esp
40000b12:	eb 60                	jmp    40000b74 <getln+0x88>
40000b14:	80 7d f7 08          	cmpb   $0x8,-0x9(%ebp)
40000b18:	75 24                	jne    40000b3e <getln+0x52>
40000b1a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
40000b1e:	74 10                	je     40000b30 <getln+0x44>
40000b20:	ff 4d f0             	decl   -0x10(%ebp)
40000b23:	83 ec 0c             	sub    $0xc,%esp
40000b26:	6a 08                	push   $0x8
40000b28:	e8 a2 00 00 00       	call   40000bcf <putchar>
40000b2d:	83 c4 10             	add    $0x10,%esp
40000b30:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000b33:	8b 55 08             	mov    0x8(%ebp),%edx
40000b36:	8d 04 02             	lea    (%edx,%eax,1),%eax
40000b39:	c6 00 00             	movb   $0x0,(%eax)
40000b3c:	eb 20                	jmp    40000b5e <getln+0x72>
40000b3e:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000b41:	8b 55 08             	mov    0x8(%ebp),%edx
40000b44:	01 c2                	add    %eax,%edx
40000b46:	8a 45 f7             	mov    -0x9(%ebp),%al
40000b49:	88 02                	mov    %al,(%edx)
40000b4b:	0f be 45 f7          	movsbl -0x9(%ebp),%eax
40000b4f:	83 ec 0c             	sub    $0xc,%esp
40000b52:	50                   	push   %eax
40000b53:	e8 77 00 00 00       	call   40000bcf <putchar>
40000b58:	83 c4 10             	add    $0x10,%esp
40000b5b:	ff 45 f0             	incl   -0x10(%ebp)
40000b5e:	83 ec 0c             	sub    $0xc,%esp
40000b61:	6a 01                	push   $0x1
40000b63:	e8 bd fe ff ff       	call   40000a25 <fgetc>
40000b68:	83 c4 10             	add    $0x10,%esp
40000b6b:	88 45 f7             	mov    %al,-0x9(%ebp)
40000b6e:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)
40000b72:	75 8b                	jne    40000aff <getln+0x13>
40000b74:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000b77:	8b 55 08             	mov    0x8(%ebp),%edx
40000b7a:	8d 04 02             	lea    (%edx,%eax,1),%eax
40000b7d:	c6 00 00             	movb   $0x0,(%eax)
40000b80:	8b 45 08             	mov    0x8(%ebp),%eax
40000b83:	c9                   	leave  
40000b84:	c3                   	ret    

40000b85 <kputc>:
40000b85:	55                   	push   %ebp
40000b86:	89 e5                	mov    %esp,%ebp
40000b88:	83 ec 38             	sub    $0x38,%esp
40000b8b:	8b 45 08             	mov    0x8(%ebp),%eax
40000b8e:	88 45 d4             	mov    %al,-0x2c(%ebp)
40000b91:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
40000b95:	c7 45 e0 c9 00 00 00 	movl   $0xc9,-0x20(%ebp)
40000b9c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000b9f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000ba6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000bad:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000bb4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000bbb:	83 ec 0c             	sub    $0xc,%esp
40000bbe:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000bc1:	50                   	push   %eax
40000bc2:	e8 e5 0b 00 00       	call   400017ac <syscall>
40000bc7:	83 c4 10             	add    $0x10,%esp
40000bca:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000bcd:	c9                   	leave  
40000bce:	c3                   	ret    

40000bcf <putchar>:
40000bcf:	55                   	push   %ebp
40000bd0:	89 e5                	mov    %esp,%ebp
40000bd2:	83 ec 18             	sub    $0x18,%esp
40000bd5:	8b 45 08             	mov    0x8(%ebp),%eax
40000bd8:	88 45 f4             	mov    %al,-0xc(%ebp)
40000bdb:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
40000bdf:	83 ec 08             	sub    $0x8,%esp
40000be2:	6a 00                	push   $0x0
40000be4:	50                   	push   %eax
40000be5:	e8 26 00 00 00       	call   40000c10 <fputc>
40000bea:	83 c4 10             	add    $0x10,%esp
40000bed:	c9                   	leave  
40000bee:	c3                   	ret    

40000bef <putc>:
40000bef:	55                   	push   %ebp
40000bf0:	89 e5                	mov    %esp,%ebp
40000bf2:	83 ec 18             	sub    $0x18,%esp
40000bf5:	8b 45 08             	mov    0x8(%ebp),%eax
40000bf8:	88 45 f4             	mov    %al,-0xc(%ebp)
40000bfb:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
40000bff:	83 ec 08             	sub    $0x8,%esp
40000c02:	ff 75 0c             	pushl  0xc(%ebp)
40000c05:	50                   	push   %eax
40000c06:	e8 05 00 00 00       	call   40000c10 <fputc>
40000c0b:	83 c4 10             	add    $0x10,%esp
40000c0e:	c9                   	leave  
40000c0f:	c3                   	ret    

40000c10 <fputc>:
40000c10:	55                   	push   %ebp
40000c11:	89 e5                	mov    %esp,%ebp
40000c13:	83 ec 18             	sub    $0x18,%esp
40000c16:	8b 45 08             	mov    0x8(%ebp),%eax
40000c19:	88 45 f4             	mov    %al,-0xc(%ebp)
40000c1c:	83 ec 0c             	sub    $0xc,%esp
40000c1f:	ff 75 0c             	pushl  0xc(%ebp)
40000c22:	e8 d9 fd ff ff       	call   40000a00 <resolveHandle>
40000c27:	83 c4 10             	add    $0x10,%esp
40000c2a:	89 45 0c             	mov    %eax,0xc(%ebp)
40000c2d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
40000c31:	74 16                	je     40000c49 <fputc+0x39>
40000c33:	83 ec 04             	sub    $0x4,%esp
40000c36:	6a 01                	push   $0x1
40000c38:	8d 45 f4             	lea    -0xc(%ebp),%eax
40000c3b:	50                   	push   %eax
40000c3c:	ff 75 0c             	pushl  0xc(%ebp)
40000c3f:	e8 8a fc ff ff       	call   400008ce <fwrite>
40000c44:	83 c4 10             	add    $0x10,%esp
40000c47:	eb 12                	jmp    40000c5b <fputc+0x4b>
40000c49:	8a 45 f4             	mov    -0xc(%ebp),%al
40000c4c:	0f be c0             	movsbl %al,%eax
40000c4f:	83 ec 0c             	sub    $0xc,%esp
40000c52:	50                   	push   %eax
40000c53:	e8 2d ff ff ff       	call   40000b85 <kputc>
40000c58:	83 c4 10             	add    $0x10,%esp
40000c5b:	c9                   	leave  
40000c5c:	c3                   	ret    

40000c5d <kputs>:
40000c5d:	55                   	push   %ebp
40000c5e:	89 e5                	mov    %esp,%ebp
40000c60:	83 ec 28             	sub    $0x28,%esp
40000c63:	8b 45 08             	mov    0x8(%ebp),%eax
40000c66:	c7 45 e0 ca 00 00 00 	movl   $0xca,-0x20(%ebp)
40000c6d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000c70:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000c77:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000c7e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000c85:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000c8c:	83 ec 0c             	sub    $0xc,%esp
40000c8f:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000c92:	50                   	push   %eax
40000c93:	e8 14 0b 00 00       	call   400017ac <syscall>
40000c98:	83 c4 10             	add    $0x10,%esp
40000c9b:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000c9e:	c9                   	leave  
40000c9f:	c3                   	ret    

40000ca0 <puts>:
40000ca0:	55                   	push   %ebp
40000ca1:	89 e5                	mov    %esp,%ebp
40000ca3:	83 ec 08             	sub    $0x8,%esp
40000ca6:	83 ec 08             	sub    $0x8,%esp
40000ca9:	6a 00                	push   $0x0
40000cab:	ff 75 08             	pushl  0x8(%ebp)
40000cae:	e8 05 00 00 00       	call   40000cb8 <fputs>
40000cb3:	83 c4 10             	add    $0x10,%esp
40000cb6:	c9                   	leave  
40000cb7:	c3                   	ret    

40000cb8 <fputs>:
40000cb8:	55                   	push   %ebp
40000cb9:	89 e5                	mov    %esp,%ebp
40000cbb:	83 ec 08             	sub    $0x8,%esp
40000cbe:	83 ec 0c             	sub    $0xc,%esp
40000cc1:	ff 75 0c             	pushl  0xc(%ebp)
40000cc4:	e8 37 fd ff ff       	call   40000a00 <resolveHandle>
40000cc9:	83 c4 10             	add    $0x10,%esp
40000ccc:	89 45 0c             	mov    %eax,0xc(%ebp)
40000ccf:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
40000cd3:	74 22                	je     40000cf7 <fputs+0x3f>
40000cd5:	83 ec 0c             	sub    $0xc,%esp
40000cd8:	ff 75 08             	pushl  0x8(%ebp)
40000cdb:	e8 7d 03 00 00       	call   4000105d <strlen>
40000ce0:	83 c4 10             	add    $0x10,%esp
40000ce3:	83 ec 04             	sub    $0x4,%esp
40000ce6:	50                   	push   %eax
40000ce7:	ff 75 08             	pushl  0x8(%ebp)
40000cea:	ff 75 0c             	pushl  0xc(%ebp)
40000ced:	e8 dc fb ff ff       	call   400008ce <fwrite>
40000cf2:	83 c4 10             	add    $0x10,%esp
40000cf5:	eb 0e                	jmp    40000d05 <fputs+0x4d>
40000cf7:	83 ec 0c             	sub    $0xc,%esp
40000cfa:	ff 75 08             	pushl  0x8(%ebp)
40000cfd:	e8 5b ff ff ff       	call   40000c5d <kputs>
40000d02:	83 c4 10             	add    $0x10,%esp
40000d05:	c9                   	leave  
40000d06:	c3                   	ret    

40000d07 <putn>:
40000d07:	55                   	push   %ebp
40000d08:	89 e5                	mov    %esp,%ebp
40000d0a:	83 ec 58             	sub    $0x58,%esp
40000d0d:	c7 45 ec c8 21 00 40 	movl   $0x400021c8,-0x14(%ebp)
40000d14:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000d1b:	83 7d 0c 24          	cmpl   $0x24,0xc(%ebp)
40000d1f:	7e 07                	jle    40000d28 <putn+0x21>
40000d21:	b8 00 00 00 00       	mov    $0x0,%eax
40000d26:	eb 59                	jmp    40000d81 <putn+0x7a>
40000d28:	8d 45 ab             	lea    -0x55(%ebp),%eax
40000d2b:	83 c0 40             	add    $0x40,%eax
40000d2e:	89 45 f0             	mov    %eax,-0x10(%ebp)
40000d31:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000d34:	c6 00 00             	movb   $0x0,(%eax)
40000d37:	ff 45 f4             	incl   -0xc(%ebp)
40000d3a:	ff 4d f0             	decl   -0x10(%ebp)
40000d3d:	8b 55 0c             	mov    0xc(%ebp),%edx
40000d40:	8b 45 08             	mov    0x8(%ebp),%eax
40000d43:	89 d1                	mov    %edx,%ecx
40000d45:	ba 00 00 00 00       	mov    $0x0,%edx
40000d4a:	f7 f1                	div    %ecx
40000d4c:	89 d0                	mov    %edx,%eax
40000d4e:	03 45 ec             	add    -0x14(%ebp),%eax
40000d51:	8a 10                	mov    (%eax),%dl
40000d53:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000d56:	88 10                	mov    %dl,(%eax)
40000d58:	8b 55 0c             	mov    0xc(%ebp),%edx
40000d5b:	8b 45 08             	mov    0x8(%ebp),%eax
40000d5e:	89 d1                	mov    %edx,%ecx
40000d60:	ba 00 00 00 00       	mov    $0x0,%edx
40000d65:	f7 f1                	div    %ecx
40000d67:	89 45 08             	mov    %eax,0x8(%ebp)
40000d6a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40000d6e:	75 c7                	jne    40000d37 <putn+0x30>
40000d70:	83 ec 0c             	sub    $0xc,%esp
40000d73:	ff 75 f0             	pushl  -0x10(%ebp)
40000d76:	e8 25 ff ff ff       	call   40000ca0 <puts>
40000d7b:	83 c4 10             	add    $0x10,%esp
40000d7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000d81:	c9                   	leave  
40000d82:	c3                   	ret    

40000d83 <printf>:
40000d83:	55                   	push   %ebp
40000d84:	89 e5                	mov    %esp,%ebp
40000d86:	83 ec 28             	sub    $0x28,%esp
40000d89:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000d90:	8d 45 0c             	lea    0xc(%ebp),%eax
40000d93:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000d96:	e9 4d 01 00 00       	jmp    40000ee8 <printf+0x165>
40000d9b:	8b 45 08             	mov    0x8(%ebp),%eax
40000d9e:	8a 00                	mov    (%eax),%al
40000da0:	3c 25                	cmp    $0x25,%al
40000da2:	0f 85 26 01 00 00    	jne    40000ece <printf+0x14b>
40000da8:	ff 45 08             	incl   0x8(%ebp)
40000dab:	8b 45 08             	mov    0x8(%ebp),%eax
40000dae:	8a 00                	mov    (%eax),%al
40000db0:	0f be c0             	movsbl %al,%eax
40000db3:	83 f8 70             	cmp    $0x70,%eax
40000db6:	0f 84 90 00 00 00    	je     40000e4c <printf+0xc9>
40000dbc:	83 f8 70             	cmp    $0x70,%eax
40000dbf:	7f 2e                	jg     40000def <printf+0x6c>
40000dc1:	83 f8 63             	cmp    $0x63,%eax
40000dc4:	0f 84 a5 00 00 00    	je     40000e6f <printf+0xec>
40000dca:	83 f8 63             	cmp    $0x63,%eax
40000dcd:	7f 16                	jg     40000de5 <printf+0x62>
40000dcf:	85 c0                	test   %eax,%eax
40000dd1:	0f 84 20 01 00 00    	je     40000ef7 <printf+0x174>
40000dd7:	83 f8 25             	cmp    $0x25,%eax
40000dda:	0f 84 b2 00 00 00    	je     40000e92 <printf+0x10f>
40000de0:	e9 c0 00 00 00       	jmp    40000ea5 <printf+0x122>
40000de5:	83 f8 64             	cmp    $0x64,%eax
40000de8:	74 3c                	je     40000e26 <printf+0xa3>
40000dea:	e9 b6 00 00 00       	jmp    40000ea5 <printf+0x122>
40000def:	83 f8 75             	cmp    $0x75,%eax
40000df2:	74 32                	je     40000e26 <printf+0xa3>
40000df4:	83 f8 78             	cmp    $0x78,%eax
40000df7:	74 53                	je     40000e4c <printf+0xc9>
40000df9:	83 f8 73             	cmp    $0x73,%eax
40000dfc:	0f 85 a3 00 00 00    	jne    40000ea5 <printf+0x122>
40000e02:	8b 45 e4             	mov    -0x1c(%ebp),%eax
40000e05:	8d 50 04             	lea    0x4(%eax),%edx
40000e08:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000e0b:	8b 00                	mov    (%eax),%eax
40000e0d:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000e10:	83 ec 0c             	sub    $0xc,%esp
40000e13:	ff 75 e8             	pushl  -0x18(%ebp)
40000e16:	e8 85 fe ff ff       	call   40000ca0 <puts>
40000e1b:	83 c4 10             	add    $0x10,%esp
40000e1e:	01 45 f4             	add    %eax,-0xc(%ebp)
40000e21:	e9 bf 00 00 00       	jmp    40000ee5 <printf+0x162>
40000e26:	8b 45 e4             	mov    -0x1c(%ebp),%eax
40000e29:	8d 50 04             	lea    0x4(%eax),%edx
40000e2c:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000e2f:	8b 00                	mov    (%eax),%eax
40000e31:	89 45 ec             	mov    %eax,-0x14(%ebp)
40000e34:	83 ec 08             	sub    $0x8,%esp
40000e37:	6a 0a                	push   $0xa
40000e39:	ff 75 ec             	pushl  -0x14(%ebp)
40000e3c:	e8 c6 fe ff ff       	call   40000d07 <putn>
40000e41:	83 c4 10             	add    $0x10,%esp
40000e44:	01 45 f4             	add    %eax,-0xc(%ebp)
40000e47:	e9 99 00 00 00       	jmp    40000ee5 <printf+0x162>
40000e4c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
40000e4f:	8d 50 04             	lea    0x4(%eax),%edx
40000e52:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000e55:	8b 00                	mov    (%eax),%eax
40000e57:	89 45 ec             	mov    %eax,-0x14(%ebp)
40000e5a:	83 ec 08             	sub    $0x8,%esp
40000e5d:	6a 10                	push   $0x10
40000e5f:	ff 75 ec             	pushl  -0x14(%ebp)
40000e62:	e8 a0 fe ff ff       	call   40000d07 <putn>
40000e67:	83 c4 10             	add    $0x10,%esp
40000e6a:	01 45 f4             	add    %eax,-0xc(%ebp)
40000e6d:	eb 76                	jmp    40000ee5 <printf+0x162>
40000e6f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
40000e72:	8d 50 04             	lea    0x4(%eax),%edx
40000e75:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000e78:	8b 00                	mov    (%eax),%eax
40000e7a:	88 45 f3             	mov    %al,-0xd(%ebp)
40000e7d:	0f be 45 f3          	movsbl -0xd(%ebp),%eax
40000e81:	83 ec 0c             	sub    $0xc,%esp
40000e84:	50                   	push   %eax
40000e85:	e8 45 fd ff ff       	call   40000bcf <putchar>
40000e8a:	83 c4 10             	add    $0x10,%esp
40000e8d:	01 45 f4             	add    %eax,-0xc(%ebp)
40000e90:	eb 53                	jmp    40000ee5 <printf+0x162>
40000e92:	83 ec 0c             	sub    $0xc,%esp
40000e95:	6a 25                	push   $0x25
40000e97:	e8 33 fd ff ff       	call   40000bcf <putchar>
40000e9c:	83 c4 10             	add    $0x10,%esp
40000e9f:	01 45 f4             	add    %eax,-0xc(%ebp)
40000ea2:	90                   	nop    
40000ea3:	eb 40                	jmp    40000ee5 <printf+0x162>
40000ea5:	83 ec 0c             	sub    $0xc,%esp
40000ea8:	6a 25                	push   $0x25
40000eaa:	e8 20 fd ff ff       	call   40000bcf <putchar>
40000eaf:	83 c4 10             	add    $0x10,%esp
40000eb2:	01 45 f4             	add    %eax,-0xc(%ebp)
40000eb5:	8b 45 08             	mov    0x8(%ebp),%eax
40000eb8:	8a 00                	mov    (%eax),%al
40000eba:	0f be c0             	movsbl %al,%eax
40000ebd:	83 ec 0c             	sub    $0xc,%esp
40000ec0:	50                   	push   %eax
40000ec1:	e8 09 fd ff ff       	call   40000bcf <putchar>
40000ec6:	83 c4 10             	add    $0x10,%esp
40000ec9:	01 45 f4             	add    %eax,-0xc(%ebp)
40000ecc:	eb 17                	jmp    40000ee5 <printf+0x162>
40000ece:	8b 45 08             	mov    0x8(%ebp),%eax
40000ed1:	8a 00                	mov    (%eax),%al
40000ed3:	0f be c0             	movsbl %al,%eax
40000ed6:	83 ec 0c             	sub    $0xc,%esp
40000ed9:	50                   	push   %eax
40000eda:	e8 f0 fc ff ff       	call   40000bcf <putchar>
40000edf:	83 c4 10             	add    $0x10,%esp
40000ee2:	01 45 f4             	add    %eax,-0xc(%ebp)
40000ee5:	ff 45 08             	incl   0x8(%ebp)
40000ee8:	8b 45 08             	mov    0x8(%ebp),%eax
40000eeb:	8a 00                	mov    (%eax),%al
40000eed:	84 c0                	test   %al,%al
40000eef:	0f 85 a6 fe ff ff    	jne    40000d9b <printf+0x18>
40000ef5:	eb 01                	jmp    40000ef8 <printf+0x175>
40000ef7:	90                   	nop    
40000ef8:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000efb:	c9                   	leave  
40000efc:	c3                   	ret    
40000efd:	00 00                	add    %al,(%eax)
	...

40000f00 <memset>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"
40000f00:	55                   	push   %ebp
40000f01:	89 e5                	mov    %esp,%ebp
40000f03:	83 ec 10             	sub    $0x10,%esp

40000f06:	8b 45 08             	mov    0x8(%ebp),%eax
40000f09:	89 45 fc             	mov    %eax,-0x4(%ebp)
int main(int argc, char* args[])
{
40000f0c:	eb 0d                	jmp    40000f1b <memset+0x1b>
    char epath[512];
40000f0e:	8b 45 0c             	mov    0xc(%ebp),%eax
40000f11:	88 c2                	mov    %al,%dl
40000f13:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000f16:	88 10                	mov    %dl,(%eax)
40000f18:	ff 45 fc             	incl   -0x4(%ebp)
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000f1b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
40000f1f:	0f 95 c0             	setne  %al
40000f22:	ff 4d 10             	decl   0x10(%ebp)
40000f25:	84 c0                	test   %al,%al
40000f27:	75 e5                	jne    40000f0e <memset+0xe>
    char epath[512];
    char instr[512];

    cd("ibin");
40000f29:	8b 45 08             	mov    0x8(%ebp),%eax

40000f2c:	c9                   	leave  
40000f2d:	c3                   	ret    

40000f2e <memcpy>:
    while(1) {
        getExecPath(epath);
40000f2e:	55                   	push   %ebp
40000f2f:	89 e5                	mov    %esp,%ebp
40000f31:	83 ec 10             	sub    $0x10,%esp
        printf("$%s> ", epath);
40000f34:	8b 45 08             	mov    0x8(%ebp),%eax
40000f37:	89 45 f8             	mov    %eax,-0x8(%ebp)
        getln(instr);
40000f3a:	8b 45 0c             	mov    0xc(%ebp),%eax
40000f3d:	89 45 fc             	mov    %eax,-0x4(%ebp)

        char* cmd = strtoknc(instr, " ");
40000f40:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
40000f44:	75 19                	jne    40000f5f <memcpy+0x31>
40000f46:	b8 00 00 00 00       	mov    $0x0,%eax
40000f4b:	eb 24                	jmp    40000f71 <memcpy+0x43>

        if(cmd != 0) {
            char* pargs[64];
40000f4d:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000f50:	8a 10                	mov    (%eax),%dl
40000f52:	8b 45 f8             	mov    -0x8(%ebp),%eax
40000f55:	88 10                	mov    %dl,(%eax)
40000f57:	ff 45 f8             	incl   -0x8(%ebp)
40000f5a:	ff 45 fc             	incl   -0x4(%ebp)
40000f5d:	eb 01                	jmp    40000f60 <memcpy+0x32>
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000f5f:	90                   	nop    
40000f60:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
40000f64:	0f 95 c0             	setne  %al
40000f67:	ff 4d 10             	decl   0x10(%ebp)
40000f6a:	84 c0                	test   %al,%al
40000f6c:	75 df                	jne    40000f4d <memcpy+0x1f>
            char* pargs[64];
            int n = 0;

            do {
40000f6e:	8b 45 08             	mov    0x8(%ebp),%eax
                pargs[n] = strtoknc(0, " ");
40000f71:	c9                   	leave  
40000f72:	c3                   	ret    

40000f73 <memcmp>:
                n++;
            } while(pargs[n-1] != 0);
40000f73:	55                   	push   %ebp
40000f74:	89 e5                	mov    %esp,%ebp
40000f76:	83 ec 10             	sub    $0x10,%esp

40000f79:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40000f7d:	75 0a                	jne    40000f89 <memcmp+0x16>
            if(!strcmp(cmd, "cd")) {
40000f7f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
40000f84:	e9 83 00 00 00       	jmp    4000100c <memcmp+0x99>
                if(pargs[0] != 0) {
40000f89:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
40000f8d:	75 07                	jne    40000f96 <memcmp+0x23>
                    cd((char*)pargs[0]);
40000f8f:	b8 01 00 00 00       	mov    $0x1,%eax
40000f94:	eb 76                	jmp    4000100c <memcmp+0x99>
                }
40000f96:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
40000f9a:	75 07                	jne    40000fa3 <memcmp+0x30>
                else
40000f9c:	b8 00 00 00 00       	mov    $0x0,%eax
40000fa1:	eb 69                	jmp    4000100c <memcmp+0x99>
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
40000fa3:	8b 45 08             	mov    0x8(%ebp),%eax
40000fa6:	89 45 f4             	mov    %eax,-0xc(%ebp)
                }
40000fa9:	8b 45 0c             	mov    0xc(%ebp),%eax
40000fac:	89 45 f8             	mov    %eax,-0x8(%ebp)

                continue;
40000faf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
40000fb6:	eb 47                	jmp    40000fff <memcmp+0x8c>
            }
40000fb8:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000fbb:	8b 55 f4             	mov    -0xc(%ebp),%edx
40000fbe:	8d 04 02             	lea    (%edx,%eax,1),%eax
40000fc1:	8a 10                	mov    (%eax),%dl
40000fc3:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000fc6:	8b 4d f8             	mov    -0x8(%ebp),%ecx
40000fc9:	8d 04 01             	lea    (%ecx,%eax,1),%eax
40000fcc:	8a 00                	mov    (%eax),%al
40000fce:	38 c2                	cmp    %al,%dl
40000fd0:	74 2a                	je     40000ffc <memcmp+0x89>

40000fd2:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000fd5:	8b 55 f4             	mov    -0xc(%ebp),%edx
40000fd8:	8d 04 02             	lea    (%edx,%eax,1),%eax
40000fdb:	8a 00                	mov    (%eax),%al
40000fdd:	ba 00 00 00 00       	mov    $0x0,%edx
40000fe2:	88 c2                	mov    %al,%dl
40000fe4:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000fe7:	8b 4d f8             	mov    -0x8(%ebp),%ecx
40000fea:	8d 04 01             	lea    (%ecx,%eax,1),%eax
40000fed:	8a 00                	mov    (%eax),%al
40000fef:	25 ff 00 00 00       	and    $0xff,%eax
40000ff4:	89 d1                	mov    %edx,%ecx
40000ff6:	29 c1                	sub    %eax,%ecx
40000ff8:	89 c8                	mov    %ecx,%eax
40000ffa:	eb 10                	jmp    4000100c <memcmp+0x99>
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
40000ffc:	ff 45 fc             	incl   -0x4(%ebp)
40000fff:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001002:	3b 45 10             	cmp    0x10(%ebp),%eax
40001005:	72 b1                	jb     40000fb8 <memcmp+0x45>
            }

            texec(instr, pargs);
        }
    }
40001007:	b8 00 00 00 00       	mov    $0x0,%eax

4000100c:	c9                   	leave  
4000100d:	c3                   	ret    

4000100e <strcmp>:
    return 0;
}
4000100e:	55                   	push   %ebp
4000100f:	89 e5                	mov    %esp,%ebp
40001011:	83 ec 18             	sub    $0x18,%esp
40001014:	83 ec 0c             	sub    $0xc,%esp
40001017:	ff 75 08             	pushl  0x8(%ebp)
4000101a:	e8 3e 00 00 00       	call   4000105d <strlen>
4000101f:	83 c4 10             	add    $0x10,%esp
40001022:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001025:	83 ec 0c             	sub    $0xc,%esp
40001028:	ff 75 0c             	pushl  0xc(%ebp)
4000102b:	e8 2d 00 00 00       	call   4000105d <strlen>
40001030:	83 c4 10             	add    $0x10,%esp
40001033:	89 45 f4             	mov    %eax,-0xc(%ebp)
40001036:	8b 55 f0             	mov    -0x10(%ebp),%edx
40001039:	8b 45 f4             	mov    -0xc(%ebp),%eax
4000103c:	39 d0                	cmp    %edx,%eax
4000103e:	7e 02                	jle    40001042 <strcmp+0x34>
40001040:	89 d0                	mov    %edx,%eax
40001042:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001045:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001048:	40                   	inc    %eax
40001049:	83 ec 04             	sub    $0x4,%esp
4000104c:	50                   	push   %eax
4000104d:	ff 75 0c             	pushl  0xc(%ebp)
40001050:	ff 75 08             	pushl  0x8(%ebp)
40001053:	e8 1b ff ff ff       	call   40000f73 <memcmp>
40001058:	83 c4 10             	add    $0x10,%esp
4000105b:	c9                   	leave  
4000105c:	c3                   	ret    

4000105d <strlen>:
4000105d:	55                   	push   %ebp
4000105e:	89 e5                	mov    %esp,%ebp
40001060:	83 ec 10             	sub    $0x10,%esp
40001063:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40001067:	75 07                	jne    40001070 <strlen+0x13>
40001069:	b8 00 00 00 00       	mov    $0x0,%eax
4000106e:	eb 1b                	jmp    4000108b <strlen+0x2e>
40001070:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
40001077:	eb 03                	jmp    4000107c <strlen+0x1f>
40001079:	ff 45 fc             	incl   -0x4(%ebp)
4000107c:	8b 45 fc             	mov    -0x4(%ebp),%eax
4000107f:	03 45 08             	add    0x8(%ebp),%eax
40001082:	8a 00                	mov    (%eax),%al
40001084:	84 c0                	test   %al,%al
40001086:	75 f1                	jne    40001079 <strlen+0x1c>
40001088:	8b 45 fc             	mov    -0x4(%ebp),%eax
4000108b:	c9                   	leave  
4000108c:	c3                   	ret    

4000108d <strcpy>:
4000108d:	55                   	push   %ebp
4000108e:	89 e5                	mov    %esp,%ebp
40001090:	ff 75 0c             	pushl  0xc(%ebp)
40001093:	e8 c5 ff ff ff       	call   4000105d <strlen>
40001098:	83 c4 04             	add    $0x4,%esp
4000109b:	40                   	inc    %eax
4000109c:	50                   	push   %eax
4000109d:	ff 75 0c             	pushl  0xc(%ebp)
400010a0:	ff 75 08             	pushl  0x8(%ebp)
400010a3:	e8 86 fe ff ff       	call   40000f2e <memcpy>
400010a8:	83 c4 0c             	add    $0xc,%esp
400010ab:	8b 45 08             	mov    0x8(%ebp),%eax
400010ae:	c9                   	leave  
400010af:	c3                   	ret    

400010b0 <strclone>:
400010b0:	55                   	push   %ebp
400010b1:	89 e5                	mov    %esp,%ebp
400010b3:	83 ec 18             	sub    $0x18,%esp
400010b6:	ff 75 08             	pushl  0x8(%ebp)
400010b9:	e8 9f ff ff ff       	call   4000105d <strlen>
400010be:	83 c4 04             	add    $0x4,%esp
400010c1:	40                   	inc    %eax
400010c2:	83 ec 0c             	sub    $0xc,%esp
400010c5:	50                   	push   %eax
400010c6:	e8 92 03 00 00       	call   4000145d <malloc>
400010cb:	83 c4 10             	add    $0x10,%esp
400010ce:	89 45 f4             	mov    %eax,-0xc(%ebp)
400010d1:	83 ec 08             	sub    $0x8,%esp
400010d4:	ff 75 08             	pushl  0x8(%ebp)
400010d7:	ff 75 f4             	pushl  -0xc(%ebp)
400010da:	e8 ae ff ff ff       	call   4000108d <strcpy>
400010df:	83 c4 10             	add    $0x10,%esp
400010e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
400010e5:	c9                   	leave  
400010e6:	c3                   	ret    

400010e7 <strtok>:
400010e7:	55                   	push   %ebp
400010e8:	89 e5                	mov    %esp,%ebp
400010ea:	83 ec 08             	sub    $0x8,%esp
400010ed:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
400010f1:	74 43                	je     40001136 <strtok+0x4f>
400010f3:	a1 04 32 00 40       	mov    0x40003204,%eax
400010f8:	85 c0                	test   %eax,%eax
400010fa:	74 11                	je     4000110d <strtok+0x26>
400010fc:	a1 04 32 00 40       	mov    0x40003204,%eax
40001101:	83 ec 0c             	sub    $0xc,%esp
40001104:	50                   	push   %eax
40001105:	e8 96 05 00 00       	call   400016a0 <free>
4000110a:	83 c4 10             	add    $0x10,%esp
4000110d:	83 ec 0c             	sub    $0xc,%esp
40001110:	ff 75 08             	pushl  0x8(%ebp)
40001113:	e8 98 ff ff ff       	call   400010b0 <strclone>
40001118:	83 c4 10             	add    $0x10,%esp
4000111b:	a3 04 32 00 40       	mov    %eax,0x40003204
40001120:	a1 04 32 00 40       	mov    0x40003204,%eax
40001125:	83 ec 08             	sub    $0x8,%esp
40001128:	ff 75 0c             	pushl  0xc(%ebp)
4000112b:	50                   	push   %eax
4000112c:	e8 17 00 00 00       	call   40001148 <strtoknc>
40001131:	83 c4 10             	add    $0x10,%esp
40001134:	eb 10                	jmp    40001146 <strtok+0x5f>
40001136:	83 ec 08             	sub    $0x8,%esp
40001139:	ff 75 0c             	pushl  0xc(%ebp)
4000113c:	6a 00                	push   $0x0
4000113e:	e8 05 00 00 00       	call   40001148 <strtoknc>
40001143:	83 c4 10             	add    $0x10,%esp
40001146:	c9                   	leave  
40001147:	c3                   	ret    

40001148 <strtoknc>:
40001148:	55                   	push   %ebp
40001149:	89 e5                	mov    %esp,%ebp
4000114b:	83 ec 10             	sub    $0x10,%esp
4000114e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40001155:	ff 75 0c             	pushl  0xc(%ebp)
40001158:	e8 00 ff ff ff       	call   4000105d <strlen>
4000115d:	83 c4 04             	add    $0x4,%esp
40001160:	89 45 f8             	mov    %eax,-0x8(%ebp)
40001163:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
40001167:	75 0a                	jne    40001173 <strtoknc+0x2b>
40001169:	b8 00 00 00 00       	mov    $0x0,%eax
4000116e:	e9 e0 00 00 00       	jmp    40001253 <strtoknc+0x10b>
40001173:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40001177:	75 13                	jne    4000118c <strtoknc+0x44>
40001179:	a1 00 32 00 40       	mov    0x40003200,%eax
4000117e:	85 c0                	test   %eax,%eax
40001180:	75 0a                	jne    4000118c <strtoknc+0x44>
40001182:	b8 00 00 00 00       	mov    $0x0,%eax
40001187:	e9 c7 00 00 00       	jmp    40001253 <strtoknc+0x10b>
4000118c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40001190:	74 08                	je     4000119a <strtoknc+0x52>
40001192:	8b 45 08             	mov    0x8(%ebp),%eax
40001195:	a3 00 32 00 40       	mov    %eax,0x40003200
4000119a:	a1 00 32 00 40       	mov    0x40003200,%eax
4000119f:	89 45 fc             	mov    %eax,-0x4(%ebp)
400011a2:	eb 01                	jmp    400011a5 <strtoknc+0x5d>
400011a4:	90                   	nop    
400011a5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400011ac:	eb 19                	jmp    400011c7 <strtoknc+0x7f>
400011ae:	8b 45 fc             	mov    -0x4(%ebp),%eax
400011b1:	8a 10                	mov    (%eax),%dl
400011b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
400011b6:	03 45 0c             	add    0xc(%ebp),%eax
400011b9:	8a 00                	mov    (%eax),%al
400011bb:	38 c2                	cmp    %al,%dl
400011bd:	75 05                	jne    400011c4 <strtoknc+0x7c>
400011bf:	ff 45 fc             	incl   -0x4(%ebp)
400011c2:	eb 0b                	jmp    400011cf <strtoknc+0x87>
400011c4:	ff 45 f4             	incl   -0xc(%ebp)
400011c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
400011ca:	3b 45 f8             	cmp    -0x8(%ebp),%eax
400011cd:	7c df                	jl     400011ae <strtoknc+0x66>
400011cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
400011d2:	3b 45 f8             	cmp    -0x8(%ebp),%eax
400011d5:	75 cd                	jne    400011a4 <strtoknc+0x5c>
400011d7:	8b 45 fc             	mov    -0x4(%ebp),%eax
400011da:	a3 00 32 00 40       	mov    %eax,0x40003200
400011df:	a1 00 32 00 40       	mov    0x40003200,%eax
400011e4:	8a 00                	mov    (%eax),%al
400011e6:	84 c0                	test   %al,%al
400011e8:	75 57                	jne    40001241 <strtoknc+0xf9>
400011ea:	c7 05 00 32 00 40 00 	movl   $0x0,0x40003200
400011f1:	00 00 00 
400011f4:	a1 00 32 00 40       	mov    0x40003200,%eax
400011f9:	eb 58                	jmp    40001253 <strtoknc+0x10b>
400011fb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40001202:	eb 20                	jmp    40001224 <strtoknc+0xdc>
40001204:	a1 00 32 00 40       	mov    0x40003200,%eax
40001209:	8a 10                	mov    (%eax),%dl
4000120b:	8b 45 f4             	mov    -0xc(%ebp),%eax
4000120e:	03 45 0c             	add    0xc(%ebp),%eax
40001211:	8a 00                	mov    (%eax),%al
40001213:	38 c2                	cmp    %al,%dl
40001215:	75 0a                	jne    40001221 <strtoknc+0xd9>
40001217:	a1 00 32 00 40       	mov    0x40003200,%eax
4000121c:	c6 00 00             	movb   $0x0,(%eax)
4000121f:	eb 0b                	jmp    4000122c <strtoknc+0xe4>
40001221:	ff 45 f4             	incl   -0xc(%ebp)
40001224:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001227:	3b 45 f8             	cmp    -0x8(%ebp),%eax
4000122a:	7c d8                	jl     40001204 <strtoknc+0xbc>
4000122c:	a1 00 32 00 40       	mov    0x40003200,%eax
40001231:	40                   	inc    %eax
40001232:	a3 00 32 00 40       	mov    %eax,0x40003200
40001237:	8b 45 f4             	mov    -0xc(%ebp),%eax
4000123a:	3b 45 f8             	cmp    -0x8(%ebp),%eax
4000123d:	7c 10                	jl     4000124f <strtoknc+0x107>
4000123f:	eb 01                	jmp    40001242 <strtoknc+0xfa>
40001241:	90                   	nop    
40001242:	a1 00 32 00 40       	mov    0x40003200,%eax
40001247:	8a 00                	mov    (%eax),%al
40001249:	84 c0                	test   %al,%al
4000124b:	75 ae                	jne    400011fb <strtoknc+0xb3>
4000124d:	eb 01                	jmp    40001250 <strtoknc+0x108>
4000124f:	90                   	nop    
40001250:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001253:	c9                   	leave  
40001254:	c3                   	ret    
40001255:	00 00                	add    %al,(%eax)
	...

40001258 <remove_from_list>:
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
    char epath[512];
40001258:	55                   	push   %ebp
40001259:	89 e5                	mov    %esp,%ebp
4000125b:	83 ec 10             	sub    $0x10,%esp
    char instr[512];
4000125e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)

40001265:	8b 45 08             	mov    0x8(%ebp),%eax
40001268:	8b 00                	mov    (%eax),%eax
4000126a:	89 45 fc             	mov    %eax,-0x4(%ebp)
    cd("ibin");

4000126d:	eb 38                	jmp    400012a7 <remove_from_list+0x4f>
    while(1) {
4000126f:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001272:	3b 45 0c             	cmp    0xc(%ebp),%eax
40001275:	75 21                	jne    40001298 <remove_from_list+0x40>
        getExecPath(epath);
40001277:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
4000127b:	75 0d                	jne    4000128a <remove_from_list+0x32>
        printf("$%s> ", epath);
4000127d:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001280:	8b 50 08             	mov    0x8(%eax),%edx
40001283:	8b 45 08             	mov    0x8(%ebp),%eax
40001286:	89 10                	mov    %edx,(%eax)
        getln(instr);
40001288:	eb 23                	jmp    400012ad <remove_from_list+0x55>

        char* cmd = strtoknc(instr, " ");
4000128a:	8b 45 fc             	mov    -0x4(%ebp),%eax
4000128d:	8b 50 08             	mov    0x8(%eax),%edx
40001290:	8b 45 f8             	mov    -0x8(%ebp),%eax
40001293:	89 50 08             	mov    %edx,0x8(%eax)

40001296:	eb 15                	jmp    400012ad <remove_from_list+0x55>
        if(cmd != 0) {
            char* pargs[64];
            int n = 0;
40001298:	8b 45 fc             	mov    -0x4(%ebp),%eax
4000129b:	89 45 f8             	mov    %eax,-0x8(%ebp)

4000129e:	8b 45 fc             	mov    -0x4(%ebp),%eax
400012a1:	8b 40 08             	mov    0x8(%eax),%eax
400012a4:	89 45 fc             	mov    %eax,-0x4(%ebp)
{
    char epath[512];
    char instr[512];

    cd("ibin");

400012a7:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
400012ab:	75 c2                	jne    4000126f <remove_from_list+0x17>
        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
400012ad:	c9                   	leave  
400012ae:	c3                   	ret    

400012af <append_to_list>:
                n++;
            } while(pargs[n-1] != 0);

400012af:	55                   	push   %ebp
400012b0:	89 e5                	mov    %esp,%ebp
            if(!strcmp(cmd, "cd")) {
400012b2:	8b 45 08             	mov    0x8(%ebp),%eax
400012b5:	8b 10                	mov    (%eax),%edx
400012b7:	8b 45 0c             	mov    0xc(%ebp),%eax
400012ba:	89 50 08             	mov    %edx,0x8(%eax)
                if(pargs[0] != 0) {
400012bd:	8b 45 08             	mov    0x8(%ebp),%eax
400012c0:	8b 55 0c             	mov    0xc(%ebp),%edx
400012c3:	89 10                	mov    %edx,(%eax)
                    cd((char*)pargs[0]);
400012c5:	5d                   	pop    %ebp
400012c6:	c3                   	ret    

400012c7 <pop_from_list>:
                }
                else
400012c7:	55                   	push   %ebp
400012c8:	89 e5                	mov    %esp,%ebp
400012ca:	83 ec 10             	sub    $0x10,%esp
                {
400012cd:	8b 45 08             	mov    0x8(%ebp),%eax
400012d0:	8b 00                	mov    (%eax),%eax
400012d2:	85 c0                	test   %eax,%eax
400012d4:	75 07                	jne    400012dd <pop_from_list+0x16>
                    printf("cd: usage: \"cd [PATH)\"\n");
400012d6:	b8 00 00 00 00       	mov    $0x0,%eax
400012db:	eb 19                	jmp    400012f6 <pop_from_list+0x2f>
                }
400012dd:	8b 45 08             	mov    0x8(%ebp),%eax
400012e0:	8b 00                	mov    (%eax),%eax
400012e2:	89 45 fc             	mov    %eax,-0x4(%ebp)

400012e5:	ff 75 fc             	pushl  -0x4(%ebp)
400012e8:	ff 75 08             	pushl  0x8(%ebp)
400012eb:	e8 68 ff ff ff       	call   40001258 <remove_from_list>
400012f0:	83 c4 08             	add    $0x8,%esp
                continue;
400012f3:	8b 45 fc             	mov    -0x4(%ebp),%eax
            }
400012f6:	c9                   	leave  
400012f7:	c3                   	ret    

400012f8 <allocate_unused_nodes>:

            texec(instr, pargs);
400012f8:	55                   	push   %ebp
400012f9:	89 e5                	mov    %esp,%ebp
400012fb:	83 ec 18             	sub    $0x18,%esp
        }
400012fe:	83 ec 0c             	sub    $0xc,%esp
40001301:	6a 01                	push   $0x1
40001303:	e8 e0 03 00 00       	call   400016e8 <vmm_alloc_cont>
40001308:	83 c4 10             	add    $0x10,%esp
4000130b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    }
4000130e:	83 ec 04             	sub    $0x4,%esp
40001311:	68 00 10 00 00       	push   $0x1000
40001316:	6a 00                	push   $0x0
40001318:	ff 75 f0             	pushl  -0x10(%ebp)
4000131b:	e8 e0 fb ff ff       	call   40000f00 <memset>
40001320:	83 c4 10             	add    $0x10,%esp

    return 0;
40001323:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
4000132a:	eb 23                	jmp    4000134f <allocate_unused_nodes+0x57>
}
4000132c:	8b 55 f4             	mov    -0xc(%ebp),%edx
4000132f:	89 d0                	mov    %edx,%eax
40001331:	01 c0                	add    %eax,%eax
40001333:	01 d0                	add    %edx,%eax
40001335:	c1 e0 02             	shl    $0x2,%eax
40001338:	03 45 f0             	add    -0x10(%ebp),%eax
4000133b:	83 ec 08             	sub    $0x8,%esp
4000133e:	50                   	push   %eax
4000133f:	68 08 32 00 40       	push   $0x40003208
40001344:	e8 66 ff ff ff       	call   400012af <append_to_list>
40001349:	83 c4 10             	add    $0x10,%esp

            texec(instr, pargs);
        }
    }

    return 0;
4000134c:	ff 45 f4             	incl   -0xc(%ebp)
4000134f:	81 7d f4 54 01 00 00 	cmpl   $0x154,-0xc(%ebp)
40001356:	76 d4                	jbe    4000132c <allocate_unused_nodes+0x34>
}
40001358:	c9                   	leave  
40001359:	c3                   	ret    

4000135a <pop_unused_node>:
4000135a:	55                   	push   %ebp
4000135b:	89 e5                	mov    %esp,%ebp
4000135d:	83 ec 18             	sub    $0x18,%esp
40001360:	68 08 32 00 40       	push   $0x40003208
40001365:	e8 5d ff ff ff       	call   400012c7 <pop_from_list>
4000136a:	83 c4 04             	add    $0x4,%esp
4000136d:	89 45 f4             	mov    %eax,-0xc(%ebp)
40001370:	eb 18                	jmp    4000138a <pop_unused_node+0x30>
40001372:	e8 81 ff ff ff       	call   400012f8 <allocate_unused_nodes>
40001377:	83 ec 0c             	sub    $0xc,%esp
4000137a:	68 08 32 00 40       	push   $0x40003208
4000137f:	e8 43 ff ff ff       	call   400012c7 <pop_from_list>
40001384:	83 c4 10             	add    $0x10,%esp
40001387:	89 45 f4             	mov    %eax,-0xc(%ebp)
4000138a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
4000138e:	74 e2                	je     40001372 <pop_unused_node+0x18>
40001390:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001393:	c9                   	leave  
40001394:	c3                   	ret    

40001395 <merge_into_frees>:
40001395:	55                   	push   %ebp
40001396:	89 e5                	mov    %esp,%ebp
40001398:	83 ec 10             	sub    $0x10,%esp
4000139b:	ff 75 08             	pushl  0x8(%ebp)
4000139e:	68 0c 32 00 40       	push   $0x4000320c
400013a3:	e8 b0 fe ff ff       	call   40001258 <remove_from_list>
400013a8:	83 c4 08             	add    $0x8,%esp
400013ab:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
400013b2:	a1 10 32 00 40       	mov    0x40003210,%eax
400013b7:	89 45 fc             	mov    %eax,-0x4(%ebp)
400013ba:	e9 82 00 00 00       	jmp    40001441 <merge_into_frees+0xac>
400013bf:	8b 45 fc             	mov    -0x4(%ebp),%eax
400013c2:	8b 50 04             	mov    0x4(%eax),%edx
400013c5:	8b 45 fc             	mov    -0x4(%ebp),%eax
400013c8:	8b 00                	mov    (%eax),%eax
400013ca:	01 c2                	add    %eax,%edx
400013cc:	8b 45 08             	mov    0x8(%ebp),%eax
400013cf:	8b 40 04             	mov    0x4(%eax),%eax
400013d2:	39 c2                	cmp    %eax,%edx
400013d4:	75 1e                	jne    400013f4 <merge_into_frees+0x5f>
400013d6:	8b 45 fc             	mov    -0x4(%ebp),%eax
400013d9:	8b 50 04             	mov    0x4(%eax),%edx
400013dc:	8b 45 08             	mov    0x8(%ebp),%eax
400013df:	89 50 04             	mov    %edx,0x4(%eax)
400013e2:	ff 75 fc             	pushl  -0x4(%ebp)
400013e5:	68 10 32 00 40       	push   $0x40003210
400013ea:	e8 69 fe ff ff       	call   40001258 <remove_from_list>
400013ef:	83 c4 08             	add    $0x8,%esp
400013f2:	eb b7                	jmp    400013ab <merge_into_frees+0x16>
400013f4:	8b 45 fc             	mov    -0x4(%ebp),%eax
400013f7:	8b 50 04             	mov    0x4(%eax),%edx
400013fa:	8b 45 08             	mov    0x8(%ebp),%eax
400013fd:	8b 48 04             	mov    0x4(%eax),%ecx
40001400:	8b 45 08             	mov    0x8(%ebp),%eax
40001403:	8b 00                	mov    (%eax),%eax
40001405:	8d 04 01             	lea    (%ecx,%eax,1),%eax
40001408:	39 c2                	cmp    %eax,%edx
4000140a:	75 26                	jne    40001432 <merge_into_frees+0x9d>
4000140c:	8b 45 08             	mov    0x8(%ebp),%eax
4000140f:	8b 10                	mov    (%eax),%edx
40001411:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001414:	8b 00                	mov    (%eax),%eax
40001416:	01 c2                	add    %eax,%edx
40001418:	8b 45 08             	mov    0x8(%ebp),%eax
4000141b:	89 10                	mov    %edx,(%eax)
4000141d:	ff 75 fc             	pushl  -0x4(%ebp)
40001420:	68 10 32 00 40       	push   $0x40003210
40001425:	e8 2e fe ff ff       	call   40001258 <remove_from_list>
4000142a:	83 c4 08             	add    $0x8,%esp
4000142d:	e9 79 ff ff ff       	jmp    400013ab <merge_into_frees+0x16>
40001432:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001435:	89 45 f8             	mov    %eax,-0x8(%ebp)
40001438:	8b 45 fc             	mov    -0x4(%ebp),%eax
4000143b:	8b 40 08             	mov    0x8(%eax),%eax
4000143e:	89 45 fc             	mov    %eax,-0x4(%ebp)
40001441:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
40001445:	0f 85 74 ff ff ff    	jne    400013bf <merge_into_frees+0x2a>
4000144b:	ff 75 08             	pushl  0x8(%ebp)
4000144e:	68 10 32 00 40       	push   $0x40003210
40001453:	e8 57 fe ff ff       	call   400012af <append_to_list>
40001458:	83 c4 08             	add    $0x8,%esp
4000145b:	c9                   	leave  
4000145c:	c3                   	ret    

4000145d <malloc>:
4000145d:	55                   	push   %ebp
4000145e:	89 e5                	mov    %esp,%ebp
40001460:	83 ec 28             	sub    $0x28,%esp
40001463:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
4000146a:	a1 10 32 00 40       	mov    0x40003210,%eax
4000146f:	89 45 dc             	mov    %eax,-0x24(%ebp)
40001472:	eb 19                	jmp    4000148d <malloc+0x30>
40001474:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001477:	8b 00                	mov    (%eax),%eax
40001479:	3b 45 08             	cmp    0x8(%ebp),%eax
4000147c:	73 17                	jae    40001495 <malloc+0x38>
4000147e:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001481:	89 45 d8             	mov    %eax,-0x28(%ebp)
40001484:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001487:	8b 40 08             	mov    0x8(%eax),%eax
4000148a:	89 45 dc             	mov    %eax,-0x24(%ebp)
4000148d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
40001491:	75 e1                	jne    40001474 <malloc+0x17>
40001493:	eb 01                	jmp    40001496 <malloc+0x39>
40001495:	90                   	nop    
40001496:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
4000149a:	0f 85 a6 00 00 00    	jne    40001546 <malloc+0xe9>
400014a0:	8b 45 08             	mov    0x8(%ebp),%eax
400014a3:	c1 e8 0c             	shr    $0xc,%eax
400014a6:	89 45 e0             	mov    %eax,-0x20(%ebp)
400014a9:	8b 45 08             	mov    0x8(%ebp),%eax
400014ac:	25 ff 0f 00 00       	and    $0xfff,%eax
400014b1:	85 c0                	test   %eax,%eax
400014b3:	74 03                	je     400014b8 <malloc+0x5b>
400014b5:	ff 45 e0             	incl   -0x20(%ebp)
400014b8:	83 ec 0c             	sub    $0xc,%esp
400014bb:	ff 75 e0             	pushl  -0x20(%ebp)
400014be:	e8 25 02 00 00       	call   400016e8 <vmm_alloc_cont>
400014c3:	83 c4 10             	add    $0x10,%esp
400014c6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400014c9:	e8 8c fe ff ff       	call   4000135a <pop_unused_node>
400014ce:	89 45 e8             	mov    %eax,-0x18(%ebp)
400014d1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
400014d4:	8b 45 e8             	mov    -0x18(%ebp),%eax
400014d7:	89 50 04             	mov    %edx,0x4(%eax)
400014da:	8b 45 e8             	mov    -0x18(%ebp),%eax
400014dd:	8b 55 08             	mov    0x8(%ebp),%edx
400014e0:	89 10                	mov    %edx,(%eax)
400014e2:	8b 45 e0             	mov    -0x20(%ebp),%eax
400014e5:	c1 e0 0c             	shl    $0xc,%eax
400014e8:	3b 45 08             	cmp    0x8(%ebp),%eax
400014eb:	76 3e                	jbe    4000152b <malloc+0xce>
400014ed:	e8 68 fe ff ff       	call   4000135a <pop_unused_node>
400014f2:	89 45 ec             	mov    %eax,-0x14(%ebp)
400014f5:	8b 45 e8             	mov    -0x18(%ebp),%eax
400014f8:	8b 50 04             	mov    0x4(%eax),%edx
400014fb:	8b 45 e8             	mov    -0x18(%ebp),%eax
400014fe:	8b 00                	mov    (%eax),%eax
40001500:	01 c2                	add    %eax,%edx
40001502:	8b 45 ec             	mov    -0x14(%ebp),%eax
40001505:	89 50 04             	mov    %edx,0x4(%eax)
40001508:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000150b:	c1 e0 0c             	shl    $0xc,%eax
4000150e:	89 c2                	mov    %eax,%edx
40001510:	2b 55 08             	sub    0x8(%ebp),%edx
40001513:	8b 45 ec             	mov    -0x14(%ebp),%eax
40001516:	89 10                	mov    %edx,(%eax)
40001518:	83 ec 08             	sub    $0x8,%esp
4000151b:	ff 75 ec             	pushl  -0x14(%ebp)
4000151e:	68 10 32 00 40       	push   $0x40003210
40001523:	e8 87 fd ff ff       	call   400012af <append_to_list>
40001528:	83 c4 10             	add    $0x10,%esp
4000152b:	83 ec 08             	sub    $0x8,%esp
4000152e:	ff 75 e8             	pushl  -0x18(%ebp)
40001531:	68 0c 32 00 40       	push   $0x4000320c
40001536:	e8 74 fd ff ff       	call   400012af <append_to_list>
4000153b:	83 c4 10             	add    $0x10,%esp
4000153e:	8b 45 e8             	mov    -0x18(%ebp),%eax
40001541:	8b 40 04             	mov    0x4(%eax),%eax
40001544:	eb 7b                	jmp    400015c1 <malloc+0x164>
40001546:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001549:	8b 00                	mov    (%eax),%eax
4000154b:	2b 45 08             	sub    0x8(%ebp),%eax
4000154e:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001551:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001554:	8b 55 08             	mov    0x8(%ebp),%edx
40001557:	89 10                	mov    %edx,(%eax)
40001559:	83 ec 08             	sub    $0x8,%esp
4000155c:	ff 75 dc             	pushl  -0x24(%ebp)
4000155f:	68 10 32 00 40       	push   $0x40003210
40001564:	e8 ef fc ff ff       	call   40001258 <remove_from_list>
40001569:	83 c4 10             	add    $0x10,%esp
4000156c:	83 ec 08             	sub    $0x8,%esp
4000156f:	ff 75 dc             	pushl  -0x24(%ebp)
40001572:	68 0c 32 00 40       	push   $0x4000320c
40001577:	e8 33 fd ff ff       	call   400012af <append_to_list>
4000157c:	83 c4 10             	add    $0x10,%esp
4000157f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
40001583:	74 36                	je     400015bb <malloc+0x15e>
40001585:	e8 d0 fd ff ff       	call   4000135a <pop_unused_node>
4000158a:	89 45 f4             	mov    %eax,-0xc(%ebp)
4000158d:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001590:	8b 50 04             	mov    0x4(%eax),%edx
40001593:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001596:	8b 00                	mov    (%eax),%eax
40001598:	01 c2                	add    %eax,%edx
4000159a:	8b 45 f4             	mov    -0xc(%ebp),%eax
4000159d:	89 50 04             	mov    %edx,0x4(%eax)
400015a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
400015a3:	8b 55 f0             	mov    -0x10(%ebp),%edx
400015a6:	89 10                	mov    %edx,(%eax)
400015a8:	83 ec 08             	sub    $0x8,%esp
400015ab:	ff 75 f4             	pushl  -0xc(%ebp)
400015ae:	68 10 32 00 40       	push   $0x40003210
400015b3:	e8 f7 fc ff ff       	call   400012af <append_to_list>
400015b8:	83 c4 10             	add    $0x10,%esp
400015bb:	8b 45 dc             	mov    -0x24(%ebp),%eax
400015be:	8b 40 04             	mov    0x4(%eax),%eax
400015c1:	c9                   	leave  
400015c2:	c3                   	ret    

400015c3 <calloc>:
400015c3:	55                   	push   %ebp
400015c4:	89 e5                	mov    %esp,%ebp
400015c6:	83 ec 18             	sub    $0x18,%esp
400015c9:	8b 45 08             	mov    0x8(%ebp),%eax
400015cc:	0f af 45 0c          	imul   0xc(%ebp),%eax
400015d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
400015d3:	83 ec 0c             	sub    $0xc,%esp
400015d6:	ff 75 f0             	pushl  -0x10(%ebp)
400015d9:	e8 7f fe ff ff       	call   4000145d <malloc>
400015de:	83 c4 10             	add    $0x10,%esp
400015e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
400015e4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
400015e8:	74 13                	je     400015fd <calloc+0x3a>
400015ea:	83 ec 04             	sub    $0x4,%esp
400015ed:	ff 75 f0             	pushl  -0x10(%ebp)
400015f0:	6a 00                	push   $0x0
400015f2:	ff 75 f4             	pushl  -0xc(%ebp)
400015f5:	e8 06 f9 ff ff       	call   40000f00 <memset>
400015fa:	83 c4 10             	add    $0x10,%esp
400015fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001600:	c9                   	leave  
40001601:	c3                   	ret    

40001602 <realloc>:
40001602:	55                   	push   %ebp
40001603:	89 e5                	mov    %esp,%ebp
40001605:	83 ec 18             	sub    $0x18,%esp
40001608:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000160f:	a1 0c 32 00 40       	mov    0x4000320c,%eax
40001614:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001617:	eb 7a                	jmp    40001693 <realloc+0x91>
40001619:	8b 45 f0             	mov    -0x10(%ebp),%eax
4000161c:	8b 50 04             	mov    0x4(%eax),%edx
4000161f:	8b 45 08             	mov    0x8(%ebp),%eax
40001622:	39 c2                	cmp    %eax,%edx
40001624:	75 5e                	jne    40001684 <realloc+0x82>
40001626:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
4000162a:	75 15                	jne    40001641 <realloc+0x3f>
4000162c:	83 ec 0c             	sub    $0xc,%esp
4000162f:	ff 75 08             	pushl  0x8(%ebp)
40001632:	e8 69 00 00 00       	call   400016a0 <free>
40001637:	83 c4 10             	add    $0x10,%esp
4000163a:	b8 00 00 00 00       	mov    $0x0,%eax
4000163f:	eb 5d                	jmp    4000169e <realloc+0x9c>
40001641:	83 ec 0c             	sub    $0xc,%esp
40001644:	ff 75 0c             	pushl  0xc(%ebp)
40001647:	e8 11 fe ff ff       	call   4000145d <malloc>
4000164c:	83 c4 10             	add    $0x10,%esp
4000164f:	89 45 f4             	mov    %eax,-0xc(%ebp)
40001652:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001655:	8b 10                	mov    (%eax),%edx
40001657:	8b 45 f0             	mov    -0x10(%ebp),%eax
4000165a:	8b 40 04             	mov    0x4(%eax),%eax
4000165d:	83 ec 04             	sub    $0x4,%esp
40001660:	52                   	push   %edx
40001661:	50                   	push   %eax
40001662:	ff 75 f4             	pushl  -0xc(%ebp)
40001665:	e8 c4 f8 ff ff       	call   40000f2e <memcpy>
4000166a:	83 c4 10             	add    $0x10,%esp
4000166d:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001670:	8b 40 04             	mov    0x4(%eax),%eax
40001673:	83 ec 0c             	sub    $0xc,%esp
40001676:	50                   	push   %eax
40001677:	e8 24 00 00 00       	call   400016a0 <free>
4000167c:	83 c4 10             	add    $0x10,%esp
4000167f:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001682:	eb 1a                	jmp    4000169e <realloc+0x9c>
40001684:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001687:	89 45 ec             	mov    %eax,-0x14(%ebp)
4000168a:	8b 45 f0             	mov    -0x10(%ebp),%eax
4000168d:	8b 40 08             	mov    0x8(%eax),%eax
40001690:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001693:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
40001697:	75 80                	jne    40001619 <realloc+0x17>
40001699:	b8 00 00 00 00       	mov    $0x0,%eax
4000169e:	c9                   	leave  
4000169f:	c3                   	ret    

400016a0 <free>:
400016a0:	55                   	push   %ebp
400016a1:	89 e5                	mov    %esp,%ebp
400016a3:	83 ec 10             	sub    $0x10,%esp
400016a6:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
400016ad:	a1 0c 32 00 40       	mov    0x4000320c,%eax
400016b2:	89 45 fc             	mov    %eax,-0x4(%ebp)
400016b5:	eb 29                	jmp    400016e0 <free+0x40>
400016b7:	8b 45 fc             	mov    -0x4(%ebp),%eax
400016ba:	8b 50 04             	mov    0x4(%eax),%edx
400016bd:	8b 45 08             	mov    0x8(%ebp),%eax
400016c0:	39 c2                	cmp    %eax,%edx
400016c2:	75 0d                	jne    400016d1 <free+0x31>
400016c4:	ff 75 fc             	pushl  -0x4(%ebp)
400016c7:	e8 c9 fc ff ff       	call   40001395 <merge_into_frees>
400016cc:	83 c4 04             	add    $0x4,%esp
400016cf:	eb 15                	jmp    400016e6 <free+0x46>
400016d1:	8b 45 fc             	mov    -0x4(%ebp),%eax
400016d4:	89 45 f8             	mov    %eax,-0x8(%ebp)
400016d7:	8b 45 fc             	mov    -0x4(%ebp),%eax
400016da:	8b 40 08             	mov    0x8(%eax),%eax
400016dd:	89 45 fc             	mov    %eax,-0x4(%ebp)
400016e0:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
400016e4:	75 d1                	jne    400016b7 <free+0x17>
400016e6:	c9                   	leave  
400016e7:	c3                   	ret    

400016e8 <vmm_alloc_cont>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
400016e8:	55                   	push   %ebp
400016e9:	89 e5                	mov    %esp,%ebp
400016eb:	83 ec 28             	sub    $0x28,%esp
int main(int argc, char* args[])
{
    char epath[512];
    char instr[512];

    cd("ibin");
400016ee:	c7 45 e0 cb 00 00 00 	movl   $0xcb,-0x20(%ebp)
400016f5:	8b 45 08             	mov    0x8(%ebp),%eax
400016f8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400016fb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001702:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40001709:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40001710:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    while(1) {
40001717:	83 ec 0c             	sub    $0xc,%esp
4000171a:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000171d:	50                   	push   %eax
4000171e:	e8 89 00 00 00       	call   400017ac <syscall>
40001723:	83 c4 10             	add    $0x10,%esp
        getExecPath(epath);
        printf("$%s> ", epath);
40001726:	8b 45 e0             	mov    -0x20(%ebp),%eax
        getln(instr);
40001729:	c9                   	leave  
4000172a:	c3                   	ret    

4000172b <vmm_free>:

        char* cmd = strtoknc(instr, " ");
4000172b:	55                   	push   %ebp
4000172c:	89 e5                	mov    %esp,%ebp
4000172e:	83 ec 28             	sub    $0x28,%esp

        if(cmd != 0) {
            char* pargs[64];
40001731:	8b 45 08             	mov    0x8(%ebp),%eax
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
40001734:	c7 45 e0 cc 00 00 00 	movl   $0xcc,-0x20(%ebp)
4000173b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000173e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001745:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000174c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40001753:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            } while(pargs[n-1] != 0);

4000175a:	83 ec 0c             	sub    $0xc,%esp
4000175d:	8d 45 e0             	lea    -0x20(%ebp),%eax
40001760:	50                   	push   %eax
40001761:	e8 46 00 00 00       	call   400017ac <syscall>
40001766:	83 c4 10             	add    $0x10,%esp
            if(!strcmp(cmd, "cd")) {
40001769:	c9                   	leave  
4000176a:	c3                   	ret    

4000176b <print_memstat>:
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
4000176b:	55                   	push   %ebp
4000176c:	89 e5                	mov    %esp,%ebp
4000176e:	83 ec 28             	sub    $0x28,%esp
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }
40001771:	c7 45 e0 cd 00 00 00 	movl   $0xcd,-0x20(%ebp)
40001778:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
4000177f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001786:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000178d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40001794:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

            texec(instr, pargs);
4000179b:	83 ec 0c             	sub    $0xc,%esp
4000179e:	8d 45 e0             	lea    -0x20(%ebp),%eax
400017a1:	50                   	push   %eax
400017a2:	e8 05 00 00 00       	call   400017ac <syscall>
400017a7:	83 c4 10             	add    $0x10,%esp
        }
400017aa:	c9                   	leave  
400017ab:	c3                   	ret    

400017ac <syscall>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
400017ac:	55                   	push   %ebp
400017ad:	89 e5                	mov    %esp,%ebp
400017af:	57                   	push   %edi
400017b0:	56                   	push   %esi
400017b1:	53                   	push   %ebx
400017b2:	83 ec 0c             	sub    $0xc,%esp
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400017b5:	8b 45 08             	mov    0x8(%ebp),%eax
400017b8:	8b 00                	mov    (%eax),%eax
400017ba:	89 45 ec             	mov    %eax,-0x14(%ebp)
        getExecPath(epath);
400017bd:	8b 55 08             	mov    0x8(%ebp),%edx
400017c0:	8b 5a 04             	mov    0x4(%edx),%ebx
        printf("$%s> ", epath);
400017c3:	8b 55 08             	mov    0x8(%ebp),%edx
400017c6:	8b 4a 08             	mov    0x8(%edx),%ecx
        getln(instr);
400017c9:	8b 55 08             	mov    0x8(%ebp),%edx
400017cc:	8b 52 0c             	mov    0xc(%edx),%edx
400017cf:	89 55 e8             	mov    %edx,-0x18(%ebp)

400017d2:	8b 75 08             	mov    0x8(%ebp),%esi
400017d5:	8b 76 10             	mov    0x10(%esi),%esi
        char* cmd = strtoknc(instr, " ");
400017d8:	8b 7d 08             	mov    0x8(%ebp),%edi
400017db:	8b 7f 14             	mov    0x14(%edi),%edi
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"
400017de:	8b 45 ec             	mov    -0x14(%ebp),%eax
400017e1:	8b 55 e8             	mov    -0x18(%ebp),%edx
400017e4:	cd 30                	int    $0x30
400017e6:	89 55 e8             	mov    %edx,-0x18(%ebp)
400017e9:	89 45 f0             	mov    %eax,-0x10(%ebp)
400017ec:	8b 45 08             	mov    0x8(%ebp),%eax
400017ef:	89 45 ec             	mov    %eax,-0x14(%ebp)
400017f2:	8b 45 f0             	mov    -0x10(%ebp),%eax
400017f5:	8b 55 ec             	mov    -0x14(%ebp),%edx
400017f8:	89 02                	mov    %eax,(%edx)
400017fa:	8b 45 08             	mov    0x8(%ebp),%eax
400017fd:	89 58 04             	mov    %ebx,0x4(%eax)
40001800:	8b 45 08             	mov    0x8(%ebp),%eax
40001803:	89 48 08             	mov    %ecx,0x8(%eax)
40001806:	8b 45 08             	mov    0x8(%ebp),%eax
40001809:	8b 55 e8             	mov    -0x18(%ebp),%edx
4000180c:	89 50 0c             	mov    %edx,0xc(%eax)
4000180f:	8b 45 08             	mov    0x8(%ebp),%eax
40001812:	89 70 10             	mov    %esi,0x10(%eax)
40001815:	8b 45 08             	mov    0x8(%ebp),%eax
40001818:	89 78 14             	mov    %edi,0x14(%eax)
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

4000181b:	83 c4 0c             	add    $0xc,%esp
4000181e:	5b                   	pop    %ebx
4000181f:	5e                   	pop    %esi
40001820:	5f                   	pop    %edi
40001821:	5d                   	pop    %ebp
40001822:	c3                   	ret    
