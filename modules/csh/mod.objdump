
../../initrfs/ibin/csh:     file format elf32-i386
../../initrfs/ibin/csh
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x400004e3

Program Header:
    LOAD off    0x00001000 vaddr 0x40000000 paddr 0x40000000 align 2**12
         filesz 0x000021e6 memsz 0x000021e6 flags r-x
    LOAD off    0x00004000 vaddr 0x40003000 paddr 0x40003000 align 2**12
         filesz 0x00000000 memsz 0x00000214 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000012bc  40000000  40000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000005c  40002000  40002000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rodata.str1.1 0000018a  4000205c  4000205c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000214  40003000  40003000  00004000  2**2
                  ALLOC
  4 .stab         000049e0  00000000  00000000  000031e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000007e  00000000  00000000  00007bc8  2**0
                  CONTENTS, READONLY
  6 .stabstr      000018a8  00000000  00000000  00007c46  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
40000000 l    d  .text	00000000 .text
40002000 l    d  .rodata	00000000 .rodata
4000205c l    d  .rodata.str1.1	00000000 .rodata.str1.1
40003000 l    d  .bss	00000000 .bss
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 csh.c
00000000 l    df *ABS*	00000000 process.c
40003000 l     O .bss	00000200 irq_handlers
40002044 l     O .rodata	00000018 C.7.1015
40000555 l     F .text	000000c0 _handle_rpc
00000000 l    df *ABS*	00000000 stdio.c
40000618 l     F .text	00000047 resolveHandle
40000ac8 l     F .text	0000004a printrwerror
40000915 l     F .text	0000003f putn
00000000 l    df *ABS*	00000000 string.c
00000000 l    df *ABS*	00000000 stdlib.c
40000fbc l     F .text	00000069 pop_unused_node
00000000 l    df *ABS*	00000000 vmmcall.c
00000000 l    df *ABS*	00000000 syscall.c
400002d9 g     F .text	0000003d getExecPath
400009cc g     F .text	00000014 putchar
40000d79 g     F .text	00000033 strcpy
4000035c g     F .text	0000003e yield
400009e0 g     F .text	000000e8 printf
4000126c g     F .text	00000050 syscall
40000bdd g     F .text	00000042 fgets
40000bd1 g     F .text	0000000c getc
40000ca8 g     F .text	00000026 memcpy
40000903 g     F .text	00000012 puts
4000039a g     F .text	0000003d pexists
40001025 g     F .text	000000f8 malloc
4000042f g     F .text	0000003d fetch_rpc_data
40000dac g     F .text	000000a5 strtoknc
4000026f g     F .text	0000003d changeExecPath
40003210 g     O .bss	00000004 first_free
400007b2 g     F .text	00000012 setstdout
4000117d g     F .text	00000034 calloc
40000233 g     F .text	0000003c getExecPathChild
4000122f g     F .text	0000003d vmm_alloc_cont
400001c1 g     F .text	0000003c exec
400004e3 g     F .text	00000072 _start
4000111d g     F .text	00000060 realloc
400004a6 g     F .text	0000003d set_rpc_handler
40000e8a g     F .text	00000052 strtok
40000cce g     F .text	00000047 memcmp
40000b12 g     F .text	00000085 fread
40003208 g     O .bss	00000004 first_unused
40000716 g     F .text	0000003c fopen
40000c8c g     F .text	0000001c memset
40000000 g     F .text	0000014d main
400006d9 g     F .text	0000003d fclose
40000bc2 g     F .text	0000000f getchar
40000c1f g     F .text	0000006c getln
40003204 g     O .bss	00000004 fr
4000069c g     F .text	0000003d favailable
400009b9 g     F .text	00000013 putc
40000d15 g     F .text	00000049 strcmp
40000b97 g     F .text	0000002b fgetc
40003200 g     O .bss	00000004 sp
400002ac g     F .text	0000002d cd
4000320c g     O .bss	00000004 first_used
40000954 g     F .text	00000065 fputc
40000802 g     F .text	00000093 fwrite
400007a0 g     F .text	00000012 setstdin
400001fd g     F .text	00000036 texec
40000e51 g     F .text	00000039 strclone
40000316 g     F .text	00000046 exit
400003d7 g     F .text	00000058 register_irq_handler
40000752 g     F .text	0000003c fopenpmhandle
400011f2 g     F .text	0000003d vmm_free
40000150 g     F .text	00000071 printFilesystemError
40000d5e g     F .text	0000001b strlen
400007c4 g     F .text	0000003e getLastVFSErr
40000895 g     F .text	0000006e fputs
4000065f g     F .text	0000003d fmkfifo
4000046c g     F .text	0000003a call_rpc
4000078e g     F .text	00000012 setstderr
400011b4 g     F .text	0000003e print_memstat
40000edc g     F .text	000000e0 free



Disassembly of section .text:

40000000 <main>:
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
40000004:	83 e4 f0             	and    $0xfffffff0,%esp
40000007:	ff 71 fc             	pushl  -0x4(%ecx)
4000000a:	55                   	push   %ebp
4000000b:	89 e5                	mov    %esp,%ebp
4000000d:	53                   	push   %ebx
4000000e:	51                   	push   %ecx
4000000f:	81 ec 10 05 00 00    	sub    $0x510,%esp
    char epath[512];
    char instr[512];

    cd("ibin");
40000015:	83 ec 0c             	sub    $0xc,%esp
40000018:	68 00 20 00 40       	push   $0x40002000
4000001d:	e8 8a 02 00 00       	call   400002ac <cd>
40000022:	83 c4 10             	add    $0x10,%esp
40000025:	eb 01                	jmp    40000028 <main+0x28>
                yield();
            }

            printf("\n");
        }
    }
40000027:	90                   	nop    
    char instr[512];

    cd("ibin");

    while(1) {
        getExecPath(epath);
40000028:	83 ec 0c             	sub    $0xc,%esp
4000002b:	8d 85 ec fd ff ff    	lea    -0x214(%ebp),%eax
40000031:	50                   	push   %eax
40000032:	e8 a2 02 00 00       	call   400002d9 <getExecPath>
40000037:	83 c4 10             	add    $0x10,%esp
        printf("$%s> ", epath);
4000003a:	83 ec 08             	sub    $0x8,%esp
4000003d:	8d 85 ec fd ff ff    	lea    -0x214(%ebp),%eax
40000043:	50                   	push   %eax
40000044:	68 05 20 00 40       	push   $0x40002005
40000049:	e8 92 09 00 00       	call   400009e0 <printf>
4000004e:	83 c4 10             	add    $0x10,%esp
        getln(instr);
40000051:	83 ec 0c             	sub    $0xc,%esp
40000054:	8d 85 ec fb ff ff    	lea    -0x414(%ebp),%eax
4000005a:	50                   	push   %eax
4000005b:	e8 bf 0b 00 00       	call   40000c1f <getln>
40000060:	83 c4 10             	add    $0x10,%esp

        char* cmd = strtoknc(instr, " ");
40000063:	83 ec 08             	sub    $0x8,%esp
40000066:	68 0b 20 00 40       	push   $0x4000200b
4000006b:	8d 85 ec fb ff ff    	lea    -0x414(%ebp),%eax
40000071:	50                   	push   %eax
40000072:	e8 35 0d 00 00       	call   40000dac <strtoknc>
40000077:	83 c4 10             	add    $0x10,%esp
4000007a:	89 45 ec             	mov    %eax,-0x14(%ebp)

        if(cmd != 0) {
4000007d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
40000081:	74 a4                	je     40000027 <main+0x27>
            char* pargs[64];
            int n = 0;
40000083:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)

            do {
                pargs[n] = strtoknc(0, " ");
4000008a:	8b 5d f0             	mov    -0x10(%ebp),%ebx
4000008d:	83 ec 08             	sub    $0x8,%esp
40000090:	68 0b 20 00 40       	push   $0x4000200b
40000095:	6a 00                	push   $0x0
40000097:	e8 10 0d 00 00       	call   40000dac <strtoknc>
4000009c:	83 c4 10             	add    $0x10,%esp
4000009f:	89 84 9d ec fa ff ff 	mov    %eax,-0x514(%ebp,%ebx,4)
                n++;
400000a6:	ff 45 f0             	incl   -0x10(%ebp)
            } while(pargs[n-1] != 0);
400000a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
400000ac:	48                   	dec    %eax
400000ad:	8b 84 85 ec fa ff ff 	mov    -0x514(%ebp,%eax,4),%eax
400000b4:	85 c0                	test   %eax,%eax
400000b6:	75 d2                	jne    4000008a <main+0x8a>

            if(!strcmp(cmd, "cd")) {
400000b8:	83 ec 08             	sub    $0x8,%esp
400000bb:	68 0d 20 00 40       	push   $0x4000200d
400000c0:	ff 75 ec             	pushl  -0x14(%ebp)
400000c3:	e8 4d 0c 00 00       	call   40000d15 <strcmp>
400000c8:	83 c4 10             	add    $0x10,%esp
400000cb:	85 c0                	test   %eax,%eax
400000cd:	75 34                	jne    40000103 <main+0x103>
                if(pargs[0] != 0) {
400000cf:	8b 85 ec fa ff ff    	mov    -0x514(%ebp),%eax
400000d5:	85 c0                	test   %eax,%eax
400000d7:	74 14                	je     400000ed <main+0xed>
                    cd((char*)pargs[0]);
400000d9:	8b 85 ec fa ff ff    	mov    -0x514(%ebp),%eax
400000df:	83 ec 0c             	sub    $0xc,%esp
400000e2:	50                   	push   %eax
400000e3:	e8 c4 01 00 00       	call   400002ac <cd>
400000e8:	83 c4 10             	add    $0x10,%esp
400000eb:	eb 10                	jmp    400000fd <main+0xfd>
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400000ed:	83 ec 0c             	sub    $0xc,%esp
400000f0:	68 10 20 00 40       	push   $0x40002010
400000f5:	e8 e6 08 00 00       	call   400009e0 <printf>
400000fa:	83 c4 10             	add    $0x10,%esp
                }

                continue;
400000fd:	90                   	nop    
                yield();
            }

            printf("\n");
        }
    }
400000fe:	e9 25 ff ff ff       	jmp    40000028 <main+0x28>
                }

                continue;
            }

            int PID = texec(instr, pargs);
40000103:	83 ec 08             	sub    $0x8,%esp
40000106:	8d 85 ec fa ff ff    	lea    -0x514(%ebp),%eax
4000010c:	50                   	push   %eax
4000010d:	8d 85 ec fb ff ff    	lea    -0x414(%ebp),%eax
40000113:	50                   	push   %eax
40000114:	e8 e4 00 00 00       	call   400001fd <texec>
40000119:	83 c4 10             	add    $0x10,%esp
4000011c:	89 45 f4             	mov    %eax,-0xc(%ebp)

            while(pexists(PID)) {
4000011f:	eb 05                	jmp    40000126 <main+0x126>
                yield();
40000121:	e8 36 02 00 00       	call   4000035c <yield>
                continue;
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
40000126:	83 ec 0c             	sub    $0xc,%esp
40000129:	ff 75 f4             	pushl  -0xc(%ebp)
4000012c:	e8 69 02 00 00       	call   4000039a <pexists>
40000131:	83 c4 10             	add    $0x10,%esp
40000134:	85 c0                	test   %eax,%eax
40000136:	75 e9                	jne    40000121 <main+0x121>
                yield();
            }

            printf("\n");
40000138:	83 ec 0c             	sub    $0xc,%esp
4000013b:	68 28 20 00 40       	push   $0x40002028
40000140:	e8 9b 08 00 00       	call   400009e0 <printf>
40000145:	83 c4 10             	add    $0x10,%esp
        }
    }
40000148:	e9 db fe ff ff       	jmp    40000028 <main+0x28>
4000014d:	00 00                	add    %al,(%eax)
	...

40000150 <printFilesystemError>:
40000150:	55                   	push   %ebp
40000151:	89 e5                	mov    %esp,%ebp
40000153:	83 ec 08             	sub    $0x8,%esp
40000156:	8b 55 0c             	mov    0xc(%ebp),%edx
40000159:	8b 45 08             	mov    0x8(%ebp),%eax
4000015c:	83 fa 05             	cmp    $0x5,%edx
4000015f:	77 43                	ja     400001a4 <printFilesystemError+0x54>
40000161:	ff 24 95 2c 20 00 40 	jmp    *0x4000202c(,%edx,4)
40000168:	52                   	push   %edx
40000169:	52                   	push   %edx
4000016a:	50                   	push   %eax
4000016b:	68 5c 20 00 40       	push   $0x4000205c
40000170:	eb 3a                	jmp    400001ac <printFilesystemError+0x5c>
40000172:	51                   	push   %ecx
40000173:	51                   	push   %ecx
40000174:	50                   	push   %eax
40000175:	68 6e 20 00 40       	push   $0x4000206e
4000017a:	eb 30                	jmp    400001ac <printFilesystemError+0x5c>
4000017c:	52                   	push   %edx
4000017d:	52                   	push   %edx
4000017e:	50                   	push   %eax
4000017f:	68 8d 20 00 40       	push   $0x4000208d
40000184:	eb 26                	jmp    400001ac <printFilesystemError+0x5c>
40000186:	51                   	push   %ecx
40000187:	51                   	push   %ecx
40000188:	50                   	push   %eax
40000189:	68 b7 20 00 40       	push   $0x400020b7
4000018e:	eb 1c                	jmp    400001ac <printFilesystemError+0x5c>
40000190:	52                   	push   %edx
40000191:	52                   	push   %edx
40000192:	50                   	push   %eax
40000193:	68 cc 20 00 40       	push   $0x400020cc
40000198:	eb 12                	jmp    400001ac <printFilesystemError+0x5c>
4000019a:	51                   	push   %ecx
4000019b:	51                   	push   %ecx
4000019c:	50                   	push   %eax
4000019d:	68 07 21 00 40       	push   $0x40002107
400001a2:	eb 08                	jmp    400001ac <printFilesystemError+0x5c>
400001a4:	52                   	push   %edx
400001a5:	52                   	push   %edx
400001a6:	50                   	push   %eax
400001a7:	68 1a 21 00 40       	push   $0x4000211a
400001ac:	e8 2f 08 00 00       	call   400009e0 <printf>
400001b1:	c7 45 08 37 21 00 40 	movl   $0x40002137,0x8(%ebp)
400001b8:	83 c4 10             	add    $0x10,%esp
400001bb:	c9                   	leave  
400001bc:	e9 1f 08 00 00       	jmp    400009e0 <printf>

400001c1 <exec>:
400001c1:	55                   	push   %ebp
400001c2:	89 e5                	mov    %esp,%ebp
400001c4:	83 ec 34             	sub    $0x34,%esp
400001c7:	8b 45 08             	mov    0x8(%ebp),%eax
400001ca:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%ebp)
400001d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400001d4:	8b 45 0c             	mov    0xc(%ebp),%eax
400001d7:	89 45 e8             	mov    %eax,-0x18(%ebp)
400001da:	8d 45 e0             	lea    -0x20(%ebp),%eax
400001dd:	50                   	push   %eax
400001de:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400001e5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400001ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400001f3:	e8 74 10 00 00       	call   4000126c <syscall>
400001f8:	8b 45 e0             	mov    -0x20(%ebp),%eax
400001fb:	c9                   	leave  
400001fc:	c3                   	ret    

400001fd <texec>:
400001fd:	55                   	push   %ebp
400001fe:	89 e5                	mov    %esp,%ebp
40000200:	56                   	push   %esi
40000201:	53                   	push   %ebx
40000202:	53                   	push   %ebx
40000203:	53                   	push   %ebx
40000204:	8b 75 08             	mov    0x8(%ebp),%esi
40000207:	ff 75 0c             	pushl  0xc(%ebp)
4000020a:	56                   	push   %esi
4000020b:	e8 b1 ff ff ff       	call   400001c1 <exec>
40000210:	83 c4 10             	add    $0x10,%esp
40000213:	89 c3                	mov    %eax,%ebx
40000215:	85 c0                	test   %eax,%eax
40000217:	75 11                	jne    4000022a <texec+0x2d>
40000219:	e8 a6 05 00 00       	call   400007c4 <getLastVFSErr>
4000021e:	51                   	push   %ecx
4000021f:	51                   	push   %ecx
40000220:	50                   	push   %eax
40000221:	56                   	push   %esi
40000222:	e8 29 ff ff ff       	call   40000150 <printFilesystemError>
40000227:	83 c4 10             	add    $0x10,%esp
4000022a:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000022d:	89 d8                	mov    %ebx,%eax
4000022f:	5b                   	pop    %ebx
40000230:	5e                   	pop    %esi
40000231:	5d                   	pop    %ebp
40000232:	c3                   	ret    

40000233 <getExecPathChild>:
40000233:	55                   	push   %ebp
40000234:	89 e5                	mov    %esp,%ebp
40000236:	83 ec 34             	sub    $0x34,%esp
40000239:	8b 45 08             	mov    0x8(%ebp),%eax
4000023c:	c7 45 e0 11 00 00 00 	movl   $0x11,-0x20(%ebp)
40000243:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000246:	8b 45 0c             	mov    0xc(%ebp),%eax
40000249:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000024c:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000024f:	50                   	push   %eax
40000250:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000257:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000025e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000265:	e8 02 10 00 00       	call   4000126c <syscall>
4000026a:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000026d:	c9                   	leave  
4000026e:	c3                   	ret    

4000026f <changeExecPath>:
4000026f:	55                   	push   %ebp
40000270:	89 e5                	mov    %esp,%ebp
40000272:	83 ec 34             	sub    $0x34,%esp
40000275:	8b 45 08             	mov    0x8(%ebp),%eax
40000278:	c7 45 e0 07 00 00 00 	movl   $0x7,-0x20(%ebp)
4000027f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000282:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000285:	50                   	push   %eax
40000286:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000028d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000294:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000029b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400002a2:	e8 c5 0f 00 00       	call   4000126c <syscall>
400002a7:	8b 45 e0             	mov    -0x20(%ebp),%eax
400002aa:	c9                   	leave  
400002ab:	c3                   	ret    

400002ac <cd>:
400002ac:	55                   	push   %ebp
400002ad:	89 e5                	mov    %esp,%ebp
400002af:	53                   	push   %ebx
400002b0:	83 ec 10             	sub    $0x10,%esp
400002b3:	8b 5d 08             	mov    0x8(%ebp),%ebx
400002b6:	53                   	push   %ebx
400002b7:	e8 b3 ff ff ff       	call   4000026f <changeExecPath>
400002bc:	83 c4 10             	add    $0x10,%esp
400002bf:	85 c0                	test   %eax,%eax
400002c1:	75 11                	jne    400002d4 <cd+0x28>
400002c3:	e8 fc 04 00 00       	call   400007c4 <getLastVFSErr>
400002c8:	52                   	push   %edx
400002c9:	52                   	push   %edx
400002ca:	50                   	push   %eax
400002cb:	53                   	push   %ebx
400002cc:	e8 7f fe ff ff       	call   40000150 <printFilesystemError>
400002d1:	83 c4 10             	add    $0x10,%esp
400002d4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
400002d7:	c9                   	leave  
400002d8:	c3                   	ret    

400002d9 <getExecPath>:
400002d9:	55                   	push   %ebp
400002da:	89 e5                	mov    %esp,%ebp
400002dc:	83 ec 34             	sub    $0x34,%esp
400002df:	8b 45 08             	mov    0x8(%ebp),%eax
400002e2:	c7 45 e0 06 00 00 00 	movl   $0x6,-0x20(%ebp)
400002e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400002ec:	8d 45 e0             	lea    -0x20(%ebp),%eax
400002ef:	50                   	push   %eax
400002f0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400002f7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400002fe:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000305:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000030c:	e8 5b 0f 00 00       	call   4000126c <syscall>
40000311:	83 c4 10             	add    $0x10,%esp
40000314:	c9                   	leave  
40000315:	c3                   	ret    

40000316 <exit>:
40000316:	55                   	push   %ebp
40000317:	89 e5                	mov    %esp,%ebp
40000319:	83 ec 34             	sub    $0x34,%esp
4000031c:	8b 45 08             	mov    0x8(%ebp),%eax
4000031f:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
40000326:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000329:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000032c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000333:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000033a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000341:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000348:	50                   	push   %eax
40000349:	e8 1e 0f 00 00       	call   4000126c <syscall>
4000034e:	c7 04 24 22 21 00 40 	movl   $0x40002122,(%esp)
40000355:	e8 86 06 00 00       	call   400009e0 <printf>
4000035a:	eb f2                	jmp    4000034e <exit+0x38>

4000035c <yield>:

    return 0;
}
4000035c:	55                   	push   %ebp
4000035d:	89 e5                	mov    %esp,%ebp
4000035f:	83 ec 34             	sub    $0x34,%esp
40000362:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000365:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%ebp)
4000036c:	50                   	push   %eax
4000036d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000374:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000037b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000382:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000389:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000390:	e8 d7 0e 00 00       	call   4000126c <syscall>
40000395:	83 c4 10             	add    $0x10,%esp
40000398:	c9                   	leave  
40000399:	c3                   	ret    

4000039a <pexists>:

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;
4000039a:	55                   	push   %ebp
4000039b:	89 e5                	mov    %esp,%ebp
4000039d:	83 ec 34             	sub    $0x34,%esp
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
400003a0:	8b 45 08             	mov    0x8(%ebp),%eax
400003a3:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
400003aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
                    cd((char*)pargs[0]);
                }
400003ad:	8d 45 e0             	lea    -0x20(%ebp),%eax
400003b0:	50                   	push   %eax
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
400003b1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400003b8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400003bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400003c6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
                    cd((char*)pargs[0]);
                }
400003cd:	e8 9a 0e 00 00       	call   4000126c <syscall>
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400003d2:	8b 45 e0             	mov    -0x20(%ebp),%eax
400003d5:	c9                   	leave  
400003d6:	c3                   	ret    

400003d7 <register_irq_handler>:
400003d7:	55                   	push   %ebp
400003d8:	89 e5                	mov    %esp,%ebp
400003da:	53                   	push   %ebx
400003db:	83 ec 30             	sub    $0x30,%esp
400003de:	8d 45 e0             	lea    -0x20(%ebp),%eax
400003e1:	8b 5d 08             	mov    0x8(%ebp),%ebx
400003e4:	50                   	push   %eax
    return 0;
}
400003e5:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%ebp)
400003ec:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
400003ef:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400003f6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400003fd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000404:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000040b:	e8 5c 0e 00 00       	call   4000126c <syscall>
40000410:	83 c4 10             	add    $0x10,%esp
40000413:	31 c0                	xor    %eax,%eax
40000415:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
40000419:	74 0f                	je     4000042a <register_irq_handler+0x53>
4000041b:	8b 45 0c             	mov    0xc(%ebp),%eax
4000041e:	89 04 9d 00 30 00 40 	mov    %eax,0x40003000(,%ebx,4)
40000425:	b8 01 00 00 00       	mov    $0x1,%eax
4000042a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
4000042d:	c9                   	leave  
4000042e:	c3                   	ret    

4000042f <fetch_rpc_data>:
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
4000042f:	55                   	push   %ebp
40000430:	89 e5                	mov    %esp,%ebp
40000432:	83 ec 34             	sub    $0x34,%esp
                continue;
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
40000435:	8b 45 08             	mov    0x8(%ebp),%eax
40000438:	c7 45 e0 21 00 00 00 	movl   $0x21,-0x20(%ebp)
4000043f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
                yield();
            }
40000442:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000445:	50                   	push   %eax
                continue;
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
40000446:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000044d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000454:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000045b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
                yield();
            }
40000462:	e8 05 0e 00 00       	call   4000126c <syscall>
40000467:	83 c4 10             	add    $0x10,%esp

4000046a:	c9                   	leave  
4000046b:	c3                   	ret    

4000046c <call_rpc>:
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
4000046c:	55                   	push   %ebp
4000046d:	89 e5                	mov    %esp,%ebp
4000046f:	83 ec 34             	sub    $0x34,%esp

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

40000472:	8b 45 08             	mov    0x8(%ebp),%eax
40000475:	c7 45 e0 1f 00 00 00 	movl   $0x1f,-0x20(%ebp)
4000047c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000047f:	8b 45 0c             	mov    0xc(%ebp),%eax
40000482:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000485:	8b 45 10             	mov    0x10(%ebp),%eax
40000488:	89 45 ec             	mov    %eax,-0x14(%ebp)
4000048b:	8b 45 14             	mov    0x14(%ebp),%eax
4000048e:	89 45 f0             	mov    %eax,-0x10(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000491:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000494:	50                   	push   %eax

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

40000495:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
4000049c:	e8 cb 0d 00 00       	call   4000126c <syscall>
                    cd((char*)pargs[0]);
                }
                else
400004a1:	8b 45 e0             	mov    -0x20(%ebp),%eax
400004a4:	c9                   	leave  
400004a5:	c3                   	ret    

400004a6 <set_rpc_handler>:
400004a6:	55                   	push   %ebp
400004a7:	89 e5                	mov    %esp,%ebp
400004a9:	57                   	push   %edi
400004aa:	56                   	push   %esi
400004ab:	be 44 20 00 40       	mov    $0x40002044,%esi
400004b0:	83 ec 24             	sub    $0x24,%esp
400004b3:	8d 7d e0             	lea    -0x20(%ebp),%edi
400004b6:	68 00 02 00 00       	push   $0x200
400004bb:	6a 00                	push   $0x0
400004bd:	68 00 30 00 40       	push   $0x40003000
400004c2:	e8 c5 07 00 00       	call   40000c8c <memset>
400004c7:	b9 06 00 00 00       	mov    $0x6,%ecx
400004cc:	8d 45 e0             	lea    -0x20(%ebp),%eax
400004cf:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
400004d1:	89 04 24             	mov    %eax,(%esp)
400004d4:	e8 93 0d 00 00       	call   4000126c <syscall>
400004d9:	83 c4 10             	add    $0x10,%esp
400004dc:	8d 65 f8             	lea    -0x8(%ebp),%esp
400004df:	5e                   	pop    %esi
400004e0:	5f                   	pop    %edi
400004e1:	5d                   	pop    %ebp
400004e2:	c3                   	ret    

400004e3 <_start>:
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

400004e3:	55                   	push   %ebp
400004e4:	89 e5                	mov    %esp,%ebp
400004e6:	56                   	push   %esi
400004e7:	53                   	push   %ebx
                continue;
            }

            int PID = texec(instr, pargs);

400004e8:	31 db                	xor    %ebx,%ebx
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

400004ea:	83 ec 2c             	sub    $0x2c,%esp

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

400004ed:	8d 45 e0             	lea    -0x20(%ebp),%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400004f0:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%ebp)
400004f7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
        getln(instr);

400004fe:	50                   	push   %eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400004ff:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000506:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000050d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000514:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getln(instr);

4000051b:	e8 4c 0d 00 00       	call   4000126c <syscall>
        char* cmd = strtoknc(instr, " ");

40000520:	8b 75 e0             	mov    -0x20(%ebp),%esi

                continue;
            }

            int PID = texec(instr, pargs);

40000523:	83 c4 10             	add    $0x10,%esp
40000526:	85 f6                	test   %esi,%esi
40000528:	75 05                	jne    4000052f <_start+0x4c>
4000052a:	89 f3                	mov    %esi,%ebx
4000052c:	eb 07                	jmp    40000535 <_start+0x52>
            while(pexists(PID)) {
                yield();
4000052e:	43                   	inc    %ebx
                continue;
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
4000052f:	83 3c 9e 00          	cmpl   $0x0,(%esi,%ebx,4)
40000533:	75 f9                	jne    4000052e <_start+0x4b>
                yield();
            }

            printf("\n");
        }
40000535:	e8 6c ff ff ff       	call   400004a6 <set_rpc_handler>
    }

4000053a:	51                   	push   %ecx
4000053b:	51                   	push   %ecx
4000053c:	56                   	push   %esi
4000053d:	53                   	push   %ebx
4000053e:	e8 bd fa ff ff       	call   40000000 <main>
    return 0;
}
40000543:	89 04 24             	mov    %eax,(%esp)
40000546:	e8 cb fd ff ff       	call   40000316 <exit>
4000054b:	83 c4 10             	add    $0x10,%esp
4000054e:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000551:	5b                   	pop    %ebx
40000552:	5e                   	pop    %esi
40000553:	5d                   	pop    %ebp
40000554:	c3                   	ret    

40000555 <_handle_rpc>:
40000555:	55                   	push   %ebp
40000556:	89 e5                	mov    %esp,%ebp
40000558:	56                   	push   %esi
40000559:	53                   	push   %ebx
4000055a:	83 ec 2c             	sub    $0x2c,%esp
4000055d:	ff 75 10             	pushl  0x10(%ebp)
40000560:	8b 75 0c             	mov    0xc(%ebp),%esi
40000563:	e8 bd 0a 00 00       	call   40001025 <malloc>
40000568:	89 04 24             	mov    %eax,(%esp)
4000056b:	89 c3                	mov    %eax,%ebx
4000056d:	e8 bd fe ff ff       	call   4000042f <fetch_rpc_data>
40000572:	83 c4 10             	add    $0x10,%esp
40000575:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40000579:	75 4b                	jne    400005c6 <_handle_rpc+0x71>
4000057b:	8b 04 b5 00 30 00 40 	mov    0x40003000(,%esi,4),%eax
40000582:	85 c0                	test   %eax,%eax
40000584:	74 40                	je     400005c6 <_handle_rpc+0x71>
40000586:	83 ec 0c             	sub    $0xc,%esp
40000589:	56                   	push   %esi
4000058a:	ff d0                	call   *%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
4000058c:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
4000058f:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
40000596:	89 04 24             	mov    %eax,(%esp)
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000599:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400005a0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400005a7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400005ae:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400005b5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400005bc:	e8 ab 0c 00 00       	call   4000126c <syscall>
400005c1:	83 c4 10             	add    $0x10,%esp
400005c4:	eb fe                	jmp    400005c4 <_handle_rpc+0x6f>
400005c6:	83 ec 0c             	sub    $0xc,%esp
400005c9:	68 29 21 00 40       	push   $0x40002129
400005ce:	e8 0d 04 00 00       	call   400009e0 <printf>
400005d3:	89 1c 24             	mov    %ebx,(%esp)
400005d6:	e8 01 09 00 00       	call   40000edc <free>

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400005db:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400005de:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400005e5:	89 04 24             	mov    %eax,(%esp)
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400005e8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400005ef:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400005f6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400005fd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000604:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
4000060b:	e8 5c 0c 00 00       	call   4000126c <syscall>
40000610:	83 c4 10             	add    $0x10,%esp
40000613:	eb fe                	jmp    40000613 <_handle_rpc+0xbe>
40000615:	00 00                	add    %al,(%eax)
	...

40000618 <resolveHandle>:
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
40000618:	55                   	push   %ebp
40000619:	89 e5                	mov    %esp,%ebp
4000061b:	83 ec 28             	sub    $0x28,%esp
                }
4000061e:	3d fe 0f 00 00       	cmp    $0xffe,%eax
40000623:	77 38                	ja     4000065d <resolveHandle+0x45>
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000625:	83 ec 0c             	sub    $0xc,%esp

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

40000628:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
4000062b:	8d 45 e0             	lea    -0x20(%ebp),%eax

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

4000062e:	c7 45 e0 14 00 00 00 	movl   $0x14,-0x20(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000635:	50                   	push   %eax

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

40000636:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000063d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000644:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000064b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000652:	e8 15 0c 00 00       	call   4000126c <syscall>
                    cd((char*)pargs[0]);
                }
40000657:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000065a:	83 c4 10             	add    $0x10,%esp
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }

4000065d:	c9                   	leave  
4000065e:	c3                   	ret    

4000065f <fmkfifo>:
4000065f:	55                   	push   %ebp
40000660:	89 e5                	mov    %esp,%ebp
40000662:	83 ec 34             	sub    $0x34,%esp
40000665:	8b 45 08             	mov    0x8(%ebp),%eax
40000668:	c7 45 e0 0e 00 00 00 	movl   $0xe,-0x20(%ebp)
4000066f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000672:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000675:	50                   	push   %eax
40000676:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000067d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000684:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000068b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000692:	e8 d5 0b 00 00       	call   4000126c <syscall>
40000697:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000069a:	c9                   	leave  
4000069b:	c3                   	ret    

4000069c <favailable>:
4000069c:	55                   	push   %ebp
4000069d:	89 e5                	mov    %esp,%ebp
4000069f:	83 ec 34             	sub    $0x34,%esp
400006a2:	8b 45 08             	mov    0x8(%ebp),%eax
400006a5:	c7 45 e0 10 00 00 00 	movl   $0x10,-0x20(%ebp)
400006ac:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006af:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006b2:	50                   	push   %eax
400006b3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006ba:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006c1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400006c8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400006cf:	e8 98 0b 00 00       	call   4000126c <syscall>
400006d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
400006d7:	c9                   	leave  
400006d8:	c3                   	ret    

400006d9 <fclose>:
400006d9:	55                   	push   %ebp
400006da:	89 e5                	mov    %esp,%ebp
400006dc:	83 ec 34             	sub    $0x34,%esp
400006df:	8b 45 08             	mov    0x8(%ebp),%eax
400006e2:	c7 45 e0 0b 00 00 00 	movl   $0xb,-0x20(%ebp)
400006e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006ec:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006ef:	50                   	push   %eax
400006f0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006f7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006fe:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000705:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000070c:	e8 5b 0b 00 00       	call   4000126c <syscall>
40000711:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000714:	c9                   	leave  
40000715:	c3                   	ret    

40000716 <fopen>:
40000716:	55                   	push   %ebp
40000717:	89 e5                	mov    %esp,%ebp
40000719:	83 ec 34             	sub    $0x34,%esp
4000071c:	8b 45 08             	mov    0x8(%ebp),%eax
4000071f:	c7 45 e0 0a 00 00 00 	movl   $0xa,-0x20(%ebp)
40000726:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000729:	8b 45 0c             	mov    0xc(%ebp),%eax
4000072c:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000072f:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000732:	50                   	push   %eax
40000733:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000073a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000741:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000748:	e8 1f 0b 00 00       	call   4000126c <syscall>
4000074d:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000750:	c9                   	leave  
40000751:	c3                   	ret    

40000752 <fopenpmhandle>:
            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
            }

40000752:	55                   	push   %ebp
40000753:	89 e5                	mov    %esp,%ebp
40000755:	83 ec 34             	sub    $0x34,%esp
    }

    return 0;
}
40000758:	8b 45 08             	mov    0x8(%ebp),%eax
4000075b:	c7 45 e0 15 00 00 00 	movl   $0x15,-0x20(%ebp)
40000762:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000765:	8b 45 0c             	mov    0xc(%ebp),%eax
40000768:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000076b:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000076e:	50                   	push   %eax
    }

    return 0;
}
4000076f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000776:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000077d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000784:	e8 e3 0a 00 00       	call   4000126c <syscall>
40000789:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000078c:	c9                   	leave  
4000078d:	c3                   	ret    

4000078e <setstderr>:
4000078e:	55                   	push   %ebp
4000078f:	89 e5                	mov    %esp,%ebp
40000791:	83 ec 10             	sub    $0x10,%esp
40000794:	ff 75 08             	pushl  0x8(%ebp)
40000797:	6a 03                	push   $0x3
40000799:	e8 b4 ff ff ff       	call   40000752 <fopenpmhandle>
4000079e:	c9                   	leave  
4000079f:	c3                   	ret    

400007a0 <setstdin>:
400007a0:	55                   	push   %ebp
400007a1:	89 e5                	mov    %esp,%ebp
400007a3:	83 ec 10             	sub    $0x10,%esp
400007a6:	ff 75 08             	pushl  0x8(%ebp)
400007a9:	6a 02                	push   $0x2
400007ab:	e8 a2 ff ff ff       	call   40000752 <fopenpmhandle>
400007b0:	c9                   	leave  
400007b1:	c3                   	ret    

400007b2 <setstdout>:
400007b2:	55                   	push   %ebp
400007b3:	89 e5                	mov    %esp,%ebp
400007b5:	83 ec 10             	sub    $0x10,%esp
400007b8:	ff 75 08             	pushl  0x8(%ebp)
400007bb:	6a 01                	push   $0x1
400007bd:	e8 90 ff ff ff       	call   40000752 <fopenpmhandle>
400007c2:	c9                   	leave  
400007c3:	c3                   	ret    

400007c4 <getLastVFSErr>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"

400007c4:	55                   	push   %ebp
400007c5:	89 e5                	mov    %esp,%ebp
400007c7:	83 ec 34             	sub    $0x34,%esp

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400007ca:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400007cd:	c7 45 e0 0f 00 00 00 	movl   $0xf,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400007d4:	50                   	push   %eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400007d5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400007dc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400007e3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400007ea:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400007f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400007f8:	e8 6f 0a 00 00       	call   4000126c <syscall>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
400007fd:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000800:	c9                   	leave  
40000801:	c3                   	ret    

40000802 <fwrite>:
40000802:	55                   	push   %ebp
40000803:	89 e5                	mov    %esp,%ebp
40000805:	57                   	push   %edi
40000806:	56                   	push   %esi
40000807:	53                   	push   %ebx
40000808:	83 ec 3c             	sub    $0x3c,%esp
4000080b:	8b 45 08             	mov    0x8(%ebp),%eax
4000080e:	8b 7d 10             	mov    0x10(%ebp),%edi
40000811:	e8 02 fe ff ff       	call   40000618 <resolveHandle>
40000816:	83 ec 0c             	sub    $0xc,%esp
40000819:	89 c6                	mov    %eax,%esi
4000081b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
4000081e:	8b 45 0c             	mov    0xc(%ebp),%eax
40000821:	c7 45 d0 0c 00 00 00 	movl   $0xc,-0x30(%ebp)
40000828:	89 45 d8             	mov    %eax,-0x28(%ebp)
4000082b:	8d 45 d0             	lea    -0x30(%ebp),%eax
4000082e:	89 7d dc             	mov    %edi,-0x24(%ebp)
40000831:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000838:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
4000083f:	50                   	push   %eax
40000840:	89 45 c4             	mov    %eax,-0x3c(%ebp)
40000843:	eb 2d                	jmp    40000872 <fwrite+0x70>
40000845:	e8 12 fb ff ff       	call   4000035c <yield>
4000084a:	8b 45 0c             	mov    0xc(%ebp),%eax
4000084d:	83 ec 0c             	sub    $0xc,%esp
40000850:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000853:	8d 45 d0             	lea    -0x30(%ebp),%eax
40000856:	c7 45 d0 0c 00 00 00 	movl   $0xc,-0x30(%ebp)
4000085d:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000860:	89 7d dc             	mov    %edi,-0x24(%ebp)
40000863:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
4000086a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000871:	50                   	push   %eax
40000872:	e8 f5 09 00 00       	call   4000126c <syscall>
40000877:	8b 5d d0             	mov    -0x30(%ebp),%ebx
4000087a:	83 c4 10             	add    $0x10,%esp
4000087d:	83 fb 01             	cmp    $0x1,%ebx
40000880:	74 c3                	je     40000845 <fwrite+0x43>
40000882:	89 f0                	mov    %esi,%eax
40000884:	89 da                	mov    %ebx,%edx
40000886:	e8 3d 02 00 00       	call   40000ac8 <printrwerror>
4000088b:	8d 65 f4             	lea    -0xc(%ebp),%esp
4000088e:	89 d8                	mov    %ebx,%eax
40000890:	5b                   	pop    %ebx
40000891:	5e                   	pop    %esi
40000892:	5f                   	pop    %edi
40000893:	5d                   	pop    %ebp
40000894:	c3                   	ret    

40000895 <fputs>:
40000895:	55                   	push   %ebp
40000896:	89 e5                	mov    %esp,%ebp
40000898:	56                   	push   %esi
40000899:	53                   	push   %ebx
4000089a:	83 ec 20             	sub    $0x20,%esp
4000089d:	8b 45 0c             	mov    0xc(%ebp),%eax
400008a0:	8b 5d 08             	mov    0x8(%ebp),%ebx
400008a3:	e8 70 fd ff ff       	call   40000618 <resolveHandle>
400008a8:	89 c6                	mov    %eax,%esi
400008aa:	85 c0                	test   %eax,%eax
400008ac:	74 16                	je     400008c4 <fputs+0x2f>
400008ae:	83 ec 0c             	sub    $0xc,%esp
400008b1:	53                   	push   %ebx
400008b2:	e8 a7 04 00 00       	call   40000d5e <strlen>
400008b7:	83 c4 0c             	add    $0xc,%esp
400008ba:	50                   	push   %eax
400008bb:	53                   	push   %ebx
400008bc:	56                   	push   %esi
400008bd:	e8 40 ff ff ff       	call   40000802 <fwrite>
400008c2:	eb 35                	jmp    400008f9 <fputs+0x64>
400008c4:	83 ec 0c             	sub    $0xc,%esp
400008c7:	8d 45 e0             	lea    -0x20(%ebp),%eax
400008ca:	c7 45 e0 ca 00 00 00 	movl   $0xca,-0x20(%ebp)
400008d1:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
400008d4:	50                   	push   %eax
400008d5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400008dc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400008e3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400008ea:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400008f1:	e8 76 09 00 00       	call   4000126c <syscall>
400008f6:	8b 45 e0             	mov    -0x20(%ebp),%eax
400008f9:	83 c4 10             	add    $0x10,%esp
400008fc:	8d 65 f8             	lea    -0x8(%ebp),%esp
400008ff:	5b                   	pop    %ebx
40000900:	5e                   	pop    %esi
40000901:	5d                   	pop    %ebp
40000902:	c3                   	ret    

40000903 <puts>:
40000903:	55                   	push   %ebp
40000904:	89 e5                	mov    %esp,%ebp
40000906:	83 ec 10             	sub    $0x10,%esp
40000909:	6a 01                	push   $0x1
4000090b:	ff 75 08             	pushl  0x8(%ebp)
4000090e:	e8 82 ff ff ff       	call   40000895 <fputs>
40000913:	c9                   	leave  
40000914:	c3                   	ret    

40000915 <putn>:
40000915:	55                   	push   %ebp
40000916:	89 e5                	mov    %esp,%ebp
40000918:	56                   	push   %esi
40000919:	53                   	push   %ebx
4000091a:	31 f6                	xor    %esi,%esi
4000091c:	83 ec 50             	sub    $0x50,%esp
4000091f:	89 d3                	mov    %edx,%ebx
40000921:	83 fa 24             	cmp    $0x24,%edx
40000924:	7f 25                	jg     4000094b <putn+0x36>
40000926:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
4000092a:	8d 4d f7             	lea    -0x9(%ebp),%ecx
4000092d:	31 d2                	xor    %edx,%edx
4000092f:	49                   	dec    %ecx
40000930:	f7 f3                	div    %ebx
40000932:	46                   	inc    %esi
40000933:	85 c0                	test   %eax,%eax
40000935:	8a 92 39 21 00 40    	mov    0x40002139(%edx),%dl
4000093b:	88 11                	mov    %dl,(%ecx)
4000093d:	75 ee                	jne    4000092d <putn+0x18>
4000093f:	83 ec 0c             	sub    $0xc,%esp
40000942:	51                   	push   %ecx
40000943:	e8 bb ff ff ff       	call   40000903 <puts>
40000948:	83 c4 10             	add    $0x10,%esp
4000094b:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000094e:	89 f0                	mov    %esi,%eax
40000950:	5b                   	pop    %ebx
40000951:	5e                   	pop    %esi
40000952:	5d                   	pop    %ebp
40000953:	c3                   	ret    

40000954 <fputc>:
40000954:	55                   	push   %ebp
40000955:	89 e5                	mov    %esp,%ebp
40000957:	83 ec 38             	sub    $0x38,%esp
4000095a:	8b 45 08             	mov    0x8(%ebp),%eax
4000095d:	88 45 d4             	mov    %al,-0x2c(%ebp)
40000960:	8b 45 0c             	mov    0xc(%ebp),%eax
40000963:	e8 b0 fc ff ff       	call   40000618 <resolveHandle>
40000968:	85 c0                	test   %eax,%eax
4000096a:	74 0f                	je     4000097b <fputc+0x27>
4000096c:	52                   	push   %edx
4000096d:	8d 55 d4             	lea    -0x2c(%ebp),%edx
40000970:	6a 01                	push   $0x1
40000972:	52                   	push   %edx
40000973:	50                   	push   %eax
40000974:	e8 89 fe ff ff       	call   40000802 <fwrite>
40000979:	eb 39                	jmp    400009b4 <fputc+0x60>
4000097b:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
4000097f:	83 ec 0c             	sub    $0xc,%esp
40000982:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000985:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000988:	c7 45 e0 c9 00 00 00 	movl   $0xc9,-0x20(%ebp)
4000098f:	50                   	push   %eax
40000990:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000997:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000099e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400009a5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400009ac:	e8 bb 08 00 00       	call   4000126c <syscall>
400009b1:	8b 45 e0             	mov    -0x20(%ebp),%eax
400009b4:	83 c4 10             	add    $0x10,%esp
400009b7:	c9                   	leave  
400009b8:	c3                   	ret    

400009b9 <putc>:
400009b9:	55                   	push   %ebp
400009ba:	89 e5                	mov    %esp,%ebp
400009bc:	83 ec 08             	sub    $0x8,%esp
400009bf:	0f be 45 08          	movsbl 0x8(%ebp),%eax
400009c3:	89 45 08             	mov    %eax,0x8(%ebp)
400009c6:	c9                   	leave  
400009c7:	e9 88 ff ff ff       	jmp    40000954 <fputc>

400009cc <putchar>:
400009cc:	55                   	push   %ebp
400009cd:	89 e5                	mov    %esp,%ebp
400009cf:	83 ec 10             	sub    $0x10,%esp
400009d2:	0f be 45 08          	movsbl 0x8(%ebp),%eax
400009d6:	6a 01                	push   $0x1
400009d8:	50                   	push   %eax
400009d9:	e8 76 ff ff ff       	call   40000954 <fputc>
400009de:	c9                   	leave  
400009df:	c3                   	ret    

400009e0 <printf>:
400009e0:	55                   	push   %ebp
400009e1:	89 e5                	mov    %esp,%ebp
400009e3:	57                   	push   %edi
400009e4:	56                   	push   %esi
400009e5:	53                   	push   %ebx
400009e6:	83 ec 1c             	sub    $0x1c,%esp
400009e9:	8d 75 0c             	lea    0xc(%ebp),%esi
400009ec:	8b 7d 08             	mov    0x8(%ebp),%edi
400009ef:	31 db                	xor    %ebx,%ebx
400009f1:	e9 be 00 00 00       	jmp    40000ab4 <printf+0xd4>
400009f6:	3c 25                	cmp    $0x25,%al
400009f8:	0f 85 a4 00 00 00    	jne    40000aa2 <printf+0xc2>
400009fe:	47                   	inc    %edi
400009ff:	8a 07                	mov    (%edi),%al
40000a01:	3c 70                	cmp    $0x70,%al
40000a03:	74 47                	je     40000a4c <printf+0x6c>
40000a05:	7f 1a                	jg     40000a21 <printf+0x41>
40000a07:	3c 63                	cmp    $0x63,%al
40000a09:	74 5a                	je     40000a65 <printf+0x85>
40000a0b:	7f 0e                	jg     40000a1b <printf+0x3b>
40000a0d:	84 c0                	test   %al,%al
40000a0f:	0f 84 a9 00 00 00    	je     40000abe <printf+0xde>
40000a15:	3c 25                	cmp    $0x25,%al
40000a17:	75 6c                	jne    40000a85 <printf+0xa5>
40000a19:	eb 63                	jmp    40000a7e <printf+0x9e>
40000a1b:	3c 64                	cmp    $0x64,%al
40000a1d:	75 66                	jne    40000a85 <printf+0xa5>
40000a1f:	eb 1e                	jmp    40000a3f <printf+0x5f>
40000a21:	3c 75                	cmp    $0x75,%al
40000a23:	74 1a                	je     40000a3f <printf+0x5f>
40000a25:	3c 78                	cmp    $0x78,%al
40000a27:	74 23                	je     40000a4c <printf+0x6c>
40000a29:	3c 73                	cmp    $0x73,%al
40000a2b:	75 58                	jne    40000a85 <printf+0xa5>
40000a2d:	83 ec 0c             	sub    $0xc,%esp
40000a30:	8d 46 04             	lea    0x4(%esi),%eax
40000a33:	ff 36                	pushl  (%esi)
40000a35:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a38:	e8 c6 fe ff ff       	call   40000903 <puts>
40000a3d:	eb 38                	jmp    40000a77 <printf+0x97>
40000a3f:	8d 46 04             	lea    0x4(%esi),%eax
40000a42:	ba 0a 00 00 00       	mov    $0xa,%edx
40000a47:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a4a:	eb 0b                	jmp    40000a57 <printf+0x77>
40000a4c:	8d 46 04             	lea    0x4(%esi),%eax
40000a4f:	ba 10 00 00 00       	mov    $0x10,%edx
40000a54:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a57:	8b 06                	mov    (%esi),%eax
40000a59:	e8 b7 fe ff ff       	call   40000915 <putn>
40000a5e:	8b 75 e4             	mov    -0x1c(%ebp),%esi
40000a61:	01 c3                	add    %eax,%ebx
40000a63:	eb 4e                	jmp    40000ab3 <printf+0xd3>
40000a65:	8d 46 04             	lea    0x4(%esi),%eax
40000a68:	83 ec 0c             	sub    $0xc,%esp
40000a6b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a6e:	0f be 06             	movsbl (%esi),%eax
40000a71:	50                   	push   %eax
40000a72:	e8 55 ff ff ff       	call   400009cc <putchar>
40000a77:	01 c3                	add    %eax,%ebx
40000a79:	8b 75 e4             	mov    -0x1c(%ebp),%esi
40000a7c:	eb 32                	jmp    40000ab0 <printf+0xd0>
40000a7e:	83 ec 0c             	sub    $0xc,%esp
40000a81:	6a 25                	push   $0x25
40000a83:	eb 24                	jmp    40000aa9 <printf+0xc9>
40000a85:	83 ec 0c             	sub    $0xc,%esp
40000a88:	6a 25                	push   $0x25
40000a8a:	e8 3d ff ff ff       	call   400009cc <putchar>
40000a8f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a92:	0f be 07             	movsbl (%edi),%eax
40000a95:	89 04 24             	mov    %eax,(%esp)
40000a98:	e8 2f ff ff ff       	call   400009cc <putchar>
40000a9d:	03 45 e4             	add    -0x1c(%ebp),%eax
40000aa0:	eb 0c                	jmp    40000aae <printf+0xce>
40000aa2:	83 ec 0c             	sub    $0xc,%esp
40000aa5:	0f be c0             	movsbl %al,%eax
40000aa8:	50                   	push   %eax
40000aa9:	e8 1e ff ff ff       	call   400009cc <putchar>
40000aae:	01 c3                	add    %eax,%ebx
40000ab0:	83 c4 10             	add    $0x10,%esp
40000ab3:	47                   	inc    %edi
40000ab4:	8a 07                	mov    (%edi),%al
40000ab6:	84 c0                	test   %al,%al
40000ab8:	0f 85 38 ff ff ff    	jne    400009f6 <printf+0x16>
40000abe:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000ac1:	89 d8                	mov    %ebx,%eax
40000ac3:	5b                   	pop    %ebx
40000ac4:	5e                   	pop    %esi
40000ac5:	5f                   	pop    %edi
40000ac6:	5d                   	pop    %ebp
40000ac7:	c3                   	ret    

40000ac8 <printrwerror>:
40000ac8:	55                   	push   %ebp
40000ac9:	89 e5                	mov    %esp,%ebp
40000acb:	83 ec 08             	sub    $0x8,%esp
40000ace:	83 fa 02             	cmp    $0x2,%edx
40000ad1:	75 0a                	jne    40000add <printrwerror+0x15>
40000ad3:	52                   	push   %edx
40000ad4:	52                   	push   %edx
40000ad5:	50                   	push   %eax
40000ad6:	68 5e 21 00 40       	push   $0x4000215e
40000adb:	eb 2b                	jmp    40000b08 <printrwerror+0x40>
40000add:	83 fa 03             	cmp    $0x3,%edx
40000ae0:	75 0a                	jne    40000aec <printrwerror+0x24>
40000ae2:	51                   	push   %ecx
40000ae3:	51                   	push   %ecx
40000ae4:	50                   	push   %eax
40000ae5:	68 76 21 00 40       	push   $0x40002176
40000aea:	eb 1c                	jmp    40000b08 <printrwerror+0x40>
40000aec:	83 fa 04             	cmp    $0x4,%edx
40000aef:	75 0a                	jne    40000afb <printrwerror+0x33>
40000af1:	52                   	push   %edx
40000af2:	52                   	push   %edx
40000af3:	50                   	push   %eax
40000af4:	68 91 21 00 40       	push   $0x40002191
40000af9:	eb 0d                	jmp    40000b08 <printrwerror+0x40>
40000afb:	83 fa 05             	cmp    $0x5,%edx
40000afe:	75 10                	jne    40000b10 <printrwerror+0x48>
40000b00:	51                   	push   %ecx
40000b01:	51                   	push   %ecx
40000b02:	50                   	push   %eax
40000b03:	68 bb 21 00 40       	push   $0x400021bb
40000b08:	e8 d3 fe ff ff       	call   400009e0 <printf>
40000b0d:	83 c4 10             	add    $0x10,%esp
40000b10:	c9                   	leave  
40000b11:	c3                   	ret    

40000b12 <fread>:
40000b12:	55                   	push   %ebp
40000b13:	89 e5                	mov    %esp,%ebp
40000b15:	57                   	push   %edi
40000b16:	56                   	push   %esi
40000b17:	53                   	push   %ebx
40000b18:	83 ec 38             	sub    $0x38,%esp
40000b1b:	8d 7d d0             	lea    -0x30(%ebp),%edi
40000b1e:	8b 45 0c             	mov    0xc(%ebp),%eax
40000b21:	8b 75 08             	mov    0x8(%ebp),%esi
40000b24:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000b27:	8b 45 10             	mov    0x10(%ebp),%eax
40000b2a:	c7 45 d0 0d 00 00 00 	movl   $0xd,-0x30(%ebp)
40000b31:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000b34:	89 45 dc             	mov    %eax,-0x24(%ebp)
40000b37:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000b3e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000b45:	eb 2c                	jmp    40000b73 <fread+0x61>
40000b47:	e8 10 f8 ff ff       	call   4000035c <yield>
40000b4c:	8b 45 0c             	mov    0xc(%ebp),%eax
40000b4f:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000b52:	8b 45 10             	mov    0x10(%ebp),%eax
40000b55:	c7 45 d0 0d 00 00 00 	movl   $0xd,-0x30(%ebp)
40000b5c:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000b5f:	89 45 dc             	mov    %eax,-0x24(%ebp)
40000b62:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000b69:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000b70:	83 ec 0c             	sub    $0xc,%esp
40000b73:	57                   	push   %edi
40000b74:	e8 f3 06 00 00       	call   4000126c <syscall>
40000b79:	8b 5d d0             	mov    -0x30(%ebp),%ebx
40000b7c:	83 c4 10             	add    $0x10,%esp
40000b7f:	83 fb 01             	cmp    $0x1,%ebx
40000b82:	74 c3                	je     40000b47 <fread+0x35>
40000b84:	89 f0                	mov    %esi,%eax
40000b86:	89 da                	mov    %ebx,%edx
40000b88:	e8 3b ff ff ff       	call   40000ac8 <printrwerror>
40000b8d:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000b90:	89 d8                	mov    %ebx,%eax
40000b92:	5b                   	pop    %ebx
40000b93:	5e                   	pop    %esi
40000b94:	5f                   	pop    %edi
40000b95:	5d                   	pop    %ebp
40000b96:	c3                   	ret    

40000b97 <fgetc>:
40000b97:	55                   	push   %ebp
40000b98:	89 e5                	mov    %esp,%ebp
40000b9a:	83 ec 18             	sub    $0x18,%esp
40000b9d:	8b 45 08             	mov    0x8(%ebp),%eax
40000ba0:	e8 73 fa ff ff       	call   40000618 <resolveHandle>
40000ba5:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
40000ba9:	85 c0                	test   %eax,%eax
40000bab:	74 10                	je     40000bbd <fgetc+0x26>
40000bad:	8d 55 f7             	lea    -0x9(%ebp),%edx
40000bb0:	51                   	push   %ecx
40000bb1:	6a 01                	push   $0x1
40000bb3:	52                   	push   %edx
40000bb4:	50                   	push   %eax
40000bb5:	e8 58 ff ff ff       	call   40000b12 <fread>
40000bba:	83 c4 10             	add    $0x10,%esp
40000bbd:	8a 45 f7             	mov    -0x9(%ebp),%al
40000bc0:	c9                   	leave  
40000bc1:	c3                   	ret    

40000bc2 <getchar>:
40000bc2:	55                   	push   %ebp
40000bc3:	89 e5                	mov    %esp,%ebp
40000bc5:	83 ec 14             	sub    $0x14,%esp
40000bc8:	6a 02                	push   $0x2
40000bca:	e8 c8 ff ff ff       	call   40000b97 <fgetc>
40000bcf:	c9                   	leave  
40000bd0:	c3                   	ret    

40000bd1 <getc>:
40000bd1:	55                   	push   %ebp
40000bd2:	89 e5                	mov    %esp,%ebp
40000bd4:	83 ec 08             	sub    $0x8,%esp
40000bd7:	c9                   	leave  
40000bd8:	e9 ba ff ff ff       	jmp    40000b97 <fgetc>

40000bdd <fgets>:
40000bdd:	55                   	push   %ebp
40000bde:	89 e5                	mov    %esp,%ebp
40000be0:	57                   	push   %edi
40000be1:	56                   	push   %esi
40000be2:	53                   	push   %ebx
40000be3:	83 ec 1c             	sub    $0x1c,%esp
40000be6:	31 db                	xor    %ebx,%ebx
40000be8:	8b 7d 0c             	mov    0xc(%ebp),%edi
40000beb:	8b 75 08             	mov    0x8(%ebp),%esi
40000bee:	8d 47 ff             	lea    -0x1(%edi),%eax
40000bf1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000bf4:	eb 16                	jmp    40000c0c <fgets+0x2f>
40000bf6:	83 ec 0c             	sub    $0xc,%esp
40000bf9:	ff 75 10             	pushl  0x10(%ebp)
40000bfc:	e8 96 ff ff ff       	call   40000b97 <fgetc>
40000c01:	83 c4 10             	add    $0x10,%esp
40000c04:	88 04 1e             	mov    %al,(%esi,%ebx,1)
40000c07:	84 c0                	test   %al,%al
40000c09:	74 0a                	je     40000c15 <fgets+0x38>
40000c0b:	43                   	inc    %ebx
40000c0c:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
40000c0f:	7c e5                	jl     40000bf6 <fgets+0x19>
40000c11:	c6 04 3e 00          	movb   $0x0,(%esi,%edi,1)
40000c15:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000c18:	89 f0                	mov    %esi,%eax
40000c1a:	5b                   	pop    %ebx
40000c1b:	5e                   	pop    %esi
40000c1c:	5f                   	pop    %edi
40000c1d:	5d                   	pop    %ebp
40000c1e:	c3                   	ret    

40000c1f <getln>:
40000c1f:	55                   	push   %ebp
40000c20:	89 e5                	mov    %esp,%ebp
40000c22:	56                   	push   %esi
40000c23:	53                   	push   %ebx
40000c24:	31 db                	xor    %ebx,%ebx
40000c26:	8b 75 08             	mov    0x8(%ebp),%esi
40000c29:	eb 42                	jmp    40000c6d <getln+0x4e>
40000c2b:	3c 0a                	cmp    $0xa,%al
40000c2d:	75 0f                	jne    40000c3e <getln+0x1f>
40000c2f:	83 ec 0c             	sub    $0xc,%esp
40000c32:	6a 0a                	push   $0xa
40000c34:	e8 93 fd ff ff       	call   400009cc <putchar>
40000c39:	83 c4 10             	add    $0x10,%esp
40000c3c:	eb 40                	jmp    40000c7e <getln+0x5f>
40000c3e:	3c 08                	cmp    $0x8,%al
40000c40:	75 18                	jne    40000c5a <getln+0x3b>
40000c42:	85 db                	test   %ebx,%ebx
40000c44:	74 0e                	je     40000c54 <getln+0x35>
40000c46:	83 ec 0c             	sub    $0xc,%esp
40000c49:	4b                   	dec    %ebx
40000c4a:	6a 08                	push   $0x8
40000c4c:	e8 7b fd ff ff       	call   400009cc <putchar>
40000c51:	83 c4 10             	add    $0x10,%esp
40000c54:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
40000c58:	eb 13                	jmp    40000c6d <getln+0x4e>
40000c5a:	83 ec 0c             	sub    $0xc,%esp
40000c5d:	88 04 1e             	mov    %al,(%esi,%ebx,1)
40000c60:	0f be c0             	movsbl %al,%eax
40000c63:	50                   	push   %eax
40000c64:	43                   	inc    %ebx
40000c65:	e8 62 fd ff ff       	call   400009cc <putchar>
40000c6a:	83 c4 10             	add    $0x10,%esp
40000c6d:	83 ec 0c             	sub    $0xc,%esp
40000c70:	6a 02                	push   $0x2
40000c72:	e8 20 ff ff ff       	call   40000b97 <fgetc>
40000c77:	83 c4 10             	add    $0x10,%esp
40000c7a:	84 c0                	test   %al,%al
40000c7c:	75 ad                	jne    40000c2b <getln+0xc>
40000c7e:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
40000c82:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000c85:	89 f0                	mov    %esi,%eax
40000c87:	5b                   	pop    %ebx
40000c88:	5e                   	pop    %esi
40000c89:	5d                   	pop    %ebp
40000c8a:	c3                   	ret    
	...

40000c8c <memset>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"
40000c8c:	55                   	push   %ebp
40000c8d:	89 e5                	mov    %esp,%ebp
40000c8f:	53                   	push   %ebx
40000c90:	8b 45 08             	mov    0x8(%ebp),%eax
40000c93:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000c96:	8b 4d 10             	mov    0x10(%ebp),%ecx

40000c99:	89 c2                	mov    %eax,%edx
int main(int argc, char* args[])
{
40000c9b:	eb 04                	jmp    40000ca1 <memset+0x15>
    char epath[512];
40000c9d:	88 1a                	mov    %bl,(%edx)
40000c9f:	49                   	dec    %ecx
40000ca0:	42                   	inc    %edx
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000ca1:	85 c9                	test   %ecx,%ecx
40000ca3:	75 f8                	jne    40000c9d <memset+0x11>
    char epath[512];
    char instr[512];

    cd("ibin");

40000ca5:	5b                   	pop    %ebx
40000ca6:	5d                   	pop    %ebp
40000ca7:	c3                   	ret    

40000ca8 <memcpy>:
    while(1) {
        getExecPath(epath);
40000ca8:	55                   	push   %ebp
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000ca9:	31 c9                	xor    %ecx,%ecx
    char instr[512];

    cd("ibin");

    while(1) {
        getExecPath(epath);
40000cab:	89 e5                	mov    %esp,%ebp
40000cad:	56                   	push   %esi
40000cae:	53                   	push   %ebx
40000caf:	8b 75 10             	mov    0x10(%ebp),%esi
40000cb2:	8b 45 08             	mov    0x8(%ebp),%eax
40000cb5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000cb8:	85 f6                	test   %esi,%esi
40000cba:	75 04                	jne    40000cc0 <memcpy+0x18>
40000cbc:	31 c0                	xor    %eax,%eax
40000cbe:	eb 0a                	jmp    40000cca <memcpy+0x22>

        if(cmd != 0) {
            char* pargs[64];
40000cc0:	8a 14 0b             	mov    (%ebx,%ecx,1),%dl
40000cc3:	88 14 08             	mov    %dl,(%eax,%ecx,1)
40000cc6:	41                   	inc    %ecx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000cc7:	4e                   	dec    %esi
40000cc8:	75 f6                	jne    40000cc0 <memcpy+0x18>
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
40000cca:	5b                   	pop    %ebx
40000ccb:	5e                   	pop    %esi
40000ccc:	5d                   	pop    %ebp
40000ccd:	c3                   	ret    

40000cce <memcmp>:
                n++;
            } while(pargs[n-1] != 0);
40000cce:	55                   	push   %ebp

40000ccf:	83 c8 ff             	or     $0xffffffff,%eax
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);
40000cd2:	89 e5                	mov    %esp,%ebp
40000cd4:	57                   	push   %edi
40000cd5:	56                   	push   %esi
40000cd6:	53                   	push   %ebx
40000cd7:	8b 75 08             	mov    0x8(%ebp),%esi
40000cda:	8b 7d 0c             	mov    0xc(%ebp),%edi
40000cdd:	8b 5d 10             	mov    0x10(%ebp),%ebx

40000ce0:	85 f6                	test   %esi,%esi
40000ce2:	74 2c                	je     40000d10 <memcmp+0x42>
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000ce4:	b8 01 00 00 00       	mov    $0x1,%eax
40000ce9:	85 ff                	test   %edi,%edi
40000ceb:	74 23                	je     40000d10 <memcmp+0x42>
                    cd((char*)pargs[0]);
                }
40000ced:	31 d2                	xor    %edx,%edx
40000cef:	85 db                	test   %ebx,%ebx
40000cf1:	75 17                	jne    40000d0a <memcmp+0x3c>
40000cf3:	eb 19                	jmp    40000d0e <memcmp+0x40>
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }
40000cf5:	8a 04 16             	mov    (%esi,%edx,1),%al
40000cf8:	8a 0c 17             	mov    (%edi,%edx,1),%cl
40000cfb:	38 c8                	cmp    %cl,%al
40000cfd:	74 0a                	je     40000d09 <memcmp+0x3b>

40000cff:	0f b6 c0             	movzbl %al,%eax
40000d02:	0f b6 c9             	movzbl %cl,%ecx
40000d05:	29 c8                	sub    %ecx,%eax
40000d07:	eb 07                	jmp    40000d10 <memcmp+0x42>
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
40000d09:	42                   	inc    %edx
40000d0a:	39 da                	cmp    %ebx,%edx
40000d0c:	72 e7                	jb     40000cf5 <memcmp+0x27>
40000d0e:	31 c0                	xor    %eax,%eax
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
40000d10:	5b                   	pop    %ebx
40000d11:	5e                   	pop    %esi
40000d12:	5f                   	pop    %edi
40000d13:	5d                   	pop    %ebp
40000d14:	c3                   	ret    

40000d15 <strcmp>:
            }

40000d15:	55                   	push   %ebp

    return 0;
}
40000d16:	31 c0                	xor    %eax,%eax
            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
            }

40000d18:	89 e5                	mov    %esp,%ebp
40000d1a:	56                   	push   %esi
40000d1b:	53                   	push   %ebx

    return 0;
}
40000d1c:	31 db                	xor    %ebx,%ebx
            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
            }

40000d1e:	8b 55 08             	mov    0x8(%ebp),%edx
40000d21:	8b 4d 0c             	mov    0xc(%ebp),%ecx

    return 0;
}
40000d24:	85 d2                	test   %edx,%edx
40000d26:	75 03                	jne    40000d2b <strcmp+0x16>
40000d28:	eb 09                	jmp    40000d33 <strcmp+0x1e>
40000d2a:	40                   	inc    %eax
40000d2b:	89 c3                	mov    %eax,%ebx
40000d2d:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
40000d31:	75 f7                	jne    40000d2a <strcmp+0x15>

    return 0;
}
40000d33:	31 c0                	xor    %eax,%eax
40000d35:	31 f6                	xor    %esi,%esi
40000d37:	85 c9                	test   %ecx,%ecx
40000d39:	75 03                	jne    40000d3e <strcmp+0x29>
40000d3b:	eb 09                	jmp    40000d46 <strcmp+0x31>
40000d3d:	40                   	inc    %eax
40000d3e:	89 c6                	mov    %eax,%esi
40000d40:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)
40000d44:	75 f7                	jne    40000d3d <strcmp+0x28>

            printf("\n");
        }
    }

    return 0;
40000d46:	89 f0                	mov    %esi,%eax
40000d48:	39 de                	cmp    %ebx,%esi
40000d4a:	7e 02                	jle    40000d4e <strcmp+0x39>
40000d4c:	89 d8                	mov    %ebx,%eax
40000d4e:	40                   	inc    %eax
40000d4f:	50                   	push   %eax
40000d50:	51                   	push   %ecx
40000d51:	52                   	push   %edx
40000d52:	e8 77 ff ff ff       	call   40000cce <memcmp>
}
40000d57:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000d5a:	5b                   	pop    %ebx
40000d5b:	5e                   	pop    %esi
40000d5c:	5d                   	pop    %ebp
40000d5d:	c3                   	ret    

40000d5e <strlen>:
40000d5e:	55                   	push   %ebp
40000d5f:	31 d2                	xor    %edx,%edx
    }

    return 0;
}
40000d61:	89 e5                	mov    %esp,%ebp
40000d63:	31 c0                	xor    %eax,%eax
    }

    return 0;
}
40000d65:	8b 4d 08             	mov    0x8(%ebp),%ecx
40000d68:	85 c9                	test   %ecx,%ecx
40000d6a:	75 03                	jne    40000d6f <strlen+0x11>
40000d6c:	eb 09                	jmp    40000d77 <strlen+0x19>
40000d6e:	42                   	inc    %edx
40000d6f:	89 d0                	mov    %edx,%eax
40000d71:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)
40000d75:	75 f7                	jne    40000d6e <strlen+0x10>
40000d77:	5d                   	pop    %ebp
40000d78:	c3                   	ret    

40000d79 <strcpy>:
40000d79:	55                   	push   %ebp

    return 0;
}
40000d7a:	31 d2                	xor    %edx,%edx
40000d7c:	89 e5                	mov    %esp,%ebp
40000d7e:	56                   	push   %esi
40000d7f:	53                   	push   %ebx

    return 0;
}
40000d80:	31 c9                	xor    %ecx,%ecx
40000d82:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000d85:	8b 45 08             	mov    0x8(%ebp),%eax

    return 0;
}
40000d88:	85 db                	test   %ebx,%ebx
40000d8a:	75 03                	jne    40000d8f <strcpy+0x16>
40000d8c:	eb 09                	jmp    40000d97 <strcpy+0x1e>
40000d8e:	42                   	inc    %edx
40000d8f:	89 d1                	mov    %edx,%ecx
40000d91:	80 3c 13 00          	cmpb   $0x0,(%ebx,%edx,1)
40000d95:	75 f7                	jne    40000d8e <strcpy+0x15>
    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000d97:	89 ce                	mov    %ecx,%esi
40000d99:	46                   	inc    %esi
40000d9a:	74 0c                	je     40000da8 <strcpy+0x2f>
40000d9c:	31 d2                	xor    %edx,%edx

        if(cmd != 0) {
            char* pargs[64];
40000d9e:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
40000da1:	88 0c 10             	mov    %cl,(%eax,%edx,1)
40000da4:	42                   	inc    %edx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000da5:	4e                   	dec    %esi
40000da6:	75 f6                	jne    40000d9e <strcpy+0x25>
40000da8:	5b                   	pop    %ebx
40000da9:	5e                   	pop    %esi
40000daa:	5d                   	pop    %ebp
40000dab:	c3                   	ret    

40000dac <strtoknc>:
40000dac:	55                   	push   %ebp

    return 0;
}
40000dad:	31 c0                	xor    %eax,%eax
40000daf:	89 e5                	mov    %esp,%ebp
40000db1:	57                   	push   %edi
40000db2:	56                   	push   %esi
40000db3:	53                   	push   %ebx
40000db4:	83 ec 04             	sub    $0x4,%esp
40000db7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000dba:	8b 4d 08             	mov    0x8(%ebp),%ecx

    return 0;
}
40000dbd:	85 db                	test   %ebx,%ebx
40000dbf:	75 06                	jne    40000dc7 <strtoknc+0x1b>
40000dc1:	e9 83 00 00 00       	jmp    40000e49 <strtoknc+0x9d>
40000dc6:	40                   	inc    %eax
40000dc7:	89 c7                	mov    %eax,%edi
40000dc9:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
40000dcd:	75 f7                	jne    40000dc6 <strtoknc+0x1a>
40000dcf:	85 c0                	test   %eax,%eax
40000dd1:	74 76                	je     40000e49 <strtoknc+0x9d>
40000dd3:	85 c9                	test   %ecx,%ecx
40000dd5:	75 0b                	jne    40000de2 <strtoknc+0x36>
40000dd7:	83 3d 00 32 00 40 00 	cmpl   $0x0,0x40003200
40000dde:	75 08                	jne    40000de8 <strtoknc+0x3c>
40000de0:	eb 67                	jmp    40000e49 <strtoknc+0x9d>
40000de2:	89 0d 00 32 00 40    	mov    %ecx,0x40003200
40000de8:	a1 00 32 00 40       	mov    0x40003200,%eax
40000ded:	31 c9                	xor    %ecx,%ecx
40000def:	eb 0b                	jmp    40000dfc <strtoknc+0x50>
40000df1:	8a 10                	mov    (%eax),%dl
40000df3:	3a 14 0b             	cmp    (%ebx,%ecx,1),%dl
40000df6:	75 03                	jne    40000dfb <strtoknc+0x4f>
40000df8:	40                   	inc    %eax
40000df9:	eb 05                	jmp    40000e00 <strtoknc+0x54>
40000dfb:	41                   	inc    %ecx
40000dfc:	39 f9                	cmp    %edi,%ecx
40000dfe:	7c f1                	jl     40000df1 <strtoknc+0x45>
40000e00:	39 f9                	cmp    %edi,%ecx
40000e02:	75 e9                	jne    40000ded <strtoknc+0x41>
40000e04:	a3 00 32 00 40       	mov    %eax,0x40003200
40000e09:	80 38 00             	cmpb   $0x0,(%eax)
40000e0c:	75 28                	jne    40000e36 <strtoknc+0x8a>
40000e0e:	c7 05 00 32 00 40 00 	movl   $0x0,0x40003200
40000e15:	00 00 00 
40000e18:	eb 2f                	jmp    40000e49 <strtoknc+0x9d>
40000e1a:	8a 55 f3             	mov    -0xd(%ebp),%dl
40000e1d:	3a 14 0b             	cmp    (%ebx,%ecx,1),%dl
40000e20:	75 05                	jne    40000e27 <strtoknc+0x7b>
40000e22:	c6 06 00             	movb   $0x0,(%esi)
40000e25:	eb 05                	jmp    40000e2c <strtoknc+0x80>
40000e27:	41                   	inc    %ecx
40000e28:	39 f9                	cmp    %edi,%ecx
40000e2a:	7c ee                	jl     40000e1a <strtoknc+0x6e>
40000e2c:	ff 05 00 32 00 40    	incl   0x40003200
40000e32:	39 f9                	cmp    %edi,%ecx
40000e34:	7c 15                	jl     40000e4b <strtoknc+0x9f>
40000e36:	8b 35 00 32 00 40    	mov    0x40003200,%esi
40000e3c:	8a 16                	mov    (%esi),%dl
40000e3e:	88 55 f3             	mov    %dl,-0xd(%ebp)
40000e41:	84 d2                	test   %dl,%dl
40000e43:	74 06                	je     40000e4b <strtoknc+0x9f>
40000e45:	31 c9                	xor    %ecx,%ecx
40000e47:	eb df                	jmp    40000e28 <strtoknc+0x7c>
40000e49:	31 c0                	xor    %eax,%eax
40000e4b:	5a                   	pop    %edx
40000e4c:	5b                   	pop    %ebx
40000e4d:	5e                   	pop    %esi
40000e4e:	5f                   	pop    %edi
40000e4f:	5d                   	pop    %ebp
40000e50:	c3                   	ret    

40000e51 <strclone>:
40000e51:	55                   	push   %ebp

    return 0;
}
40000e52:	31 c0                	xor    %eax,%eax
40000e54:	89 e5                	mov    %esp,%ebp
40000e56:	56                   	push   %esi
40000e57:	53                   	push   %ebx

    return 0;
}
40000e58:	31 d2                	xor    %edx,%edx
40000e5a:	8b 5d 08             	mov    0x8(%ebp),%ebx

    return 0;
}
40000e5d:	85 db                	test   %ebx,%ebx
40000e5f:	75 03                	jne    40000e64 <strclone+0x13>
40000e61:	eb 09                	jmp    40000e6c <strclone+0x1b>
40000e63:	40                   	inc    %eax
40000e64:	89 c2                	mov    %eax,%edx
40000e66:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
40000e6a:	75 f7                	jne    40000e63 <strclone+0x12>
40000e6c:	83 ec 0c             	sub    $0xc,%esp
40000e6f:	42                   	inc    %edx
40000e70:	52                   	push   %edx
40000e71:	e8 af 01 00 00       	call   40001025 <malloc>
40000e76:	59                   	pop    %ecx
40000e77:	89 c6                	mov    %eax,%esi
40000e79:	58                   	pop    %eax
40000e7a:	53                   	push   %ebx
40000e7b:	56                   	push   %esi
40000e7c:	e8 f8 fe ff ff       	call   40000d79 <strcpy>
40000e81:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000e84:	89 f0                	mov    %esi,%eax
40000e86:	5b                   	pop    %ebx
40000e87:	5e                   	pop    %esi
40000e88:	5d                   	pop    %ebp
40000e89:	c3                   	ret    

40000e8a <strtok>:
40000e8a:	55                   	push   %ebp
40000e8b:	89 e5                	mov    %esp,%ebp
40000e8d:	56                   	push   %esi
40000e8e:	53                   	push   %ebx
40000e8f:	8b 75 08             	mov    0x8(%ebp),%esi
40000e92:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000e95:	85 f6                	test   %esi,%esi
40000e97:	74 2e                	je     40000ec7 <strtok+0x3d>
40000e99:	a1 04 32 00 40       	mov    0x40003204,%eax
40000e9e:	85 c0                	test   %eax,%eax
40000ea0:	74 0c                	je     40000eae <strtok+0x24>
40000ea2:	83 ec 0c             	sub    $0xc,%esp
40000ea5:	50                   	push   %eax
40000ea6:	e8 31 00 00 00       	call   40000edc <free>
40000eab:	83 c4 10             	add    $0x10,%esp
40000eae:	83 ec 0c             	sub    $0xc,%esp
40000eb1:	56                   	push   %esi
40000eb2:	e8 9a ff ff ff       	call   40000e51 <strclone>
40000eb7:	83 c4 10             	add    $0x10,%esp
40000eba:	a3 04 32 00 40       	mov    %eax,0x40003204
40000ebf:	89 5d 0c             	mov    %ebx,0xc(%ebp)
40000ec2:	89 45 08             	mov    %eax,0x8(%ebp)
40000ec5:	eb 0a                	jmp    40000ed1 <strtok+0x47>
40000ec7:	89 5d 0c             	mov    %ebx,0xc(%ebp)
40000eca:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)
40000ed1:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000ed4:	5b                   	pop    %ebx
40000ed5:	5e                   	pop    %esi
40000ed6:	5d                   	pop    %ebp
40000ed7:	e9 d0 fe ff ff       	jmp    40000dac <strtoknc>

40000edc <free>:
40000edc:	55                   	push   %ebp
40000edd:	89 e5                	mov    %esp,%ebp
40000edf:	57                   	push   %edi
40000ee0:	56                   	push   %esi
40000ee1:	53                   	push   %ebx
40000ee2:	83 ec 08             	sub    $0x8,%esp
40000ee5:	8b 15 0c 32 00 40    	mov    0x4000320c,%edx
40000eeb:	8b 4d 08             	mov    0x8(%ebp),%ecx
40000eee:	89 d0                	mov    %edx,%eax
40000ef0:	e9 b8 00 00 00       	jmp    40000fad <free+0xd1>
40000ef5:	3b 48 04             	cmp    0x4(%eax),%ecx
40000ef8:	0f 85 ac 00 00 00    	jne    40000faa <free+0xce>
40000efe:	31 c9                	xor    %ecx,%ecx
40000f00:	eb 23                	jmp    40000f25 <free+0x49>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000f02:	39 c2                	cmp    %eax,%edx
40000f04:	75 1a                	jne    40000f20 <free+0x44>
        getExecPath(epath);
40000f06:	85 c9                	test   %ecx,%ecx
40000f08:	8b 50 08             	mov    0x8(%eax),%edx
40000f0b:	75 0e                	jne    40000f1b <free+0x3f>
        printf("$%s> ", epath);
40000f0d:	89 15 0c 32 00 40    	mov    %edx,0x4000320c
40000f13:	8b 0d 10 32 00 40    	mov    0x40003210,%ecx
40000f19:	eb 10                	jmp    40000f2b <free+0x4f>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000f1b:	89 51 08             	mov    %edx,0x8(%ecx)
40000f1e:	eb f3                	jmp    40000f13 <free+0x37>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000f20:	89 d1                	mov    %edx,%ecx
40000f22:	8b 52 08             	mov    0x8(%edx),%edx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000f25:	85 d2                	test   %edx,%edx
40000f27:	75 d9                	jne    40000f02 <free+0x26>
40000f29:	eb e8                	jmp    40000f13 <free+0x37>
40000f2b:	89 ca                	mov    %ecx,%edx
40000f2d:	eb 6d                	jmp    40000f9c <free+0xc0>
40000f2f:	8b 5a 04             	mov    0x4(%edx),%ebx
40000f32:	8b 32                	mov    (%edx),%esi
40000f34:	8b 78 04             	mov    0x4(%eax),%edi
40000f37:	89 7d ec             	mov    %edi,-0x14(%ebp)
40000f3a:	8d 3c 1e             	lea    (%esi,%ebx,1),%edi
40000f3d:	89 7d f0             	mov    %edi,-0x10(%ebp)
40000f40:	8b 7d ec             	mov    -0x14(%ebp),%edi
40000f43:	39 7d f0             	cmp    %edi,-0x10(%ebp)
40000f46:	75 18                	jne    40000f60 <free+0x84>
40000f48:	89 58 04             	mov    %ebx,0x4(%eax)
40000f4b:	31 f6                	xor    %esi,%esi
40000f4d:	89 cb                	mov    %ecx,%ebx
40000f4f:	eb 09                	jmp    40000f5a <free+0x7e>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000f51:	39 d3                	cmp    %edx,%ebx
40000f53:	74 29                	je     40000f7e <free+0xa2>
        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000f55:	89 de                	mov    %ebx,%esi
40000f57:	8b 5b 08             	mov    0x8(%ebx),%ebx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000f5a:	85 db                	test   %ebx,%ebx
40000f5c:	75 f3                	jne    40000f51 <free+0x75>
40000f5e:	eb cb                	jmp    40000f2b <free+0x4f>
40000f60:	8b 38                	mov    (%eax),%edi
40000f62:	89 7d f0             	mov    %edi,-0x10(%ebp)
40000f65:	8b 7d ec             	mov    -0x14(%ebp),%edi
40000f68:	03 7d f0             	add    -0x10(%ebp),%edi
40000f6b:	39 fb                	cmp    %edi,%ebx
40000f6d:	75 2a                	jne    40000f99 <free+0xbd>
40000f6f:	03 75 f0             	add    -0x10(%ebp),%esi
40000f72:	89 cb                	mov    %ecx,%ebx
40000f74:	89 30                	mov    %esi,(%eax)
40000f76:	31 f6                	xor    %esi,%esi
40000f78:	eb 19                	jmp    40000f93 <free+0xb7>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000f7a:	39 d3                	cmp    %edx,%ebx
40000f7c:	75 10                	jne    40000f8e <free+0xb2>
        getExecPath(epath);
40000f7e:	85 f6                	test   %esi,%esi
40000f80:	8b 53 08             	mov    0x8(%ebx),%edx
40000f83:	75 04                	jne    40000f89 <free+0xad>
        printf("$%s> ", epath);
40000f85:	89 d1                	mov    %edx,%ecx
40000f87:	eb a2                	jmp    40000f2b <free+0x4f>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000f89:	89 56 08             	mov    %edx,0x8(%esi)
40000f8c:	eb 9d                	jmp    40000f2b <free+0x4f>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000f8e:	89 de                	mov    %ebx,%esi
40000f90:	8b 5b 08             	mov    0x8(%ebx),%ebx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000f93:	85 db                	test   %ebx,%ebx
40000f95:	75 e3                	jne    40000f7a <free+0x9e>
40000f97:	eb 92                	jmp    40000f2b <free+0x4f>
40000f99:	8b 52 08             	mov    0x8(%edx),%edx
40000f9c:	85 d2                	test   %edx,%edx
40000f9e:	75 8f                	jne    40000f2f <free+0x53>
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40000fa0:	89 48 08             	mov    %ecx,0x8(%eax)
                if(pargs[0] != 0) {
40000fa3:	a3 10 32 00 40       	mov    %eax,0x40003210
40000fa8:	eb 0b                	jmp    40000fb5 <free+0xd9>
40000faa:	8b 40 08             	mov    0x8(%eax),%eax
40000fad:	85 c0                	test   %eax,%eax
40000faf:	0f 85 40 ff ff ff    	jne    40000ef5 <free+0x19>
40000fb5:	58                   	pop    %eax
40000fb6:	5a                   	pop    %edx
40000fb7:	5b                   	pop    %ebx
40000fb8:	5e                   	pop    %esi
40000fb9:	5f                   	pop    %edi
40000fba:	5d                   	pop    %ebp
40000fbb:	c3                   	ret    

40000fbc <pop_unused_node>:
            }

            printf("\n");
        }
    }

40000fbc:	55                   	push   %ebp
40000fbd:	89 e5                	mov    %esp,%ebp
40000fbf:	53                   	push   %ebx
40000fc0:	83 ec 04             	sub    $0x4,%esp
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
                {
40000fc3:	a1 08 32 00 40       	mov    0x40003208,%eax
40000fc8:	eb 45                	jmp    4000100f <pop_unused_node+0x53>

                continue;
            }

            int PID = texec(instr, pargs);

40000fca:	83 ec 0c             	sub    $0xc,%esp
40000fcd:	6a 01                	push   $0x1
40000fcf:	e8 5b 02 00 00       	call   4000122f <vmm_alloc_cont>
            while(pexists(PID)) {
40000fd4:	83 c4 0c             	add    $0xc,%esp

                continue;
            }

            int PID = texec(instr, pargs);

40000fd7:	89 c3                	mov    %eax,%ebx
            while(pexists(PID)) {
40000fd9:	68 00 10 00 00       	push   $0x1000
40000fde:	6a 00                	push   $0x0
40000fe0:	50                   	push   %eax
40000fe1:	e8 a6 fc ff ff       	call   40000c8c <memset>
40000fe6:	8b 15 08 32 00 40    	mov    0x40003208,%edx
40000fec:	8d 43 0c             	lea    0xc(%ebx),%eax
            }

            printf("\n");
        }
    }

40000fef:	8d 8b fc 0f 00 00    	lea    0xffc(%ebx),%ecx
40000ff5:	83 c4 10             	add    $0x10,%esp
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40000ff8:	89 50 08             	mov    %edx,0x8(%eax)
40000ffb:	89 c2                	mov    %eax,%edx
40000ffd:	83 c0 0c             	add    $0xc,%eax

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
            }
40001000:	39 c8                	cmp    %ecx,%eax
40001002:	75 f4                	jne    40000ff8 <pop_unused_node+0x3c>
40001004:	8d 83 f0 0f 00 00    	lea    0xff0(%ebx),%eax
4000100a:	a3 08 32 00 40       	mov    %eax,0x40003208
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
                {
4000100f:	85 c0                	test   %eax,%eax
40001011:	74 b7                	je     40000fca <pop_unused_node+0xe>

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
40001013:	8b 50 08             	mov    0x8(%eax),%edx
        }
    }

    return 0;
}
40001016:	85 c0                	test   %eax,%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
40001018:	89 15 08 32 00 40    	mov    %edx,0x40003208
        }
    }

    return 0;
}
4000101e:	74 aa                	je     40000fca <pop_unused_node+0xe>
40001020:	8b 5d fc             	mov    -0x4(%ebp),%ebx
40001023:	c9                   	leave  
40001024:	c3                   	ret    

40001025 <malloc>:
40001025:	55                   	push   %ebp
40001026:	89 e5                	mov    %esp,%ebp
40001028:	57                   	push   %edi
40001029:	56                   	push   %esi
4000102a:	53                   	push   %ebx
4000102b:	83 ec 1c             	sub    $0x1c,%esp
4000102e:	a1 10 32 00 40       	mov    0x40003210,%eax
40001033:	8b 75 08             	mov    0x8(%ebp),%esi
40001036:	89 c3                	mov    %eax,%ebx
40001038:	eb 07                	jmp    40001041 <malloc+0x1c>
4000103a:	39 33                	cmp    %esi,(%ebx)
4000103c:	73 0c                	jae    4000104a <malloc+0x25>
4000103e:	8b 5b 08             	mov    0x8(%ebx),%ebx
40001041:	85 db                	test   %ebx,%ebx
40001043:	75 f5                	jne    4000103a <malloc+0x15>
40001045:	e9 93 00 00 00       	jmp    400010dd <malloc+0xb8>
4000104a:	8b 3b                	mov    (%ebx),%edi
4000104c:	31 d2                	xor    %edx,%edx
4000104e:	29 f7                	sub    %esi,%edi
40001050:	89 33                	mov    %esi,(%ebx)
40001052:	eb 4b                	jmp    4000109f <malloc+0x7a>
40001054:	e8 63 ff ff ff       	call   40000fbc <pop_unused_node>
40001059:	8b 13                	mov    (%ebx),%edx
4000105b:	03 53 04             	add    0x4(%ebx),%edx
4000105e:	29 f7                	sub    %esi,%edi
40001060:	89 50 04             	mov    %edx,0x4(%eax)
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40001063:	8b 15 10 32 00 40    	mov    0x40003210,%edx
40001069:	89 50 08             	mov    %edx,0x8(%eax)
4000106c:	89 38                	mov    %edi,(%eax)
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
4000106e:	a3 10 32 00 40       	mov    %eax,0x40003210
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40001073:	a1 0c 32 00 40       	mov    0x4000320c,%eax
40001078:	89 43 08             	mov    %eax,0x8(%ebx)
                if(pargs[0] != 0) {
4000107b:	89 1d 0c 32 00 40    	mov    %ebx,0x4000320c
40001081:	eb 4f                	jmp    400010d2 <malloc+0xad>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40001083:	39 d8                	cmp    %ebx,%eax
40001085:	75 13                	jne    4000109a <malloc+0x75>
        getExecPath(epath);
40001087:	85 d2                	test   %edx,%edx
40001089:	8b 43 08             	mov    0x8(%ebx),%eax
4000108c:	75 07                	jne    40001095 <malloc+0x70>
        printf("$%s> ", epath);
4000108e:	a3 10 32 00 40       	mov    %eax,0x40003210
40001093:	eb 0e                	jmp    400010a3 <malloc+0x7e>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40001095:	89 42 08             	mov    %eax,0x8(%edx)
40001098:	eb 09                	jmp    400010a3 <malloc+0x7e>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

4000109a:	89 c2                	mov    %eax,%edx
4000109c:	8b 40 08             	mov    0x8(%eax),%eax
{
    char epath[512];
    char instr[512];

    cd("ibin");

4000109f:	85 c0                	test   %eax,%eax
400010a1:	75 e0                	jne    40001083 <malloc+0x5e>
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
400010a3:	a1 0c 32 00 40       	mov    0x4000320c,%eax
400010a8:	85 ff                	test   %edi,%edi
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
400010aa:	89 43 08             	mov    %eax,0x8(%ebx)
                if(pargs[0] != 0) {
400010ad:	89 1d 0c 32 00 40    	mov    %ebx,0x4000320c
400010b3:	74 1d                	je     400010d2 <malloc+0xad>
400010b5:	e8 02 ff ff ff       	call   40000fbc <pop_unused_node>
400010ba:	8b 13                	mov    (%ebx),%edx
400010bc:	03 53 04             	add    0x4(%ebx),%edx
400010bf:	89 50 04             	mov    %edx,0x4(%eax)
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
400010c2:	8b 15 10 32 00 40    	mov    0x40003210,%edx
400010c8:	89 50 08             	mov    %edx,0x8(%eax)
400010cb:	89 38                	mov    %edi,(%eax)
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
400010cd:	a3 10 32 00 40       	mov    %eax,0x40003210
400010d2:	8b 43 04             	mov    0x4(%ebx),%eax
400010d5:	8d 65 f4             	lea    -0xc(%ebp),%esp
400010d8:	5b                   	pop    %ebx
400010d9:	5e                   	pop    %esi
400010da:	5f                   	pop    %edi
400010db:	5d                   	pop    %ebp
400010dc:	c3                   	ret    
400010dd:	89 f0                	mov    %esi,%eax
400010df:	89 f7                	mov    %esi,%edi
400010e1:	c1 ef 0c             	shr    $0xc,%edi
400010e4:	25 ff 0f 00 00       	and    $0xfff,%eax
400010e9:	83 f8 01             	cmp    $0x1,%eax
400010ec:	83 df ff             	sbb    $0xffffffff,%edi
400010ef:	83 ec 0c             	sub    $0xc,%esp
400010f2:	57                   	push   %edi
400010f3:	e8 37 01 00 00       	call   4000122f <vmm_alloc_cont>
400010f8:	c1 e7 0c             	shl    $0xc,%edi
400010fb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400010fe:	e8 b9 fe ff ff       	call   40000fbc <pop_unused_node>
40001103:	8b 55 e4             	mov    -0x1c(%ebp),%edx
40001106:	83 c4 10             	add    $0x10,%esp
40001109:	89 c3                	mov    %eax,%ebx
4000110b:	89 50 04             	mov    %edx,0x4(%eax)
4000110e:	89 30                	mov    %esi,(%eax)
40001110:	39 f7                	cmp    %esi,%edi
40001112:	0f 86 5b ff ff ff    	jbe    40001073 <malloc+0x4e>
40001118:	e9 37 ff ff ff       	jmp    40001054 <malloc+0x2f>

4000111d <realloc>:
4000111d:	55                   	push   %ebp
4000111e:	89 e5                	mov    %esp,%ebp
40001120:	56                   	push   %esi
40001121:	53                   	push   %ebx
40001122:	8b 1d 0c 32 00 40    	mov    0x4000320c,%ebx
40001128:	8b 55 08             	mov    0x8(%ebp),%edx
4000112b:	8b 45 0c             	mov    0xc(%ebp),%eax
4000112e:	eb 3e                	jmp    4000116e <realloc+0x51>
40001130:	3b 53 04             	cmp    0x4(%ebx),%edx
40001133:	75 36                	jne    4000116b <realloc+0x4e>
40001135:	85 c0                	test   %eax,%eax
40001137:	75 0b                	jne    40001144 <realloc+0x27>
40001139:	52                   	push   %edx
4000113a:	31 f6                	xor    %esi,%esi
4000113c:	e8 9b fd ff ff       	call   40000edc <free>
40001141:	5b                   	pop    %ebx
40001142:	eb 30                	jmp    40001174 <realloc+0x57>
40001144:	83 ec 0c             	sub    $0xc,%esp
40001147:	50                   	push   %eax
40001148:	e8 d8 fe ff ff       	call   40001025 <malloc>
4000114d:	83 c4 0c             	add    $0xc,%esp
40001150:	89 c6                	mov    %eax,%esi
40001152:	ff 33                	pushl  (%ebx)
40001154:	ff 73 04             	pushl  0x4(%ebx)
40001157:	50                   	push   %eax
40001158:	e8 4b fb ff ff       	call   40000ca8 <memcpy>
4000115d:	59                   	pop    %ecx
4000115e:	ff 73 04             	pushl  0x4(%ebx)
40001161:	e8 76 fd ff ff       	call   40000edc <free>
40001166:	83 c4 10             	add    $0x10,%esp
40001169:	eb 09                	jmp    40001174 <realloc+0x57>
4000116b:	8b 5b 08             	mov    0x8(%ebx),%ebx
4000116e:	85 db                	test   %ebx,%ebx
40001170:	75 be                	jne    40001130 <realloc+0x13>
40001172:	31 f6                	xor    %esi,%esi
40001174:	8d 65 f8             	lea    -0x8(%ebp),%esp
40001177:	89 f0                	mov    %esi,%eax
40001179:	5b                   	pop    %ebx
4000117a:	5e                   	pop    %esi
4000117b:	5d                   	pop    %ebp
4000117c:	c3                   	ret    

4000117d <calloc>:
4000117d:	55                   	push   %ebp
4000117e:	89 e5                	mov    %esp,%ebp
40001180:	56                   	push   %esi
40001181:	53                   	push   %ebx
40001182:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40001185:	83 ec 0c             	sub    $0xc,%esp
40001188:	0f af 5d 08          	imul   0x8(%ebp),%ebx
4000118c:	53                   	push   %ebx
4000118d:	e8 93 fe ff ff       	call   40001025 <malloc>
40001192:	83 c4 10             	add    $0x10,%esp
40001195:	89 c6                	mov    %eax,%esi
40001197:	85 c0                	test   %eax,%eax
40001199:	74 0d                	je     400011a8 <calloc+0x2b>
4000119b:	50                   	push   %eax
4000119c:	53                   	push   %ebx
4000119d:	6a 00                	push   $0x0
4000119f:	56                   	push   %esi
400011a0:	e8 e7 fa ff ff       	call   40000c8c <memset>
400011a5:	83 c4 10             	add    $0x10,%esp
400011a8:	8d 65 f8             	lea    -0x8(%ebp),%esp
400011ab:	89 f0                	mov    %esi,%eax
400011ad:	5b                   	pop    %ebx
400011ae:	5e                   	pop    %esi
400011af:	5d                   	pop    %ebp
400011b0:	c3                   	ret    
400011b1:	00 00                	add    %al,(%eax)
	...

400011b4 <print_memstat>:
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
400011b4:	55                   	push   %ebp
400011b5:	89 e5                	mov    %esp,%ebp
400011b7:	83 ec 34             	sub    $0x34,%esp
                }

                continue;
            }

            int PID = texec(instr, pargs);
400011ba:	8d 45 e0             	lea    -0x20(%ebp),%eax
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }
400011bd:	c7 45 e0 cd 00 00 00 	movl   $0xcd,-0x20(%ebp)

            int PID = texec(instr, pargs);
400011c4:	50                   	push   %eax
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }
400011c5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400011cc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400011d3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400011da:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400011e1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

            int PID = texec(instr, pargs);
400011e8:	e8 7f 00 00 00       	call   4000126c <syscall>
400011ed:	83 c4 10             	add    $0x10,%esp

400011f0:	c9                   	leave  
400011f1:	c3                   	ret    

400011f2 <vmm_free>:
    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
400011f2:	55                   	push   %ebp
400011f3:	89 e5                	mov    %esp,%ebp
400011f5:	83 ec 34             	sub    $0x34,%esp
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
400011f8:	8b 45 08             	mov    0x8(%ebp),%eax
400011fb:	c7 45 e0 cc 00 00 00 	movl   $0xcc,-0x20(%ebp)
40001202:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            } while(pargs[n-1] != 0);

40001205:	8d 45 e0             	lea    -0x20(%ebp),%eax
40001208:	50                   	push   %eax
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
40001209:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001210:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40001217:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000121e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            } while(pargs[n-1] != 0);

40001225:	e8 42 00 00 00       	call   4000126c <syscall>
4000122a:	83 c4 10             	add    $0x10,%esp
            if(!strcmp(cmd, "cd")) {
4000122d:	c9                   	leave  
4000122e:	c3                   	ret    

4000122f <vmm_alloc_cont>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
4000122f:	55                   	push   %ebp
40001230:	89 e5                	mov    %esp,%ebp
40001232:	83 ec 34             	sub    $0x34,%esp
int main(int argc, char* args[])
{
    char epath[512];
    char instr[512];

    cd("ibin");
40001235:	8b 45 08             	mov    0x8(%ebp),%eax
40001238:	c7 45 e0 cb 00 00 00 	movl   $0xcb,-0x20(%ebp)
4000123f:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    while(1) {
40001242:	8d 45 e0             	lea    -0x20(%ebp),%eax
40001245:	50                   	push   %eax
int main(int argc, char* args[])
{
    char epath[512];
    char instr[512];

    cd("ibin");
40001246:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000124d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40001254:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000125b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    while(1) {
40001262:	e8 05 00 00 00       	call   4000126c <syscall>
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);
40001267:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000126a:	c9                   	leave  
4000126b:	c3                   	ret    

4000126c <syscall>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
4000126c:	55                   	push   %ebp
4000126d:	89 e5                	mov    %esp,%ebp
4000126f:	57                   	push   %edi
40001270:	56                   	push   %esi
40001271:	53                   	push   %ebx
40001272:	83 ec 10             	sub    $0x10,%esp
#include "string.h"
40001275:	8b 55 08             	mov    0x8(%ebp),%edx
40001278:	8b 45 08             	mov    0x8(%ebp),%eax
4000127b:	8b 72 0c             	mov    0xc(%edx),%esi
4000127e:	8b 00                	mov    (%eax),%eax
40001280:	89 75 e4             	mov    %esi,-0x1c(%ebp)
40001283:	8b 5a 04             	mov    0x4(%edx),%ebx
40001286:	8b 4a 08             	mov    0x8(%edx),%ecx
40001289:	8b 72 10             	mov    0x10(%edx),%esi
4000128c:	8b 7a 14             	mov    0x14(%edx),%edi
4000128f:	89 45 ec             	mov    %eax,-0x14(%ebp)
40001292:	8b 55 e4             	mov    -0x1c(%ebp),%edx
40001295:	cd 30                	int    $0x30
40001297:	89 55 e8             	mov    %edx,-0x18(%ebp)
4000129a:	8b 55 08             	mov    0x8(%ebp),%edx
4000129d:	89 45 f0             	mov    %eax,-0x10(%ebp)
400012a0:	89 02                	mov    %eax,(%edx)
400012a2:	8b 45 e8             	mov    -0x18(%ebp),%eax
400012a5:	89 5a 04             	mov    %ebx,0x4(%edx)
400012a8:	89 4a 08             	mov    %ecx,0x8(%edx)
400012ab:	89 42 0c             	mov    %eax,0xc(%edx)
400012ae:	89 72 10             	mov    %esi,0x10(%edx)
400012b1:	89 7a 14             	mov    %edi,0x14(%edx)
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

400012b4:	83 c4 10             	add    $0x10,%esp
400012b7:	5b                   	pop    %ebx
400012b8:	5e                   	pop    %esi
400012b9:	5f                   	pop    %edi
400012ba:	5d                   	pop    %ebp
400012bb:	c3                   	ret    
