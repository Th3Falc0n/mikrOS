
../../initrfs/ibin/csh:     file format elf32-i386
../../initrfs/ibin/csh
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x400004b6

Program Header:
    LOAD off    0x00001000 vaddr 0x40000000 paddr 0x40000000 align 2**12
         filesz 0x000021ca memsz 0x000021ca flags r-x
    LOAD off    0x00004000 vaddr 0x40003000 paddr 0x40003000 align 2**12
         filesz 0x00000000 memsz 0x00000214 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000128c  40000000  40000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000040  40002000  40002000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rodata.str1.1 0000018a  40002040  40002040  00003040  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000214  40003000  40003000  00004000  2**2
                  ALLOC
  4 .stab         000049d4  00000000  00000000  000031cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000007e  00000000  00000000  00007ba0  2**0
                  CONTENTS, READONLY
  6 .stabstr      000018c0  00000000  00000000  00007c1e  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
40000000 l    d  .text	00000000 .text
40002000 l    d  .rodata	00000000 .rodata
40002040 l    d  .rodata.str1.1	00000000 .rodata.str1.1
40003000 l    d  .bss	00000000 .bss
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 csh.c
00000000 l    df *ABS*	00000000 process.c
40003000 l     O .bss	00000200 irq_handlers
40002028 l     O .rodata	00000018 C.7.1019
40000528 l     F .text	000000c0 _handle_rpc
00000000 l    df *ABS*	00000000 stdio.c
400005e8 l     F .text	00000047 resolveHandle
40000a98 l     F .text	0000004a printrwerror
400008e5 l     F .text	0000003f putn
00000000 l    df *ABS*	00000000 string.c
00000000 l    df *ABS*	00000000 stdlib.c
40000f8c l     F .text	00000069 pop_unused_node
00000000 l    df *ABS*	00000000 vmmcall.c
00000000 l    df *ABS*	00000000 syscall.c
400002ac g     F .text	0000003d getExecPath
4000099c g     F .text	00000014 putchar
40000d49 g     F .text	00000033 strcpy
4000032f g     F .text	0000003e yield
400009b0 g     F .text	000000e8 printf
4000123c g     F .text	00000050 syscall
40000bad g     F .text	00000042 fgets
40000ba1 g     F .text	0000000c getc
40000c78 g     F .text	00000026 memcpy
400008d3 g     F .text	00000012 puts
4000036d g     F .text	0000003d pexists
40000ff5 g     F .text	000000f8 malloc
40000402 g     F .text	0000003d fetch_rpc_data
40000d7c g     F .text	000000a5 strtoknc
40000242 g     F .text	0000003d changeExecPath
40003210 g     O .bss	00000004 first_free
400001cf g     F .text	00000037 dexec
40000782 g     F .text	00000012 setstdout
4000114d g     F .text	00000034 calloc
40000206 g     F .text	0000003c getExecPathChild
400011ff g     F .text	0000003d vmm_alloc_cont
4000015d g     F .text	0000003b exec
400004b6 g     F .text	00000072 _start
400010ed g     F .text	00000060 realloc
40000479 g     F .text	0000003d set_rpc_handler
40000e5a g     F .text	00000052 strtok
40000c9e g     F .text	00000047 memcmp
40000198 g     F .text	00000037 sexec
40000ae2 g     F .text	00000085 fread
40003208 g     O .bss	00000004 first_unused
400006e6 g     F .text	0000003c fopen
40000c5c g     F .text	0000001c memset
40000000 g     F .text	000000ea main
400006a9 g     F .text	0000003d fclose
40000b92 g     F .text	0000000f getchar
40000bef g     F .text	0000006c getln
40003204 g     O .bss	00000004 fr
4000066c g     F .text	0000003d favailable
40000989 g     F .text	00000013 putc
40000ce5 g     F .text	00000049 strcmp
40000b67 g     F .text	0000002b fgetc
40003200 g     O .bss	00000004 sp
4000027f g     F .text	0000002d cd
4000320c g     O .bss	00000004 first_used
40000924 g     F .text	00000065 fputc
400007d2 g     F .text	00000093 fwrite
40000770 g     F .text	00000012 setstdin
40000e21 g     F .text	00000039 strclone
400002e9 g     F .text	00000046 exit
400003aa g     F .text	00000058 register_irq_handler
40000722 g     F .text	0000003c fopenpmhandle
400011c2 g     F .text	0000003d vmm_free
400000ec g     F .text	00000071 printFilesystemError
40000d2e g     F .text	0000001b strlen
40000794 g     F .text	0000003e getLastVFSErr
40000865 g     F .text	0000006e fputs
4000062f g     F .text	0000003d fmkfifo
4000043f g     F .text	0000003a call_rpc
4000075e g     F .text	00000012 setstderr
40001184 g     F .text	0000003e print_memstat
40000eac g     F .text	000000e0 free



Disassembly of section .text:

40000000 <main>:
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
40000004:	83 e4 f0             	and    $0xfffffff0,%esp
40000007:	ff 71 fc             	pushl  -0x4(%ecx)
4000000a:	55                   	push   %ebp
4000000b:	89 e5                	mov    %esp,%ebp
4000000d:	53                   	push   %ebx
4000000e:	51                   	push   %ecx
4000000f:	81 ec 10 05 00 00    	sub    $0x510,%esp
    char epath[512];
    char instr[512];

    cd("ibin");
40000015:	83 ec 0c             	sub    $0xc,%esp
40000018:	68 00 20 00 40       	push   $0x40002000
4000001d:	e8 5d 02 00 00       	call   4000027f <cd>
40000022:	83 c4 10             	add    $0x10,%esp
40000025:	eb 01                	jmp    40000028 <main+0x28>

            sexec(instr, pargs);

            printf("\n");
        }
    }
40000027:	90                   	nop    
    char instr[512];

    cd("ibin");

    while(1) {
        getExecPath(epath);
40000028:	83 ec 0c             	sub    $0xc,%esp
4000002b:	8d 85 f0 fd ff ff    	lea    -0x210(%ebp),%eax
40000031:	50                   	push   %eax
40000032:	e8 75 02 00 00       	call   400002ac <getExecPath>
40000037:	83 c4 10             	add    $0x10,%esp
        printf("$%s> ", epath);
4000003a:	83 ec 08             	sub    $0x8,%esp
4000003d:	8d 85 f0 fd ff ff    	lea    -0x210(%ebp),%eax
40000043:	50                   	push   %eax
40000044:	68 05 20 00 40       	push   $0x40002005
40000049:	e8 62 09 00 00       	call   400009b0 <printf>
4000004e:	83 c4 10             	add    $0x10,%esp
        getln(instr);
40000051:	83 ec 0c             	sub    $0xc,%esp
40000054:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
4000005a:	50                   	push   %eax
4000005b:	e8 8f 0b 00 00       	call   40000bef <getln>
40000060:	83 c4 10             	add    $0x10,%esp

        char* cmd = strtoknc(instr, " ");
40000063:	83 ec 08             	sub    $0x8,%esp
40000066:	68 0b 20 00 40       	push   $0x4000200b
4000006b:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
40000071:	50                   	push   %eax
40000072:	e8 05 0d 00 00       	call   40000d7c <strtoknc>
40000077:	83 c4 10             	add    $0x10,%esp
4000007a:	89 45 f0             	mov    %eax,-0x10(%ebp)

        if(cmd != 0) {
4000007d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
40000081:	74 a4                	je     40000027 <main+0x27>
            char* pargs[64];
            int n = 0;
40000083:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

            do {
                pargs[n] = strtoknc(0, " ");
4000008a:	8b 5d f4             	mov    -0xc(%ebp),%ebx
4000008d:	83 ec 08             	sub    $0x8,%esp
40000090:	68 0b 20 00 40       	push   $0x4000200b
40000095:	6a 00                	push   $0x0
40000097:	e8 e0 0c 00 00       	call   40000d7c <strtoknc>
4000009c:	83 c4 10             	add    $0x10,%esp
4000009f:	89 84 9d f0 fa ff ff 	mov    %eax,-0x510(%ebp,%ebx,4)
            } while(pargs[n++] != 0);
400000a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
400000a9:	8b 84 85 f0 fa ff ff 	mov    -0x510(%ebp,%eax,4),%eax
400000b0:	85 c0                	test   %eax,%eax
400000b2:	0f 95 c0             	setne  %al
400000b5:	ff 45 f4             	incl   -0xc(%ebp)
400000b8:	84 c0                	test   %al,%al
400000ba:	75 ce                	jne    4000008a <main+0x8a>

            sexec(instr, pargs);
400000bc:	83 ec 08             	sub    $0x8,%esp
400000bf:	8d 85 f0 fa ff ff    	lea    -0x510(%ebp),%eax
400000c5:	50                   	push   %eax
400000c6:	8d 85 f0 fb ff ff    	lea    -0x410(%ebp),%eax
400000cc:	50                   	push   %eax
400000cd:	e8 c6 00 00 00       	call   40000198 <sexec>
400000d2:	83 c4 10             	add    $0x10,%esp

            printf("\n");
400000d5:	83 ec 0c             	sub    $0xc,%esp
400000d8:	68 0d 20 00 40       	push   $0x4000200d
400000dd:	e8 ce 08 00 00       	call   400009b0 <printf>
400000e2:	83 c4 10             	add    $0x10,%esp
        }
    }
400000e5:	e9 3e ff ff ff       	jmp    40000028 <main+0x28>
	...

400000ec <printFilesystemError>:
400000ec:	55                   	push   %ebp
400000ed:	89 e5                	mov    %esp,%ebp
400000ef:	83 ec 08             	sub    $0x8,%esp
400000f2:	8b 55 0c             	mov    0xc(%ebp),%edx
400000f5:	8b 45 08             	mov    0x8(%ebp),%eax
400000f8:	83 fa 05             	cmp    $0x5,%edx
400000fb:	77 43                	ja     40000140 <printFilesystemError+0x54>
400000fd:	ff 24 95 10 20 00 40 	jmp    *0x40002010(,%edx,4)
40000104:	52                   	push   %edx
40000105:	52                   	push   %edx
40000106:	50                   	push   %eax
40000107:	68 40 20 00 40       	push   $0x40002040
4000010c:	eb 3a                	jmp    40000148 <printFilesystemError+0x5c>
4000010e:	51                   	push   %ecx
4000010f:	51                   	push   %ecx
40000110:	50                   	push   %eax
40000111:	68 52 20 00 40       	push   $0x40002052
40000116:	eb 30                	jmp    40000148 <printFilesystemError+0x5c>
40000118:	52                   	push   %edx
40000119:	52                   	push   %edx
4000011a:	50                   	push   %eax
4000011b:	68 71 20 00 40       	push   $0x40002071
40000120:	eb 26                	jmp    40000148 <printFilesystemError+0x5c>
40000122:	51                   	push   %ecx
40000123:	51                   	push   %ecx
40000124:	50                   	push   %eax
40000125:	68 9b 20 00 40       	push   $0x4000209b
4000012a:	eb 1c                	jmp    40000148 <printFilesystemError+0x5c>
4000012c:	52                   	push   %edx
4000012d:	52                   	push   %edx
4000012e:	50                   	push   %eax
4000012f:	68 b0 20 00 40       	push   $0x400020b0
40000134:	eb 12                	jmp    40000148 <printFilesystemError+0x5c>
40000136:	51                   	push   %ecx
40000137:	51                   	push   %ecx
40000138:	50                   	push   %eax
40000139:	68 eb 20 00 40       	push   $0x400020eb
4000013e:	eb 08                	jmp    40000148 <printFilesystemError+0x5c>
40000140:	52                   	push   %edx
40000141:	52                   	push   %edx
40000142:	50                   	push   %eax
40000143:	68 fe 20 00 40       	push   $0x400020fe
40000148:	e8 63 08 00 00       	call   400009b0 <printf>
4000014d:	c7 45 08 1b 21 00 40 	movl   $0x4000211b,0x8(%ebp)
40000154:	83 c4 10             	add    $0x10,%esp
40000157:	c9                   	leave  
40000158:	e9 53 08 00 00       	jmp    400009b0 <printf>

4000015d <exec>:
4000015d:	55                   	push   %ebp
4000015e:	89 e5                	mov    %esp,%ebp
40000160:	83 ec 34             	sub    $0x34,%esp
40000163:	8b 45 08             	mov    0x8(%ebp),%eax
40000166:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%ebp)
4000016d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000170:	8b 45 0c             	mov    0xc(%ebp),%eax
40000173:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000176:	8b 45 10             	mov    0x10(%ebp),%eax
40000179:	89 45 ec             	mov    %eax,-0x14(%ebp)
4000017c:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000017f:	50                   	push   %eax
40000180:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000187:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000018e:	e8 a9 10 00 00       	call   4000123c <syscall>
40000193:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000196:	c9                   	leave  
40000197:	c3                   	ret    

40000198 <sexec>:
40000198:	55                   	push   %ebp
40000199:	89 e5                	mov    %esp,%ebp
4000019b:	56                   	push   %esi
4000019c:	53                   	push   %ebx
4000019d:	53                   	push   %ebx
4000019e:	6a 01                	push   $0x1
400001a0:	8b 75 08             	mov    0x8(%ebp),%esi
400001a3:	ff 75 0c             	pushl  0xc(%ebp)
400001a6:	56                   	push   %esi
400001a7:	e8 b1 ff ff ff       	call   4000015d <exec>
400001ac:	83 c4 10             	add    $0x10,%esp
400001af:	89 c3                	mov    %eax,%ebx
400001b1:	85 c0                	test   %eax,%eax
400001b3:	75 11                	jne    400001c6 <sexec+0x2e>
400001b5:	e8 da 05 00 00       	call   40000794 <getLastVFSErr>
400001ba:	51                   	push   %ecx
400001bb:	51                   	push   %ecx
400001bc:	50                   	push   %eax
400001bd:	56                   	push   %esi
400001be:	e8 29 ff ff ff       	call   400000ec <printFilesystemError>
400001c3:	83 c4 10             	add    $0x10,%esp
400001c6:	8d 65 f8             	lea    -0x8(%ebp),%esp
400001c9:	89 d8                	mov    %ebx,%eax
400001cb:	5b                   	pop    %ebx
400001cc:	5e                   	pop    %esi
400001cd:	5d                   	pop    %ebp
400001ce:	c3                   	ret    

400001cf <dexec>:
400001cf:	55                   	push   %ebp
400001d0:	89 e5                	mov    %esp,%ebp
400001d2:	56                   	push   %esi
400001d3:	53                   	push   %ebx
400001d4:	51                   	push   %ecx
400001d5:	6a 00                	push   $0x0
400001d7:	8b 75 08             	mov    0x8(%ebp),%esi
400001da:	ff 75 0c             	pushl  0xc(%ebp)
400001dd:	56                   	push   %esi
400001de:	e8 7a ff ff ff       	call   4000015d <exec>
400001e3:	83 c4 10             	add    $0x10,%esp
400001e6:	89 c3                	mov    %eax,%ebx
400001e8:	85 c0                	test   %eax,%eax
400001ea:	75 11                	jne    400001fd <dexec+0x2e>
400001ec:	e8 a3 05 00 00       	call   40000794 <getLastVFSErr>
400001f1:	52                   	push   %edx
400001f2:	52                   	push   %edx
400001f3:	50                   	push   %eax
400001f4:	56                   	push   %esi
400001f5:	e8 f2 fe ff ff       	call   400000ec <printFilesystemError>
400001fa:	83 c4 10             	add    $0x10,%esp
400001fd:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000200:	89 d8                	mov    %ebx,%eax
40000202:	5b                   	pop    %ebx
40000203:	5e                   	pop    %esi
40000204:	5d                   	pop    %ebp
40000205:	c3                   	ret    

40000206 <getExecPathChild>:
40000206:	55                   	push   %ebp
40000207:	89 e5                	mov    %esp,%ebp
40000209:	83 ec 34             	sub    $0x34,%esp
4000020c:	8b 45 08             	mov    0x8(%ebp),%eax
4000020f:	c7 45 e0 11 00 00 00 	movl   $0x11,-0x20(%ebp)
40000216:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000219:	8b 45 0c             	mov    0xc(%ebp),%eax
4000021c:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000021f:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000222:	50                   	push   %eax
40000223:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000022a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000231:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000238:	e8 ff 0f 00 00       	call   4000123c <syscall>
4000023d:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000240:	c9                   	leave  
40000241:	c3                   	ret    

40000242 <changeExecPath>:
40000242:	55                   	push   %ebp
40000243:	89 e5                	mov    %esp,%ebp
40000245:	83 ec 34             	sub    $0x34,%esp
40000248:	8b 45 08             	mov    0x8(%ebp),%eax
4000024b:	c7 45 e0 07 00 00 00 	movl   $0x7,-0x20(%ebp)
40000252:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000255:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000258:	50                   	push   %eax
40000259:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000260:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000267:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000026e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000275:	e8 c2 0f 00 00       	call   4000123c <syscall>
4000027a:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000027d:	c9                   	leave  
4000027e:	c3                   	ret    

4000027f <cd>:
4000027f:	55                   	push   %ebp
40000280:	89 e5                	mov    %esp,%ebp
40000282:	53                   	push   %ebx
40000283:	83 ec 10             	sub    $0x10,%esp
40000286:	8b 5d 08             	mov    0x8(%ebp),%ebx
40000289:	53                   	push   %ebx
4000028a:	e8 b3 ff ff ff       	call   40000242 <changeExecPath>
4000028f:	83 c4 10             	add    $0x10,%esp
40000292:	85 c0                	test   %eax,%eax
40000294:	75 11                	jne    400002a7 <cd+0x28>
40000296:	e8 f9 04 00 00       	call   40000794 <getLastVFSErr>
4000029b:	52                   	push   %edx
4000029c:	52                   	push   %edx
4000029d:	50                   	push   %eax
4000029e:	53                   	push   %ebx
4000029f:	e8 48 fe ff ff       	call   400000ec <printFilesystemError>
400002a4:	83 c4 10             	add    $0x10,%esp
400002a7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
400002aa:	c9                   	leave  
400002ab:	c3                   	ret    

400002ac <getExecPath>:
400002ac:	55                   	push   %ebp
400002ad:	89 e5                	mov    %esp,%ebp
400002af:	83 ec 34             	sub    $0x34,%esp
400002b2:	8b 45 08             	mov    0x8(%ebp),%eax
400002b5:	c7 45 e0 06 00 00 00 	movl   $0x6,-0x20(%ebp)
400002bc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400002bf:	8d 45 e0             	lea    -0x20(%ebp),%eax
400002c2:	50                   	push   %eax
400002c3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400002ca:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400002d1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400002d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400002df:	e8 58 0f 00 00       	call   4000123c <syscall>
400002e4:	83 c4 10             	add    $0x10,%esp
400002e7:	c9                   	leave  
400002e8:	c3                   	ret    

400002e9 <exit>:
400002e9:	55                   	push   %ebp
400002ea:	89 e5                	mov    %esp,%ebp
400002ec:	83 ec 34             	sub    $0x34,%esp
400002ef:	8b 45 08             	mov    0x8(%ebp),%eax
400002f2:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
400002f9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400002fc:	8d 45 e0             	lea    -0x20(%ebp),%eax
400002ff:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000306:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000030d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000314:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000031b:	50                   	push   %eax
4000031c:	e8 1b 0f 00 00       	call   4000123c <syscall>
40000321:	c7 04 24 06 21 00 40 	movl   $0x40002106,(%esp)
40000328:	e8 83 06 00 00       	call   400009b0 <printf>
4000032d:	eb f2                	jmp    40000321 <exit+0x38>

4000032f <yield>:
4000032f:	55                   	push   %ebp
40000330:	89 e5                	mov    %esp,%ebp
40000332:	83 ec 34             	sub    $0x34,%esp
40000335:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000338:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%ebp)
4000033f:	50                   	push   %eax
40000340:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000347:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000034e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000355:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000035c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000363:	e8 d4 0e 00 00       	call   4000123c <syscall>
40000368:	83 c4 10             	add    $0x10,%esp
4000036b:	c9                   	leave  
4000036c:	c3                   	ret    

4000036d <pexists>:

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;
4000036d:	55                   	push   %ebp
4000036e:	89 e5                	mov    %esp,%ebp
40000370:	83 ec 34             	sub    $0x34,%esp
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

            printf("\n");
40000373:	8b 45 08             	mov    0x8(%ebp),%eax
40000376:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
4000037d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
        }
    }
40000380:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000383:	50                   	push   %eax
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

            printf("\n");
40000384:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000038b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000392:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000399:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        }
    }
400003a0:	e8 97 0e 00 00       	call   4000123c <syscall>

    return 0;
}
400003a5:	8b 45 e0             	mov    -0x20(%ebp),%eax
400003a8:	c9                   	leave  
400003a9:	c3                   	ret    

400003aa <register_irq_handler>:
400003aa:	55                   	push   %ebp
400003ab:	89 e5                	mov    %esp,%ebp
400003ad:	53                   	push   %ebx
400003ae:	83 ec 30             	sub    $0x30,%esp
400003b1:	8d 45 e0             	lea    -0x20(%ebp),%eax
400003b4:	8b 5d 08             	mov    0x8(%ebp),%ebx
400003b7:	50                   	push   %eax
400003b8:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%ebp)
400003bf:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
400003c2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400003c9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400003d0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400003d7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400003de:	e8 59 0e 00 00       	call   4000123c <syscall>
400003e3:	83 c4 10             	add    $0x10,%esp
400003e6:	31 c0                	xor    %eax,%eax
400003e8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
400003ec:	74 0f                	je     400003fd <register_irq_handler+0x53>
400003ee:	8b 45 0c             	mov    0xc(%ebp),%eax
400003f1:	89 04 9d 00 30 00 40 	mov    %eax,0x40003000(,%ebx,4)
400003f8:	b8 01 00 00 00       	mov    $0x1,%eax
400003fd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
40000400:	c9                   	leave  
40000401:	c3                   	ret    

40000402 <fetch_rpc_data>:
            printf("\n");
        }
    }

    return 0;
}
40000402:	55                   	push   %ebp
40000403:	89 e5                	mov    %esp,%ebp
40000405:	83 ec 34             	sub    $0x34,%esp
40000408:	8b 45 08             	mov    0x8(%ebp),%eax
4000040b:	c7 45 e0 21 00 00 00 	movl   $0x21,-0x20(%ebp)
40000412:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000415:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000418:	50                   	push   %eax
40000419:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000420:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000427:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000042e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000435:	e8 02 0e 00 00       	call   4000123c <syscall>
4000043a:	83 c4 10             	add    $0x10,%esp
4000043d:	c9                   	leave  
4000043e:	c3                   	ret    

4000043f <call_rpc>:
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
4000043f:	55                   	push   %ebp
40000440:	89 e5                	mov    %esp,%ebp
40000442:	83 ec 34             	sub    $0x34,%esp

            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);
40000445:	8b 45 08             	mov    0x8(%ebp),%eax
40000448:	c7 45 e0 1f 00 00 00 	movl   $0x1f,-0x20(%ebp)
4000044f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000452:	8b 45 0c             	mov    0xc(%ebp),%eax
40000455:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000458:	8b 45 10             	mov    0x10(%ebp),%eax
4000045b:	89 45 ec             	mov    %eax,-0x14(%ebp)
4000045e:	8b 45 14             	mov    0x14(%ebp),%eax
40000461:	89 45 f0             	mov    %eax,-0x10(%ebp)

            printf("\n");
40000464:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000467:	50                   	push   %eax

            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);
40000468:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

            printf("\n");
4000046f:	e8 c8 0d 00 00       	call   4000123c <syscall>
        }
    }

40000474:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000477:	c9                   	leave  
40000478:	c3                   	ret    

40000479 <set_rpc_handler>:
40000479:	55                   	push   %ebp
4000047a:	89 e5                	mov    %esp,%ebp
4000047c:	57                   	push   %edi
4000047d:	56                   	push   %esi
4000047e:	be 28 20 00 40       	mov    $0x40002028,%esi
40000483:	83 ec 24             	sub    $0x24,%esp
40000486:	8d 7d e0             	lea    -0x20(%ebp),%edi
40000489:	68 00 02 00 00       	push   $0x200
4000048e:	6a 00                	push   $0x0
40000490:	68 00 30 00 40       	push   $0x40003000
40000495:	e8 c2 07 00 00       	call   40000c5c <memset>
4000049a:	b9 06 00 00 00       	mov    $0x6,%ecx
4000049f:	8d 45 e0             	lea    -0x20(%ebp),%eax
400004a2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
400004a4:	89 04 24             	mov    %eax,(%esp)
400004a7:	e8 90 0d 00 00       	call   4000123c <syscall>
400004ac:	83 c4 10             	add    $0x10,%esp
400004af:	8d 65 f8             	lea    -0x8(%ebp),%esp
400004b2:	5e                   	pop    %esi
400004b3:	5f                   	pop    %edi
400004b4:	5d                   	pop    %ebp
400004b5:	c3                   	ret    

400004b6 <_start>:
    }

    return 0;
}
400004b6:	55                   	push   %ebp
400004b7:	89 e5                	mov    %esp,%ebp
400004b9:	56                   	push   %esi
400004ba:	53                   	push   %ebx
400004bb:	31 db                	xor    %ebx,%ebx
    }

    return 0;
}
400004bd:	83 ec 2c             	sub    $0x2c,%esp

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

400004c0:	8d 45 e0             	lea    -0x20(%ebp),%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400004c3:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%ebp)
400004ca:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
        getln(instr);

400004d1:	50                   	push   %eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400004d2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400004d9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400004e0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400004e7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getln(instr);

400004ee:	e8 49 0d 00 00       	call   4000123c <syscall>
        char* cmd = strtoknc(instr, " ");

400004f3:	8b 75 e0             	mov    -0x20(%ebp),%esi
400004f6:	83 c4 10             	add    $0x10,%esp
400004f9:	85 f6                	test   %esi,%esi
400004fb:	75 05                	jne    40000502 <_start+0x4c>
400004fd:	89 f3                	mov    %esi,%ebx
400004ff:	eb 07                	jmp    40000508 <_start+0x52>
40000501:	43                   	inc    %ebx
40000502:	83 3c 9e 00          	cmpl   $0x0,(%esi,%ebx,4)
40000506:	75 f9                	jne    40000501 <_start+0x4b>
40000508:	e8 6c ff ff ff       	call   40000479 <set_rpc_handler>
4000050d:	51                   	push   %ecx
4000050e:	51                   	push   %ecx
4000050f:	56                   	push   %esi
40000510:	53                   	push   %ebx
40000511:	e8 ea fa ff ff       	call   40000000 <main>
40000516:	89 04 24             	mov    %eax,(%esp)
40000519:	e8 cb fd ff ff       	call   400002e9 <exit>
4000051e:	83 c4 10             	add    $0x10,%esp
40000521:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000524:	5b                   	pop    %ebx
40000525:	5e                   	pop    %esi
40000526:	5d                   	pop    %ebp
40000527:	c3                   	ret    

40000528 <_handle_rpc>:
40000528:	55                   	push   %ebp
40000529:	89 e5                	mov    %esp,%ebp
4000052b:	56                   	push   %esi
4000052c:	53                   	push   %ebx
4000052d:	83 ec 2c             	sub    $0x2c,%esp
40000530:	ff 75 10             	pushl  0x10(%ebp)
40000533:	8b 75 0c             	mov    0xc(%ebp),%esi
40000536:	e8 ba 0a 00 00       	call   40000ff5 <malloc>
4000053b:	89 04 24             	mov    %eax,(%esp)
4000053e:	89 c3                	mov    %eax,%ebx
40000540:	e8 bd fe ff ff       	call   40000402 <fetch_rpc_data>
40000545:	83 c4 10             	add    $0x10,%esp
40000548:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
4000054c:	75 4b                	jne    40000599 <_handle_rpc+0x71>
4000054e:	8b 04 b5 00 30 00 40 	mov    0x40003000(,%esi,4),%eax
40000555:	85 c0                	test   %eax,%eax
40000557:	74 40                	je     40000599 <_handle_rpc+0x71>
40000559:	83 ec 0c             	sub    $0xc,%esp
4000055c:	56                   	push   %esi
4000055d:	ff d0                	call   *%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
4000055f:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000562:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
40000569:	89 04 24             	mov    %eax,(%esp)
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
4000056c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000573:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000057a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000581:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000588:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
4000058f:	e8 a8 0c 00 00       	call   4000123c <syscall>
40000594:	83 c4 10             	add    $0x10,%esp
40000597:	eb fe                	jmp    40000597 <_handle_rpc+0x6f>
40000599:	83 ec 0c             	sub    $0xc,%esp
4000059c:	68 0d 21 00 40       	push   $0x4000210d
400005a1:	e8 0a 04 00 00       	call   400009b0 <printf>
400005a6:	89 1c 24             	mov    %ebx,(%esp)
400005a9:	e8 fe 08 00 00       	call   40000eac <free>

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400005ae:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400005b1:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400005b8:	89 04 24             	mov    %eax,(%esp)
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400005bb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400005c2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400005c9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400005d0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400005d7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400005de:	e8 59 0c 00 00       	call   4000123c <syscall>
400005e3:	83 c4 10             	add    $0x10,%esp
400005e6:	eb fe                	jmp    400005e6 <_handle_rpc+0xbe>

400005e8 <resolveHandle>:
            printf("\n");
        }
    }

    return 0;
}
400005e8:	55                   	push   %ebp
400005e9:	89 e5                	mov    %esp,%ebp
400005eb:	83 ec 28             	sub    $0x28,%esp
400005ee:	3d fe 0f 00 00       	cmp    $0xffe,%eax
400005f3:	77 38                	ja     4000062d <resolveHandle+0x45>
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

            printf("\n");
400005f5:	83 ec 0c             	sub    $0xc,%esp

            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);
400005f8:	89 45 e4             	mov    %eax,-0x1c(%ebp)

            printf("\n");
400005fb:	8d 45 e0             	lea    -0x20(%ebp),%eax

            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);
400005fe:	c7 45 e0 14 00 00 00 	movl   $0x14,-0x20(%ebp)

            printf("\n");
40000605:	50                   	push   %eax

            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);
40000606:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000060d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000614:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000061b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

            printf("\n");
40000622:	e8 15 0c 00 00       	call   4000123c <syscall>
        }
    }
40000627:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000062a:	83 c4 10             	add    $0x10,%esp
}
4000062d:	c9                   	leave  
4000062e:	c3                   	ret    

4000062f <fmkfifo>:
4000062f:	55                   	push   %ebp
40000630:	89 e5                	mov    %esp,%ebp
40000632:	83 ec 34             	sub    $0x34,%esp
40000635:	8b 45 08             	mov    0x8(%ebp),%eax
40000638:	c7 45 e0 0e 00 00 00 	movl   $0xe,-0x20(%ebp)
4000063f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000642:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000645:	50                   	push   %eax
40000646:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000064d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000654:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000065b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000662:	e8 d5 0b 00 00       	call   4000123c <syscall>
40000667:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000066a:	c9                   	leave  
4000066b:	c3                   	ret    

4000066c <favailable>:
4000066c:	55                   	push   %ebp
4000066d:	89 e5                	mov    %esp,%ebp
4000066f:	83 ec 34             	sub    $0x34,%esp
40000672:	8b 45 08             	mov    0x8(%ebp),%eax
40000675:	c7 45 e0 10 00 00 00 	movl   $0x10,-0x20(%ebp)
4000067c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000067f:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000682:	50                   	push   %eax
40000683:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000068a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000691:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000698:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000069f:	e8 98 0b 00 00       	call   4000123c <syscall>
400006a4:	8b 45 e0             	mov    -0x20(%ebp),%eax
400006a7:	c9                   	leave  
400006a8:	c3                   	ret    

400006a9 <fclose>:
400006a9:	55                   	push   %ebp
400006aa:	89 e5                	mov    %esp,%ebp
400006ac:	83 ec 34             	sub    $0x34,%esp
400006af:	8b 45 08             	mov    0x8(%ebp),%eax
400006b2:	c7 45 e0 0b 00 00 00 	movl   $0xb,-0x20(%ebp)
400006b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006bc:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006bf:	50                   	push   %eax
400006c0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006c7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006ce:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400006d5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400006dc:	e8 5b 0b 00 00       	call   4000123c <syscall>
400006e1:	8b 45 e0             	mov    -0x20(%ebp),%eax
400006e4:	c9                   	leave  
400006e5:	c3                   	ret    

400006e6 <fopen>:
400006e6:	55                   	push   %ebp
400006e7:	89 e5                	mov    %esp,%ebp
400006e9:	83 ec 34             	sub    $0x34,%esp
400006ec:	8b 45 08             	mov    0x8(%ebp),%eax
400006ef:	c7 45 e0 0a 00 00 00 	movl   $0xa,-0x20(%ebp)
400006f6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006f9:	8b 45 0c             	mov    0xc(%ebp),%eax
400006fc:	89 45 e8             	mov    %eax,-0x18(%ebp)
400006ff:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000702:	50                   	push   %eax
40000703:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000070a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000711:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000718:	e8 1f 0b 00 00       	call   4000123c <syscall>
4000071d:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000720:	c9                   	leave  
40000721:	c3                   	ret    

40000722 <fopenpmhandle>:
40000722:	55                   	push   %ebp
40000723:	89 e5                	mov    %esp,%ebp
40000725:	83 ec 34             	sub    $0x34,%esp
40000728:	8b 45 08             	mov    0x8(%ebp),%eax
4000072b:	c7 45 e0 15 00 00 00 	movl   $0x15,-0x20(%ebp)
40000732:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000735:	8b 45 0c             	mov    0xc(%ebp),%eax
40000738:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000073b:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000073e:	50                   	push   %eax
4000073f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000746:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000074d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000754:	e8 e3 0a 00 00       	call   4000123c <syscall>
40000759:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000075c:	c9                   	leave  
4000075d:	c3                   	ret    

4000075e <setstderr>:
4000075e:	55                   	push   %ebp
4000075f:	89 e5                	mov    %esp,%ebp
40000761:	83 ec 10             	sub    $0x10,%esp
40000764:	ff 75 08             	pushl  0x8(%ebp)
40000767:	6a 03                	push   $0x3
40000769:	e8 b4 ff ff ff       	call   40000722 <fopenpmhandle>
4000076e:	c9                   	leave  
4000076f:	c3                   	ret    

40000770 <setstdin>:
40000770:	55                   	push   %ebp
40000771:	89 e5                	mov    %esp,%ebp
40000773:	83 ec 10             	sub    $0x10,%esp
40000776:	ff 75 08             	pushl  0x8(%ebp)
40000779:	6a 02                	push   $0x2
4000077b:	e8 a2 ff ff ff       	call   40000722 <fopenpmhandle>
40000780:	c9                   	leave  
40000781:	c3                   	ret    

40000782 <setstdout>:
40000782:	55                   	push   %ebp
40000783:	89 e5                	mov    %esp,%ebp
40000785:	83 ec 10             	sub    $0x10,%esp
40000788:	ff 75 08             	pushl  0x8(%ebp)
4000078b:	6a 01                	push   $0x1
4000078d:	e8 90 ff ff ff       	call   40000722 <fopenpmhandle>
40000792:	c9                   	leave  
40000793:	c3                   	ret    

40000794 <getLastVFSErr>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"

40000794:	55                   	push   %ebp
40000795:	89 e5                	mov    %esp,%ebp
40000797:	83 ec 34             	sub    $0x34,%esp

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
4000079a:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
4000079d:	c7 45 e0 0f 00 00 00 	movl   $0xf,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400007a4:	50                   	push   %eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400007a5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400007ac:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400007b3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400007ba:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400007c1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400007c8:	e8 6f 0a 00 00       	call   4000123c <syscall>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
400007cd:	8b 45 e0             	mov    -0x20(%ebp),%eax
400007d0:	c9                   	leave  
400007d1:	c3                   	ret    

400007d2 <fwrite>:
400007d2:	55                   	push   %ebp
400007d3:	89 e5                	mov    %esp,%ebp
400007d5:	57                   	push   %edi
400007d6:	56                   	push   %esi
400007d7:	53                   	push   %ebx
400007d8:	83 ec 3c             	sub    $0x3c,%esp
400007db:	8b 45 08             	mov    0x8(%ebp),%eax
400007de:	8b 7d 10             	mov    0x10(%ebp),%edi
400007e1:	e8 02 fe ff ff       	call   400005e8 <resolveHandle>
400007e6:	83 ec 0c             	sub    $0xc,%esp
400007e9:	89 c6                	mov    %eax,%esi
400007eb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
400007ee:	8b 45 0c             	mov    0xc(%ebp),%eax
400007f1:	c7 45 d0 0c 00 00 00 	movl   $0xc,-0x30(%ebp)
400007f8:	89 45 d8             	mov    %eax,-0x28(%ebp)
400007fb:	8d 45 d0             	lea    -0x30(%ebp),%eax
400007fe:	89 7d dc             	mov    %edi,-0x24(%ebp)
40000801:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000808:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
4000080f:	50                   	push   %eax
40000810:	89 45 c4             	mov    %eax,-0x3c(%ebp)
40000813:	eb 2d                	jmp    40000842 <fwrite+0x70>
40000815:	e8 15 fb ff ff       	call   4000032f <yield>
4000081a:	8b 45 0c             	mov    0xc(%ebp),%eax
4000081d:	83 ec 0c             	sub    $0xc,%esp
40000820:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000823:	8d 45 d0             	lea    -0x30(%ebp),%eax
40000826:	c7 45 d0 0c 00 00 00 	movl   $0xc,-0x30(%ebp)
4000082d:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000830:	89 7d dc             	mov    %edi,-0x24(%ebp)
40000833:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
4000083a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000841:	50                   	push   %eax
40000842:	e8 f5 09 00 00       	call   4000123c <syscall>
40000847:	8b 5d d0             	mov    -0x30(%ebp),%ebx
4000084a:	83 c4 10             	add    $0x10,%esp
4000084d:	83 fb 01             	cmp    $0x1,%ebx
40000850:	74 c3                	je     40000815 <fwrite+0x43>
40000852:	89 f0                	mov    %esi,%eax
40000854:	89 da                	mov    %ebx,%edx
40000856:	e8 3d 02 00 00       	call   40000a98 <printrwerror>
4000085b:	8d 65 f4             	lea    -0xc(%ebp),%esp
4000085e:	89 d8                	mov    %ebx,%eax
40000860:	5b                   	pop    %ebx
40000861:	5e                   	pop    %esi
40000862:	5f                   	pop    %edi
40000863:	5d                   	pop    %ebp
40000864:	c3                   	ret    

40000865 <fputs>:
40000865:	55                   	push   %ebp
40000866:	89 e5                	mov    %esp,%ebp
40000868:	56                   	push   %esi
40000869:	53                   	push   %ebx
4000086a:	83 ec 20             	sub    $0x20,%esp
4000086d:	8b 45 0c             	mov    0xc(%ebp),%eax
40000870:	8b 5d 08             	mov    0x8(%ebp),%ebx
40000873:	e8 70 fd ff ff       	call   400005e8 <resolveHandle>
40000878:	89 c6                	mov    %eax,%esi
4000087a:	85 c0                	test   %eax,%eax
4000087c:	74 16                	je     40000894 <fputs+0x2f>
4000087e:	83 ec 0c             	sub    $0xc,%esp
40000881:	53                   	push   %ebx
40000882:	e8 a7 04 00 00       	call   40000d2e <strlen>
40000887:	83 c4 0c             	add    $0xc,%esp
4000088a:	50                   	push   %eax
4000088b:	53                   	push   %ebx
4000088c:	56                   	push   %esi
4000088d:	e8 40 ff ff ff       	call   400007d2 <fwrite>
40000892:	eb 35                	jmp    400008c9 <fputs+0x64>
40000894:	83 ec 0c             	sub    $0xc,%esp
40000897:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000089a:	c7 45 e0 ca 00 00 00 	movl   $0xca,-0x20(%ebp)
400008a1:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
400008a4:	50                   	push   %eax
400008a5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400008ac:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400008b3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400008ba:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400008c1:	e8 76 09 00 00       	call   4000123c <syscall>
400008c6:	8b 45 e0             	mov    -0x20(%ebp),%eax
400008c9:	83 c4 10             	add    $0x10,%esp
400008cc:	8d 65 f8             	lea    -0x8(%ebp),%esp
400008cf:	5b                   	pop    %ebx
400008d0:	5e                   	pop    %esi
400008d1:	5d                   	pop    %ebp
400008d2:	c3                   	ret    

400008d3 <puts>:
400008d3:	55                   	push   %ebp
400008d4:	89 e5                	mov    %esp,%ebp
400008d6:	83 ec 10             	sub    $0x10,%esp
400008d9:	6a 01                	push   $0x1
400008db:	ff 75 08             	pushl  0x8(%ebp)
400008de:	e8 82 ff ff ff       	call   40000865 <fputs>
400008e3:	c9                   	leave  
400008e4:	c3                   	ret    

400008e5 <putn>:
400008e5:	55                   	push   %ebp
400008e6:	89 e5                	mov    %esp,%ebp
400008e8:	56                   	push   %esi
400008e9:	53                   	push   %ebx
400008ea:	31 f6                	xor    %esi,%esi
400008ec:	83 ec 50             	sub    $0x50,%esp
400008ef:	89 d3                	mov    %edx,%ebx
400008f1:	83 fa 24             	cmp    $0x24,%edx
400008f4:	7f 25                	jg     4000091b <putn+0x36>
400008f6:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
400008fa:	8d 4d f7             	lea    -0x9(%ebp),%ecx
400008fd:	31 d2                	xor    %edx,%edx
400008ff:	49                   	dec    %ecx
40000900:	f7 f3                	div    %ebx
40000902:	46                   	inc    %esi
40000903:	85 c0                	test   %eax,%eax
40000905:	8a 92 1d 21 00 40    	mov    0x4000211d(%edx),%dl
4000090b:	88 11                	mov    %dl,(%ecx)
4000090d:	75 ee                	jne    400008fd <putn+0x18>
4000090f:	83 ec 0c             	sub    $0xc,%esp
40000912:	51                   	push   %ecx
40000913:	e8 bb ff ff ff       	call   400008d3 <puts>
40000918:	83 c4 10             	add    $0x10,%esp
4000091b:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000091e:	89 f0                	mov    %esi,%eax
40000920:	5b                   	pop    %ebx
40000921:	5e                   	pop    %esi
40000922:	5d                   	pop    %ebp
40000923:	c3                   	ret    

40000924 <fputc>:
40000924:	55                   	push   %ebp
40000925:	89 e5                	mov    %esp,%ebp
40000927:	83 ec 38             	sub    $0x38,%esp
4000092a:	8b 45 08             	mov    0x8(%ebp),%eax
4000092d:	88 45 d4             	mov    %al,-0x2c(%ebp)
40000930:	8b 45 0c             	mov    0xc(%ebp),%eax
40000933:	e8 b0 fc ff ff       	call   400005e8 <resolveHandle>
40000938:	85 c0                	test   %eax,%eax
4000093a:	74 0f                	je     4000094b <fputc+0x27>
4000093c:	52                   	push   %edx
4000093d:	8d 55 d4             	lea    -0x2c(%ebp),%edx
40000940:	6a 01                	push   $0x1
40000942:	52                   	push   %edx
40000943:	50                   	push   %eax
40000944:	e8 89 fe ff ff       	call   400007d2 <fwrite>
40000949:	eb 39                	jmp    40000984 <fputc+0x60>
4000094b:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
4000094f:	83 ec 0c             	sub    $0xc,%esp
40000952:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000955:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000958:	c7 45 e0 c9 00 00 00 	movl   $0xc9,-0x20(%ebp)
4000095f:	50                   	push   %eax
40000960:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000967:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000096e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000975:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000097c:	e8 bb 08 00 00       	call   4000123c <syscall>
40000981:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000984:	83 c4 10             	add    $0x10,%esp
40000987:	c9                   	leave  
40000988:	c3                   	ret    

40000989 <putc>:
40000989:	55                   	push   %ebp
4000098a:	89 e5                	mov    %esp,%ebp
4000098c:	83 ec 08             	sub    $0x8,%esp
4000098f:	0f be 45 08          	movsbl 0x8(%ebp),%eax
40000993:	89 45 08             	mov    %eax,0x8(%ebp)
40000996:	c9                   	leave  
40000997:	e9 88 ff ff ff       	jmp    40000924 <fputc>

4000099c <putchar>:
4000099c:	55                   	push   %ebp
4000099d:	89 e5                	mov    %esp,%ebp
4000099f:	83 ec 10             	sub    $0x10,%esp
400009a2:	0f be 45 08          	movsbl 0x8(%ebp),%eax
400009a6:	6a 01                	push   $0x1
400009a8:	50                   	push   %eax
400009a9:	e8 76 ff ff ff       	call   40000924 <fputc>
400009ae:	c9                   	leave  
400009af:	c3                   	ret    

400009b0 <printf>:
400009b0:	55                   	push   %ebp
400009b1:	89 e5                	mov    %esp,%ebp
400009b3:	57                   	push   %edi
400009b4:	56                   	push   %esi
400009b5:	53                   	push   %ebx
400009b6:	83 ec 1c             	sub    $0x1c,%esp
400009b9:	8d 75 0c             	lea    0xc(%ebp),%esi
400009bc:	8b 7d 08             	mov    0x8(%ebp),%edi
400009bf:	31 db                	xor    %ebx,%ebx
400009c1:	e9 be 00 00 00       	jmp    40000a84 <printf+0xd4>
400009c6:	3c 25                	cmp    $0x25,%al
400009c8:	0f 85 a4 00 00 00    	jne    40000a72 <printf+0xc2>
400009ce:	47                   	inc    %edi
400009cf:	8a 07                	mov    (%edi),%al
400009d1:	3c 70                	cmp    $0x70,%al
400009d3:	74 47                	je     40000a1c <printf+0x6c>
400009d5:	7f 1a                	jg     400009f1 <printf+0x41>
400009d7:	3c 63                	cmp    $0x63,%al
400009d9:	74 5a                	je     40000a35 <printf+0x85>
400009db:	7f 0e                	jg     400009eb <printf+0x3b>
400009dd:	84 c0                	test   %al,%al
400009df:	0f 84 a9 00 00 00    	je     40000a8e <printf+0xde>
400009e5:	3c 25                	cmp    $0x25,%al
400009e7:	75 6c                	jne    40000a55 <printf+0xa5>
400009e9:	eb 63                	jmp    40000a4e <printf+0x9e>
400009eb:	3c 64                	cmp    $0x64,%al
400009ed:	75 66                	jne    40000a55 <printf+0xa5>
400009ef:	eb 1e                	jmp    40000a0f <printf+0x5f>
400009f1:	3c 75                	cmp    $0x75,%al
400009f3:	74 1a                	je     40000a0f <printf+0x5f>
400009f5:	3c 78                	cmp    $0x78,%al
400009f7:	74 23                	je     40000a1c <printf+0x6c>
400009f9:	3c 73                	cmp    $0x73,%al
400009fb:	75 58                	jne    40000a55 <printf+0xa5>
400009fd:	83 ec 0c             	sub    $0xc,%esp
40000a00:	8d 46 04             	lea    0x4(%esi),%eax
40000a03:	ff 36                	pushl  (%esi)
40000a05:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a08:	e8 c6 fe ff ff       	call   400008d3 <puts>
40000a0d:	eb 38                	jmp    40000a47 <printf+0x97>
40000a0f:	8d 46 04             	lea    0x4(%esi),%eax
40000a12:	ba 0a 00 00 00       	mov    $0xa,%edx
40000a17:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a1a:	eb 0b                	jmp    40000a27 <printf+0x77>
40000a1c:	8d 46 04             	lea    0x4(%esi),%eax
40000a1f:	ba 10 00 00 00       	mov    $0x10,%edx
40000a24:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a27:	8b 06                	mov    (%esi),%eax
40000a29:	e8 b7 fe ff ff       	call   400008e5 <putn>
40000a2e:	8b 75 e4             	mov    -0x1c(%ebp),%esi
40000a31:	01 c3                	add    %eax,%ebx
40000a33:	eb 4e                	jmp    40000a83 <printf+0xd3>
40000a35:	8d 46 04             	lea    0x4(%esi),%eax
40000a38:	83 ec 0c             	sub    $0xc,%esp
40000a3b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a3e:	0f be 06             	movsbl (%esi),%eax
40000a41:	50                   	push   %eax
40000a42:	e8 55 ff ff ff       	call   4000099c <putchar>
40000a47:	01 c3                	add    %eax,%ebx
40000a49:	8b 75 e4             	mov    -0x1c(%ebp),%esi
40000a4c:	eb 32                	jmp    40000a80 <printf+0xd0>
40000a4e:	83 ec 0c             	sub    $0xc,%esp
40000a51:	6a 25                	push   $0x25
40000a53:	eb 24                	jmp    40000a79 <printf+0xc9>
40000a55:	83 ec 0c             	sub    $0xc,%esp
40000a58:	6a 25                	push   $0x25
40000a5a:	e8 3d ff ff ff       	call   4000099c <putchar>
40000a5f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a62:	0f be 07             	movsbl (%edi),%eax
40000a65:	89 04 24             	mov    %eax,(%esp)
40000a68:	e8 2f ff ff ff       	call   4000099c <putchar>
40000a6d:	03 45 e4             	add    -0x1c(%ebp),%eax
40000a70:	eb 0c                	jmp    40000a7e <printf+0xce>
40000a72:	83 ec 0c             	sub    $0xc,%esp
40000a75:	0f be c0             	movsbl %al,%eax
40000a78:	50                   	push   %eax
40000a79:	e8 1e ff ff ff       	call   4000099c <putchar>
40000a7e:	01 c3                	add    %eax,%ebx
40000a80:	83 c4 10             	add    $0x10,%esp
40000a83:	47                   	inc    %edi
40000a84:	8a 07                	mov    (%edi),%al
40000a86:	84 c0                	test   %al,%al
40000a88:	0f 85 38 ff ff ff    	jne    400009c6 <printf+0x16>
40000a8e:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000a91:	89 d8                	mov    %ebx,%eax
40000a93:	5b                   	pop    %ebx
40000a94:	5e                   	pop    %esi
40000a95:	5f                   	pop    %edi
40000a96:	5d                   	pop    %ebp
40000a97:	c3                   	ret    

40000a98 <printrwerror>:
40000a98:	55                   	push   %ebp
40000a99:	89 e5                	mov    %esp,%ebp
40000a9b:	83 ec 08             	sub    $0x8,%esp
40000a9e:	83 fa 02             	cmp    $0x2,%edx
40000aa1:	75 0a                	jne    40000aad <printrwerror+0x15>
40000aa3:	52                   	push   %edx
40000aa4:	52                   	push   %edx
40000aa5:	50                   	push   %eax
40000aa6:	68 42 21 00 40       	push   $0x40002142
40000aab:	eb 2b                	jmp    40000ad8 <printrwerror+0x40>
40000aad:	83 fa 03             	cmp    $0x3,%edx
40000ab0:	75 0a                	jne    40000abc <printrwerror+0x24>
40000ab2:	51                   	push   %ecx
40000ab3:	51                   	push   %ecx
40000ab4:	50                   	push   %eax
40000ab5:	68 5a 21 00 40       	push   $0x4000215a
40000aba:	eb 1c                	jmp    40000ad8 <printrwerror+0x40>
40000abc:	83 fa 04             	cmp    $0x4,%edx
40000abf:	75 0a                	jne    40000acb <printrwerror+0x33>
40000ac1:	52                   	push   %edx
40000ac2:	52                   	push   %edx
40000ac3:	50                   	push   %eax
40000ac4:	68 75 21 00 40       	push   $0x40002175
40000ac9:	eb 0d                	jmp    40000ad8 <printrwerror+0x40>
40000acb:	83 fa 05             	cmp    $0x5,%edx
40000ace:	75 10                	jne    40000ae0 <printrwerror+0x48>
40000ad0:	51                   	push   %ecx
40000ad1:	51                   	push   %ecx
40000ad2:	50                   	push   %eax
40000ad3:	68 9f 21 00 40       	push   $0x4000219f
40000ad8:	e8 d3 fe ff ff       	call   400009b0 <printf>
40000add:	83 c4 10             	add    $0x10,%esp
40000ae0:	c9                   	leave  
40000ae1:	c3                   	ret    

40000ae2 <fread>:
40000ae2:	55                   	push   %ebp
40000ae3:	89 e5                	mov    %esp,%ebp
40000ae5:	57                   	push   %edi
40000ae6:	56                   	push   %esi
40000ae7:	53                   	push   %ebx
40000ae8:	83 ec 38             	sub    $0x38,%esp
40000aeb:	8d 7d d0             	lea    -0x30(%ebp),%edi
40000aee:	8b 45 0c             	mov    0xc(%ebp),%eax
40000af1:	8b 75 08             	mov    0x8(%ebp),%esi
40000af4:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000af7:	8b 45 10             	mov    0x10(%ebp),%eax
40000afa:	c7 45 d0 0d 00 00 00 	movl   $0xd,-0x30(%ebp)
40000b01:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000b04:	89 45 dc             	mov    %eax,-0x24(%ebp)
40000b07:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000b0e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000b15:	eb 2c                	jmp    40000b43 <fread+0x61>
40000b17:	e8 13 f8 ff ff       	call   4000032f <yield>
40000b1c:	8b 45 0c             	mov    0xc(%ebp),%eax
40000b1f:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000b22:	8b 45 10             	mov    0x10(%ebp),%eax
40000b25:	c7 45 d0 0d 00 00 00 	movl   $0xd,-0x30(%ebp)
40000b2c:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000b2f:	89 45 dc             	mov    %eax,-0x24(%ebp)
40000b32:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000b39:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000b40:	83 ec 0c             	sub    $0xc,%esp
40000b43:	57                   	push   %edi
40000b44:	e8 f3 06 00 00       	call   4000123c <syscall>
40000b49:	8b 5d d0             	mov    -0x30(%ebp),%ebx
40000b4c:	83 c4 10             	add    $0x10,%esp
40000b4f:	83 fb 01             	cmp    $0x1,%ebx
40000b52:	74 c3                	je     40000b17 <fread+0x35>
40000b54:	89 f0                	mov    %esi,%eax
40000b56:	89 da                	mov    %ebx,%edx
40000b58:	e8 3b ff ff ff       	call   40000a98 <printrwerror>
40000b5d:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000b60:	89 d8                	mov    %ebx,%eax
40000b62:	5b                   	pop    %ebx
40000b63:	5e                   	pop    %esi
40000b64:	5f                   	pop    %edi
40000b65:	5d                   	pop    %ebp
40000b66:	c3                   	ret    

40000b67 <fgetc>:
40000b67:	55                   	push   %ebp
40000b68:	89 e5                	mov    %esp,%ebp
40000b6a:	83 ec 18             	sub    $0x18,%esp
40000b6d:	8b 45 08             	mov    0x8(%ebp),%eax
40000b70:	e8 73 fa ff ff       	call   400005e8 <resolveHandle>
40000b75:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
40000b79:	85 c0                	test   %eax,%eax
40000b7b:	74 10                	je     40000b8d <fgetc+0x26>
40000b7d:	8d 55 f7             	lea    -0x9(%ebp),%edx
40000b80:	51                   	push   %ecx
40000b81:	6a 01                	push   $0x1
40000b83:	52                   	push   %edx
40000b84:	50                   	push   %eax
40000b85:	e8 58 ff ff ff       	call   40000ae2 <fread>
40000b8a:	83 c4 10             	add    $0x10,%esp
40000b8d:	8a 45 f7             	mov    -0x9(%ebp),%al
40000b90:	c9                   	leave  
40000b91:	c3                   	ret    

40000b92 <getchar>:
40000b92:	55                   	push   %ebp
40000b93:	89 e5                	mov    %esp,%ebp
40000b95:	83 ec 14             	sub    $0x14,%esp
40000b98:	6a 02                	push   $0x2
40000b9a:	e8 c8 ff ff ff       	call   40000b67 <fgetc>
40000b9f:	c9                   	leave  
40000ba0:	c3                   	ret    

40000ba1 <getc>:
40000ba1:	55                   	push   %ebp
40000ba2:	89 e5                	mov    %esp,%ebp
40000ba4:	83 ec 08             	sub    $0x8,%esp
40000ba7:	c9                   	leave  
40000ba8:	e9 ba ff ff ff       	jmp    40000b67 <fgetc>

40000bad <fgets>:
40000bad:	55                   	push   %ebp
40000bae:	89 e5                	mov    %esp,%ebp
40000bb0:	57                   	push   %edi
40000bb1:	56                   	push   %esi
40000bb2:	53                   	push   %ebx
40000bb3:	83 ec 1c             	sub    $0x1c,%esp
40000bb6:	31 db                	xor    %ebx,%ebx
40000bb8:	8b 7d 0c             	mov    0xc(%ebp),%edi
40000bbb:	8b 75 08             	mov    0x8(%ebp),%esi
40000bbe:	8d 47 ff             	lea    -0x1(%edi),%eax
40000bc1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000bc4:	eb 16                	jmp    40000bdc <fgets+0x2f>
40000bc6:	83 ec 0c             	sub    $0xc,%esp
40000bc9:	ff 75 10             	pushl  0x10(%ebp)
40000bcc:	e8 96 ff ff ff       	call   40000b67 <fgetc>
40000bd1:	83 c4 10             	add    $0x10,%esp
40000bd4:	88 04 1e             	mov    %al,(%esi,%ebx,1)
40000bd7:	84 c0                	test   %al,%al
40000bd9:	74 0a                	je     40000be5 <fgets+0x38>
40000bdb:	43                   	inc    %ebx
40000bdc:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
40000bdf:	7c e5                	jl     40000bc6 <fgets+0x19>
40000be1:	c6 04 3e 00          	movb   $0x0,(%esi,%edi,1)
40000be5:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000be8:	89 f0                	mov    %esi,%eax
40000bea:	5b                   	pop    %ebx
40000beb:	5e                   	pop    %esi
40000bec:	5f                   	pop    %edi
40000bed:	5d                   	pop    %ebp
40000bee:	c3                   	ret    

40000bef <getln>:
40000bef:	55                   	push   %ebp
40000bf0:	89 e5                	mov    %esp,%ebp
40000bf2:	56                   	push   %esi
40000bf3:	53                   	push   %ebx
40000bf4:	31 db                	xor    %ebx,%ebx
40000bf6:	8b 75 08             	mov    0x8(%ebp),%esi
40000bf9:	eb 42                	jmp    40000c3d <getln+0x4e>
40000bfb:	3c 0a                	cmp    $0xa,%al
40000bfd:	75 0f                	jne    40000c0e <getln+0x1f>
40000bff:	83 ec 0c             	sub    $0xc,%esp
40000c02:	6a 0a                	push   $0xa
40000c04:	e8 93 fd ff ff       	call   4000099c <putchar>
40000c09:	83 c4 10             	add    $0x10,%esp
40000c0c:	eb 40                	jmp    40000c4e <getln+0x5f>
40000c0e:	3c 08                	cmp    $0x8,%al
40000c10:	75 18                	jne    40000c2a <getln+0x3b>
40000c12:	85 db                	test   %ebx,%ebx
40000c14:	74 0e                	je     40000c24 <getln+0x35>
40000c16:	83 ec 0c             	sub    $0xc,%esp
40000c19:	4b                   	dec    %ebx
40000c1a:	6a 08                	push   $0x8
40000c1c:	e8 7b fd ff ff       	call   4000099c <putchar>
40000c21:	83 c4 10             	add    $0x10,%esp
40000c24:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
40000c28:	eb 13                	jmp    40000c3d <getln+0x4e>
40000c2a:	83 ec 0c             	sub    $0xc,%esp
40000c2d:	88 04 1e             	mov    %al,(%esi,%ebx,1)
40000c30:	0f be c0             	movsbl %al,%eax
40000c33:	50                   	push   %eax
40000c34:	43                   	inc    %ebx
40000c35:	e8 62 fd ff ff       	call   4000099c <putchar>
40000c3a:	83 c4 10             	add    $0x10,%esp
40000c3d:	83 ec 0c             	sub    $0xc,%esp
40000c40:	6a 02                	push   $0x2
40000c42:	e8 20 ff ff ff       	call   40000b67 <fgetc>
40000c47:	83 c4 10             	add    $0x10,%esp
40000c4a:	84 c0                	test   %al,%al
40000c4c:	75 ad                	jne    40000bfb <getln+0xc>
40000c4e:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
40000c52:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000c55:	89 f0                	mov    %esi,%eax
40000c57:	5b                   	pop    %ebx
40000c58:	5e                   	pop    %esi
40000c59:	5d                   	pop    %ebp
40000c5a:	c3                   	ret    
	...

40000c5c <memset>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"
40000c5c:	55                   	push   %ebp
40000c5d:	89 e5                	mov    %esp,%ebp
40000c5f:	53                   	push   %ebx
40000c60:	8b 45 08             	mov    0x8(%ebp),%eax
40000c63:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000c66:	8b 4d 10             	mov    0x10(%ebp),%ecx

40000c69:	89 c2                	mov    %eax,%edx
int main(int argc, char* args[])
{
40000c6b:	eb 04                	jmp    40000c71 <memset+0x15>
    char epath[512];
40000c6d:	88 1a                	mov    %bl,(%edx)
40000c6f:	49                   	dec    %ecx
40000c70:	42                   	inc    %edx
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000c71:	85 c9                	test   %ecx,%ecx
40000c73:	75 f8                	jne    40000c6d <memset+0x11>
    char epath[512];
    char instr[512];

    cd("ibin");

40000c75:	5b                   	pop    %ebx
40000c76:	5d                   	pop    %ebp
40000c77:	c3                   	ret    

40000c78 <memcpy>:
    while(1) {
        getExecPath(epath);
40000c78:	55                   	push   %ebp
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000c79:	31 c9                	xor    %ecx,%ecx
    char instr[512];

    cd("ibin");

    while(1) {
        getExecPath(epath);
40000c7b:	89 e5                	mov    %esp,%ebp
40000c7d:	56                   	push   %esi
40000c7e:	53                   	push   %ebx
40000c7f:	8b 75 10             	mov    0x10(%ebp),%esi
40000c82:	8b 45 08             	mov    0x8(%ebp),%eax
40000c85:	8b 5d 0c             	mov    0xc(%ebp),%ebx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000c88:	85 f6                	test   %esi,%esi
40000c8a:	75 04                	jne    40000c90 <memcpy+0x18>
40000c8c:	31 c0                	xor    %eax,%eax
40000c8e:	eb 0a                	jmp    40000c9a <memcpy+0x22>

        if(cmd != 0) {
            char* pargs[64];
40000c90:	8a 14 0b             	mov    (%ebx,%ecx,1),%dl
40000c93:	88 14 08             	mov    %dl,(%eax,%ecx,1)
40000c96:	41                   	inc    %ecx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000c97:	4e                   	dec    %esi
40000c98:	75 f6                	jne    40000c90 <memcpy+0x18>
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
40000c9a:	5b                   	pop    %ebx
40000c9b:	5e                   	pop    %esi
40000c9c:	5d                   	pop    %ebp
40000c9d:	c3                   	ret    

40000c9e <memcmp>:
            } while(pargs[n++] != 0);

40000c9e:	55                   	push   %ebp
            sexec(instr, pargs);
40000c9f:	83 c8 ff             	or     $0xffffffff,%eax
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

40000ca2:	89 e5                	mov    %esp,%ebp
40000ca4:	57                   	push   %edi
40000ca5:	56                   	push   %esi
40000ca6:	53                   	push   %ebx
40000ca7:	8b 75 08             	mov    0x8(%ebp),%esi
40000caa:	8b 7d 0c             	mov    0xc(%ebp),%edi
40000cad:	8b 5d 10             	mov    0x10(%ebp),%ebx
            sexec(instr, pargs);
40000cb0:	85 f6                	test   %esi,%esi
40000cb2:	74 2c                	je     40000ce0 <memcmp+0x42>

            printf("\n");
40000cb4:	b8 01 00 00 00       	mov    $0x1,%eax
40000cb9:	85 ff                	test   %edi,%edi
40000cbb:	74 23                	je     40000ce0 <memcmp+0x42>
        }
    }
40000cbd:	31 d2                	xor    %edx,%edx
40000cbf:	85 db                	test   %ebx,%ebx
40000cc1:	75 17                	jne    40000cda <memcmp+0x3c>
40000cc3:	eb 19                	jmp    40000cde <memcmp+0x40>
    return 0;
}
40000cc5:	8a 04 16             	mov    (%esi,%edx,1),%al
40000cc8:	8a 0c 17             	mov    (%edi,%edx,1),%cl
40000ccb:	38 c8                	cmp    %cl,%al
40000ccd:	74 0a                	je     40000cd9 <memcmp+0x3b>
40000ccf:	0f b6 c0             	movzbl %al,%eax
40000cd2:	0f b6 c9             	movzbl %cl,%ecx
40000cd5:	29 c8                	sub    %ecx,%eax
40000cd7:	eb 07                	jmp    40000ce0 <memcmp+0x42>

    return 0;
}
40000cd9:	42                   	inc    %edx
40000cda:	39 da                	cmp    %ebx,%edx
40000cdc:	72 e7                	jb     40000cc5 <memcmp+0x27>
40000cde:	31 c0                	xor    %eax,%eax
40000ce0:	5b                   	pop    %ebx
40000ce1:	5e                   	pop    %esi
40000ce2:	5f                   	pop    %edi
40000ce3:	5d                   	pop    %ebp
40000ce4:	c3                   	ret    

40000ce5 <strcmp>:
40000ce5:	55                   	push   %ebp
40000ce6:	31 c0                	xor    %eax,%eax
40000ce8:	89 e5                	mov    %esp,%ebp
40000cea:	56                   	push   %esi
40000ceb:	53                   	push   %ebx
40000cec:	31 db                	xor    %ebx,%ebx
40000cee:	8b 55 08             	mov    0x8(%ebp),%edx
40000cf1:	8b 4d 0c             	mov    0xc(%ebp),%ecx
40000cf4:	85 d2                	test   %edx,%edx
40000cf6:	75 03                	jne    40000cfb <strcmp+0x16>
40000cf8:	eb 09                	jmp    40000d03 <strcmp+0x1e>
40000cfa:	40                   	inc    %eax
40000cfb:	89 c3                	mov    %eax,%ebx
40000cfd:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
40000d01:	75 f7                	jne    40000cfa <strcmp+0x15>
40000d03:	31 c0                	xor    %eax,%eax
40000d05:	31 f6                	xor    %esi,%esi
40000d07:	85 c9                	test   %ecx,%ecx
40000d09:	75 03                	jne    40000d0e <strcmp+0x29>
40000d0b:	eb 09                	jmp    40000d16 <strcmp+0x31>
40000d0d:	40                   	inc    %eax
40000d0e:	89 c6                	mov    %eax,%esi
40000d10:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)
40000d14:	75 f7                	jne    40000d0d <strcmp+0x28>
40000d16:	89 f0                	mov    %esi,%eax
40000d18:	39 de                	cmp    %ebx,%esi
40000d1a:	7e 02                	jle    40000d1e <strcmp+0x39>
40000d1c:	89 d8                	mov    %ebx,%eax
40000d1e:	40                   	inc    %eax
40000d1f:	50                   	push   %eax
40000d20:	51                   	push   %ecx
40000d21:	52                   	push   %edx
40000d22:	e8 77 ff ff ff       	call   40000c9e <memcmp>
40000d27:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000d2a:	5b                   	pop    %ebx
40000d2b:	5e                   	pop    %esi
40000d2c:	5d                   	pop    %ebp
40000d2d:	c3                   	ret    

40000d2e <strlen>:
40000d2e:	55                   	push   %ebp
40000d2f:	31 d2                	xor    %edx,%edx
40000d31:	89 e5                	mov    %esp,%ebp
40000d33:	31 c0                	xor    %eax,%eax
40000d35:	8b 4d 08             	mov    0x8(%ebp),%ecx
40000d38:	85 c9                	test   %ecx,%ecx
40000d3a:	75 03                	jne    40000d3f <strlen+0x11>
40000d3c:	eb 09                	jmp    40000d47 <strlen+0x19>
40000d3e:	42                   	inc    %edx
40000d3f:	89 d0                	mov    %edx,%eax
40000d41:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)
40000d45:	75 f7                	jne    40000d3e <strlen+0x10>
40000d47:	5d                   	pop    %ebp
40000d48:	c3                   	ret    

40000d49 <strcpy>:
40000d49:	55                   	push   %ebp
40000d4a:	31 d2                	xor    %edx,%edx
40000d4c:	89 e5                	mov    %esp,%ebp
40000d4e:	56                   	push   %esi
40000d4f:	53                   	push   %ebx
40000d50:	31 c9                	xor    %ecx,%ecx
40000d52:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000d55:	8b 45 08             	mov    0x8(%ebp),%eax
40000d58:	85 db                	test   %ebx,%ebx
40000d5a:	75 03                	jne    40000d5f <strcpy+0x16>
40000d5c:	eb 09                	jmp    40000d67 <strcpy+0x1e>
40000d5e:	42                   	inc    %edx
40000d5f:	89 d1                	mov    %edx,%ecx
40000d61:	80 3c 13 00          	cmpb   $0x0,(%ebx,%edx,1)
40000d65:	75 f7                	jne    40000d5e <strcpy+0x15>
    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000d67:	89 ce                	mov    %ecx,%esi
40000d69:	46                   	inc    %esi
40000d6a:	74 0c                	je     40000d78 <strcpy+0x2f>
40000d6c:	31 d2                	xor    %edx,%edx

        if(cmd != 0) {
            char* pargs[64];
40000d6e:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
40000d71:	88 0c 10             	mov    %cl,(%eax,%edx,1)
40000d74:	42                   	inc    %edx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000d75:	4e                   	dec    %esi
40000d76:	75 f6                	jne    40000d6e <strcpy+0x25>
40000d78:	5b                   	pop    %ebx
40000d79:	5e                   	pop    %esi
40000d7a:	5d                   	pop    %ebp
40000d7b:	c3                   	ret    

40000d7c <strtoknc>:
40000d7c:	55                   	push   %ebp
40000d7d:	31 c0                	xor    %eax,%eax
40000d7f:	89 e5                	mov    %esp,%ebp
40000d81:	57                   	push   %edi
40000d82:	56                   	push   %esi
40000d83:	53                   	push   %ebx
40000d84:	83 ec 04             	sub    $0x4,%esp
40000d87:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000d8a:	8b 4d 08             	mov    0x8(%ebp),%ecx
40000d8d:	85 db                	test   %ebx,%ebx
40000d8f:	75 06                	jne    40000d97 <strtoknc+0x1b>
40000d91:	e9 83 00 00 00       	jmp    40000e19 <strtoknc+0x9d>
40000d96:	40                   	inc    %eax
40000d97:	89 c7                	mov    %eax,%edi
40000d99:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
40000d9d:	75 f7                	jne    40000d96 <strtoknc+0x1a>
40000d9f:	85 c0                	test   %eax,%eax
40000da1:	74 76                	je     40000e19 <strtoknc+0x9d>
40000da3:	85 c9                	test   %ecx,%ecx
40000da5:	75 0b                	jne    40000db2 <strtoknc+0x36>
40000da7:	83 3d 00 32 00 40 00 	cmpl   $0x0,0x40003200
40000dae:	75 08                	jne    40000db8 <strtoknc+0x3c>
40000db0:	eb 67                	jmp    40000e19 <strtoknc+0x9d>
40000db2:	89 0d 00 32 00 40    	mov    %ecx,0x40003200
40000db8:	a1 00 32 00 40       	mov    0x40003200,%eax
40000dbd:	31 c9                	xor    %ecx,%ecx
40000dbf:	eb 0b                	jmp    40000dcc <strtoknc+0x50>
40000dc1:	8a 10                	mov    (%eax),%dl
40000dc3:	3a 14 0b             	cmp    (%ebx,%ecx,1),%dl
40000dc6:	75 03                	jne    40000dcb <strtoknc+0x4f>
40000dc8:	40                   	inc    %eax
40000dc9:	eb 05                	jmp    40000dd0 <strtoknc+0x54>
40000dcb:	41                   	inc    %ecx
40000dcc:	39 f9                	cmp    %edi,%ecx
40000dce:	7c f1                	jl     40000dc1 <strtoknc+0x45>
40000dd0:	39 f9                	cmp    %edi,%ecx
40000dd2:	75 e9                	jne    40000dbd <strtoknc+0x41>
40000dd4:	a3 00 32 00 40       	mov    %eax,0x40003200
40000dd9:	80 38 00             	cmpb   $0x0,(%eax)
40000ddc:	75 28                	jne    40000e06 <strtoknc+0x8a>
40000dde:	c7 05 00 32 00 40 00 	movl   $0x0,0x40003200
40000de5:	00 00 00 
40000de8:	eb 2f                	jmp    40000e19 <strtoknc+0x9d>
40000dea:	8a 55 f3             	mov    -0xd(%ebp),%dl
40000ded:	3a 14 0b             	cmp    (%ebx,%ecx,1),%dl
40000df0:	75 05                	jne    40000df7 <strtoknc+0x7b>
40000df2:	c6 06 00             	movb   $0x0,(%esi)
40000df5:	eb 05                	jmp    40000dfc <strtoknc+0x80>
40000df7:	41                   	inc    %ecx
40000df8:	39 f9                	cmp    %edi,%ecx
40000dfa:	7c ee                	jl     40000dea <strtoknc+0x6e>
40000dfc:	ff 05 00 32 00 40    	incl   0x40003200
40000e02:	39 f9                	cmp    %edi,%ecx
40000e04:	7c 15                	jl     40000e1b <strtoknc+0x9f>
40000e06:	8b 35 00 32 00 40    	mov    0x40003200,%esi
40000e0c:	8a 16                	mov    (%esi),%dl
40000e0e:	88 55 f3             	mov    %dl,-0xd(%ebp)
40000e11:	84 d2                	test   %dl,%dl
40000e13:	74 06                	je     40000e1b <strtoknc+0x9f>
40000e15:	31 c9                	xor    %ecx,%ecx
40000e17:	eb df                	jmp    40000df8 <strtoknc+0x7c>
40000e19:	31 c0                	xor    %eax,%eax
40000e1b:	5a                   	pop    %edx
40000e1c:	5b                   	pop    %ebx
40000e1d:	5e                   	pop    %esi
40000e1e:	5f                   	pop    %edi
40000e1f:	5d                   	pop    %ebp
40000e20:	c3                   	ret    

40000e21 <strclone>:
40000e21:	55                   	push   %ebp
40000e22:	31 c0                	xor    %eax,%eax
40000e24:	89 e5                	mov    %esp,%ebp
40000e26:	56                   	push   %esi
40000e27:	53                   	push   %ebx
40000e28:	31 d2                	xor    %edx,%edx
40000e2a:	8b 5d 08             	mov    0x8(%ebp),%ebx
40000e2d:	85 db                	test   %ebx,%ebx
40000e2f:	75 03                	jne    40000e34 <strclone+0x13>
40000e31:	eb 09                	jmp    40000e3c <strclone+0x1b>
40000e33:	40                   	inc    %eax
40000e34:	89 c2                	mov    %eax,%edx
40000e36:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
40000e3a:	75 f7                	jne    40000e33 <strclone+0x12>
40000e3c:	83 ec 0c             	sub    $0xc,%esp
40000e3f:	42                   	inc    %edx
40000e40:	52                   	push   %edx
40000e41:	e8 af 01 00 00       	call   40000ff5 <malloc>
40000e46:	59                   	pop    %ecx
40000e47:	89 c6                	mov    %eax,%esi
40000e49:	58                   	pop    %eax
40000e4a:	53                   	push   %ebx
40000e4b:	56                   	push   %esi
40000e4c:	e8 f8 fe ff ff       	call   40000d49 <strcpy>
40000e51:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000e54:	89 f0                	mov    %esi,%eax
40000e56:	5b                   	pop    %ebx
40000e57:	5e                   	pop    %esi
40000e58:	5d                   	pop    %ebp
40000e59:	c3                   	ret    

40000e5a <strtok>:
40000e5a:	55                   	push   %ebp
40000e5b:	89 e5                	mov    %esp,%ebp
40000e5d:	56                   	push   %esi
40000e5e:	53                   	push   %ebx
40000e5f:	8b 75 08             	mov    0x8(%ebp),%esi
40000e62:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000e65:	85 f6                	test   %esi,%esi
40000e67:	74 2e                	je     40000e97 <strtok+0x3d>
40000e69:	a1 04 32 00 40       	mov    0x40003204,%eax
40000e6e:	85 c0                	test   %eax,%eax
40000e70:	74 0c                	je     40000e7e <strtok+0x24>
40000e72:	83 ec 0c             	sub    $0xc,%esp
40000e75:	50                   	push   %eax
40000e76:	e8 31 00 00 00       	call   40000eac <free>
40000e7b:	83 c4 10             	add    $0x10,%esp
40000e7e:	83 ec 0c             	sub    $0xc,%esp
40000e81:	56                   	push   %esi
40000e82:	e8 9a ff ff ff       	call   40000e21 <strclone>
40000e87:	83 c4 10             	add    $0x10,%esp
40000e8a:	a3 04 32 00 40       	mov    %eax,0x40003204
40000e8f:	89 5d 0c             	mov    %ebx,0xc(%ebp)
40000e92:	89 45 08             	mov    %eax,0x8(%ebp)
40000e95:	eb 0a                	jmp    40000ea1 <strtok+0x47>
40000e97:	89 5d 0c             	mov    %ebx,0xc(%ebp)
40000e9a:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)
40000ea1:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000ea4:	5b                   	pop    %ebx
40000ea5:	5e                   	pop    %esi
40000ea6:	5d                   	pop    %ebp
40000ea7:	e9 d0 fe ff ff       	jmp    40000d7c <strtoknc>

40000eac <free>:
40000eac:	55                   	push   %ebp
40000ead:	89 e5                	mov    %esp,%ebp
40000eaf:	57                   	push   %edi
40000eb0:	56                   	push   %esi
40000eb1:	53                   	push   %ebx
40000eb2:	83 ec 08             	sub    $0x8,%esp
40000eb5:	8b 15 0c 32 00 40    	mov    0x4000320c,%edx
40000ebb:	8b 4d 08             	mov    0x8(%ebp),%ecx
40000ebe:	89 d0                	mov    %edx,%eax
40000ec0:	e9 b8 00 00 00       	jmp    40000f7d <free+0xd1>
40000ec5:	3b 48 04             	cmp    0x4(%eax),%ecx
40000ec8:	0f 85 ac 00 00 00    	jne    40000f7a <free+0xce>
40000ece:	31 c9                	xor    %ecx,%ecx
40000ed0:	eb 23                	jmp    40000ef5 <free+0x49>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000ed2:	39 c2                	cmp    %eax,%edx
40000ed4:	75 1a                	jne    40000ef0 <free+0x44>
        getExecPath(epath);
40000ed6:	85 c9                	test   %ecx,%ecx
40000ed8:	8b 50 08             	mov    0x8(%eax),%edx
40000edb:	75 0e                	jne    40000eeb <free+0x3f>
        printf("$%s> ", epath);
40000edd:	89 15 0c 32 00 40    	mov    %edx,0x4000320c
40000ee3:	8b 0d 10 32 00 40    	mov    0x40003210,%ecx
40000ee9:	eb 10                	jmp    40000efb <free+0x4f>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000eeb:	89 51 08             	mov    %edx,0x8(%ecx)
40000eee:	eb f3                	jmp    40000ee3 <free+0x37>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000ef0:	89 d1                	mov    %edx,%ecx
40000ef2:	8b 52 08             	mov    0x8(%edx),%edx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000ef5:	85 d2                	test   %edx,%edx
40000ef7:	75 d9                	jne    40000ed2 <free+0x26>
40000ef9:	eb e8                	jmp    40000ee3 <free+0x37>
40000efb:	89 ca                	mov    %ecx,%edx
40000efd:	eb 6d                	jmp    40000f6c <free+0xc0>
40000eff:	8b 5a 04             	mov    0x4(%edx),%ebx
40000f02:	8b 32                	mov    (%edx),%esi
40000f04:	8b 78 04             	mov    0x4(%eax),%edi
40000f07:	89 7d ec             	mov    %edi,-0x14(%ebp)
40000f0a:	8d 3c 1e             	lea    (%esi,%ebx,1),%edi
40000f0d:	89 7d f0             	mov    %edi,-0x10(%ebp)
40000f10:	8b 7d ec             	mov    -0x14(%ebp),%edi
40000f13:	39 7d f0             	cmp    %edi,-0x10(%ebp)
40000f16:	75 18                	jne    40000f30 <free+0x84>
40000f18:	89 58 04             	mov    %ebx,0x4(%eax)
40000f1b:	31 f6                	xor    %esi,%esi
40000f1d:	89 cb                	mov    %ecx,%ebx
40000f1f:	eb 09                	jmp    40000f2a <free+0x7e>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000f21:	39 d3                	cmp    %edx,%ebx
40000f23:	74 29                	je     40000f4e <free+0xa2>
        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000f25:	89 de                	mov    %ebx,%esi
40000f27:	8b 5b 08             	mov    0x8(%ebx),%ebx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000f2a:	85 db                	test   %ebx,%ebx
40000f2c:	75 f3                	jne    40000f21 <free+0x75>
40000f2e:	eb cb                	jmp    40000efb <free+0x4f>
40000f30:	8b 38                	mov    (%eax),%edi
40000f32:	89 7d f0             	mov    %edi,-0x10(%ebp)
40000f35:	8b 7d ec             	mov    -0x14(%ebp),%edi
40000f38:	03 7d f0             	add    -0x10(%ebp),%edi
40000f3b:	39 fb                	cmp    %edi,%ebx
40000f3d:	75 2a                	jne    40000f69 <free+0xbd>
40000f3f:	03 75 f0             	add    -0x10(%ebp),%esi
40000f42:	89 cb                	mov    %ecx,%ebx
40000f44:	89 30                	mov    %esi,(%eax)
40000f46:	31 f6                	xor    %esi,%esi
40000f48:	eb 19                	jmp    40000f63 <free+0xb7>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000f4a:	39 d3                	cmp    %edx,%ebx
40000f4c:	75 10                	jne    40000f5e <free+0xb2>
        getExecPath(epath);
40000f4e:	85 f6                	test   %esi,%esi
40000f50:	8b 53 08             	mov    0x8(%ebx),%edx
40000f53:	75 04                	jne    40000f59 <free+0xad>
        printf("$%s> ", epath);
40000f55:	89 d1                	mov    %edx,%ecx
40000f57:	eb a2                	jmp    40000efb <free+0x4f>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000f59:	89 56 08             	mov    %edx,0x8(%esi)
40000f5c:	eb 9d                	jmp    40000efb <free+0x4f>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000f5e:	89 de                	mov    %ebx,%esi
40000f60:	8b 5b 08             	mov    0x8(%ebx),%ebx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000f63:	85 db                	test   %ebx,%ebx
40000f65:	75 e3                	jne    40000f4a <free+0x9e>
40000f67:	eb 92                	jmp    40000efb <free+0x4f>
40000f69:	8b 52 08             	mov    0x8(%edx),%edx
40000f6c:	85 d2                	test   %edx,%edx
40000f6e:	75 8f                	jne    40000eff <free+0x53>
            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

40000f70:	89 48 08             	mov    %ecx,0x8(%eax)
            printf("\n");
40000f73:	a3 10 32 00 40       	mov    %eax,0x40003210
40000f78:	eb 0b                	jmp    40000f85 <free+0xd9>
40000f7a:	8b 40 08             	mov    0x8(%eax),%eax
40000f7d:	85 c0                	test   %eax,%eax
40000f7f:	0f 85 40 ff ff ff    	jne    40000ec5 <free+0x19>
40000f85:	58                   	pop    %eax
40000f86:	5a                   	pop    %edx
40000f87:	5b                   	pop    %ebx
40000f88:	5e                   	pop    %esi
40000f89:	5f                   	pop    %edi
40000f8a:	5d                   	pop    %ebp
40000f8b:	c3                   	ret    

40000f8c <pop_unused_node>:
40000f8c:	55                   	push   %ebp
40000f8d:	89 e5                	mov    %esp,%ebp
40000f8f:	53                   	push   %ebx
40000f90:	83 ec 04             	sub    $0x4,%esp

            printf("\n");
        }
    }

    return 0;
40000f93:	a1 08 32 00 40       	mov    0x40003208,%eax
40000f98:	eb 45                	jmp    40000fdf <pop_unused_node+0x53>
40000f9a:	83 ec 0c             	sub    $0xc,%esp
40000f9d:	6a 01                	push   $0x1
40000f9f:	e8 5b 02 00 00       	call   400011ff <vmm_alloc_cont>
40000fa4:	83 c4 0c             	add    $0xc,%esp
40000fa7:	89 c3                	mov    %eax,%ebx
40000fa9:	68 00 10 00 00       	push   $0x1000
40000fae:	6a 00                	push   $0x0
40000fb0:	50                   	push   %eax
40000fb1:	e8 a6 fc ff ff       	call   40000c5c <memset>
40000fb6:	8b 15 08 32 00 40    	mov    0x40003208,%edx
40000fbc:	8d 43 0c             	lea    0xc(%ebx),%eax
40000fbf:	8d 8b fc 0f 00 00    	lea    0xffc(%ebx),%ecx
40000fc5:	83 c4 10             	add    $0x10,%esp
            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

40000fc8:	89 50 08             	mov    %edx,0x8(%eax)
40000fcb:	89 c2                	mov    %eax,%edx
40000fcd:	83 c0 0c             	add    $0xc,%eax
40000fd0:	39 c8                	cmp    %ecx,%eax
40000fd2:	75 f4                	jne    40000fc8 <pop_unused_node+0x3c>
40000fd4:	8d 83 f0 0f 00 00    	lea    0xff0(%ebx),%eax
40000fda:	a3 08 32 00 40       	mov    %eax,0x40003208

            printf("\n");
        }
    }

    return 0;
40000fdf:	85 c0                	test   %eax,%eax
40000fe1:	74 b7                	je     40000f9a <pop_unused_node+0xe>

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
40000fe3:	8b 50 08             	mov    0x8(%eax),%edx
40000fe6:	85 c0                	test   %eax,%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
40000fe8:	89 15 08 32 00 40    	mov    %edx,0x40003208
40000fee:	74 aa                	je     40000f9a <pop_unused_node+0xe>
40000ff0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
40000ff3:	c9                   	leave  
40000ff4:	c3                   	ret    

40000ff5 <malloc>:
40000ff5:	55                   	push   %ebp
40000ff6:	89 e5                	mov    %esp,%ebp
40000ff8:	57                   	push   %edi
40000ff9:	56                   	push   %esi
40000ffa:	53                   	push   %ebx
40000ffb:	83 ec 1c             	sub    $0x1c,%esp
40000ffe:	a1 10 32 00 40       	mov    0x40003210,%eax
40001003:	8b 75 08             	mov    0x8(%ebp),%esi
40001006:	89 c3                	mov    %eax,%ebx
40001008:	eb 07                	jmp    40001011 <malloc+0x1c>
4000100a:	39 33                	cmp    %esi,(%ebx)
4000100c:	73 0c                	jae    4000101a <malloc+0x25>
4000100e:	8b 5b 08             	mov    0x8(%ebx),%ebx
40001011:	85 db                	test   %ebx,%ebx
40001013:	75 f5                	jne    4000100a <malloc+0x15>
40001015:	e9 93 00 00 00       	jmp    400010ad <malloc+0xb8>
4000101a:	8b 3b                	mov    (%ebx),%edi
4000101c:	31 d2                	xor    %edx,%edx
4000101e:	29 f7                	sub    %esi,%edi
40001020:	89 33                	mov    %esi,(%ebx)
40001022:	eb 4b                	jmp    4000106f <malloc+0x7a>
40001024:	e8 63 ff ff ff       	call   40000f8c <pop_unused_node>
40001029:	8b 13                	mov    (%ebx),%edx
4000102b:	03 53 04             	add    0x4(%ebx),%edx
4000102e:	29 f7                	sub    %esi,%edi
40001030:	89 50 04             	mov    %edx,0x4(%eax)
            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

40001033:	8b 15 10 32 00 40    	mov    0x40003210,%edx
40001039:	89 50 08             	mov    %edx,0x8(%eax)
4000103c:	89 38                	mov    %edi,(%eax)
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

            printf("\n");
4000103e:	a3 10 32 00 40       	mov    %eax,0x40003210
            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

40001043:	a1 0c 32 00 40       	mov    0x4000320c,%eax
40001048:	89 43 08             	mov    %eax,0x8(%ebx)
            printf("\n");
4000104b:	89 1d 0c 32 00 40    	mov    %ebx,0x4000320c
40001051:	eb 4f                	jmp    400010a2 <malloc+0xad>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40001053:	39 d8                	cmp    %ebx,%eax
40001055:	75 13                	jne    4000106a <malloc+0x75>
        getExecPath(epath);
40001057:	85 d2                	test   %edx,%edx
40001059:	8b 43 08             	mov    0x8(%ebx),%eax
4000105c:	75 07                	jne    40001065 <malloc+0x70>
        printf("$%s> ", epath);
4000105e:	a3 10 32 00 40       	mov    %eax,0x40003210
40001063:	eb 0e                	jmp    40001073 <malloc+0x7e>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40001065:	89 42 08             	mov    %eax,0x8(%edx)
40001068:	eb 09                	jmp    40001073 <malloc+0x7e>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

4000106a:	89 c2                	mov    %eax,%edx
4000106c:	8b 40 08             	mov    0x8(%eax),%eax
{
    char epath[512];
    char instr[512];

    cd("ibin");

4000106f:	85 c0                	test   %eax,%eax
40001071:	75 e0                	jne    40001053 <malloc+0x5e>
            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

40001073:	a1 0c 32 00 40       	mov    0x4000320c,%eax
40001078:	85 ff                	test   %edi,%edi
            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

4000107a:	89 43 08             	mov    %eax,0x8(%ebx)
            printf("\n");
4000107d:	89 1d 0c 32 00 40    	mov    %ebx,0x4000320c
40001083:	74 1d                	je     400010a2 <malloc+0xad>
40001085:	e8 02 ff ff ff       	call   40000f8c <pop_unused_node>
4000108a:	8b 13                	mov    (%ebx),%edx
4000108c:	03 53 04             	add    0x4(%ebx),%edx
4000108f:	89 50 04             	mov    %edx,0x4(%eax)
            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

40001092:	8b 15 10 32 00 40    	mov    0x40003210,%edx
40001098:	89 50 08             	mov    %edx,0x8(%eax)
4000109b:	89 38                	mov    %edi,(%eax)
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

            printf("\n");
4000109d:	a3 10 32 00 40       	mov    %eax,0x40003210
400010a2:	8b 43 04             	mov    0x4(%ebx),%eax
400010a5:	8d 65 f4             	lea    -0xc(%ebp),%esp
400010a8:	5b                   	pop    %ebx
400010a9:	5e                   	pop    %esi
400010aa:	5f                   	pop    %edi
400010ab:	5d                   	pop    %ebp
400010ac:	c3                   	ret    
400010ad:	89 f0                	mov    %esi,%eax
400010af:	89 f7                	mov    %esi,%edi
400010b1:	c1 ef 0c             	shr    $0xc,%edi
400010b4:	25 ff 0f 00 00       	and    $0xfff,%eax
400010b9:	83 f8 01             	cmp    $0x1,%eax
400010bc:	83 df ff             	sbb    $0xffffffff,%edi
400010bf:	83 ec 0c             	sub    $0xc,%esp
400010c2:	57                   	push   %edi
400010c3:	e8 37 01 00 00       	call   400011ff <vmm_alloc_cont>
400010c8:	c1 e7 0c             	shl    $0xc,%edi
400010cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400010ce:	e8 b9 fe ff ff       	call   40000f8c <pop_unused_node>
400010d3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
400010d6:	83 c4 10             	add    $0x10,%esp
400010d9:	89 c3                	mov    %eax,%ebx
400010db:	89 50 04             	mov    %edx,0x4(%eax)
400010de:	89 30                	mov    %esi,(%eax)
400010e0:	39 f7                	cmp    %esi,%edi
400010e2:	0f 86 5b ff ff ff    	jbe    40001043 <malloc+0x4e>
400010e8:	e9 37 ff ff ff       	jmp    40001024 <malloc+0x2f>

400010ed <realloc>:
400010ed:	55                   	push   %ebp
400010ee:	89 e5                	mov    %esp,%ebp
400010f0:	56                   	push   %esi
400010f1:	53                   	push   %ebx
400010f2:	8b 1d 0c 32 00 40    	mov    0x4000320c,%ebx
400010f8:	8b 55 08             	mov    0x8(%ebp),%edx
400010fb:	8b 45 0c             	mov    0xc(%ebp),%eax
400010fe:	eb 3e                	jmp    4000113e <realloc+0x51>
40001100:	3b 53 04             	cmp    0x4(%ebx),%edx
40001103:	75 36                	jne    4000113b <realloc+0x4e>
40001105:	85 c0                	test   %eax,%eax
40001107:	75 0b                	jne    40001114 <realloc+0x27>
40001109:	52                   	push   %edx
4000110a:	31 f6                	xor    %esi,%esi
4000110c:	e8 9b fd ff ff       	call   40000eac <free>
40001111:	5b                   	pop    %ebx
40001112:	eb 30                	jmp    40001144 <realloc+0x57>
40001114:	83 ec 0c             	sub    $0xc,%esp
40001117:	50                   	push   %eax
40001118:	e8 d8 fe ff ff       	call   40000ff5 <malloc>
4000111d:	83 c4 0c             	add    $0xc,%esp
40001120:	89 c6                	mov    %eax,%esi
40001122:	ff 33                	pushl  (%ebx)
40001124:	ff 73 04             	pushl  0x4(%ebx)
40001127:	50                   	push   %eax
40001128:	e8 4b fb ff ff       	call   40000c78 <memcpy>
4000112d:	59                   	pop    %ecx
4000112e:	ff 73 04             	pushl  0x4(%ebx)
40001131:	e8 76 fd ff ff       	call   40000eac <free>
40001136:	83 c4 10             	add    $0x10,%esp
40001139:	eb 09                	jmp    40001144 <realloc+0x57>
4000113b:	8b 5b 08             	mov    0x8(%ebx),%ebx
4000113e:	85 db                	test   %ebx,%ebx
40001140:	75 be                	jne    40001100 <realloc+0x13>
40001142:	31 f6                	xor    %esi,%esi
40001144:	8d 65 f8             	lea    -0x8(%ebp),%esp
40001147:	89 f0                	mov    %esi,%eax
40001149:	5b                   	pop    %ebx
4000114a:	5e                   	pop    %esi
4000114b:	5d                   	pop    %ebp
4000114c:	c3                   	ret    

4000114d <calloc>:
4000114d:	55                   	push   %ebp
4000114e:	89 e5                	mov    %esp,%ebp
40001150:	56                   	push   %esi
40001151:	53                   	push   %ebx
40001152:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40001155:	83 ec 0c             	sub    $0xc,%esp
40001158:	0f af 5d 08          	imul   0x8(%ebp),%ebx
4000115c:	53                   	push   %ebx
4000115d:	e8 93 fe ff ff       	call   40000ff5 <malloc>
40001162:	83 c4 10             	add    $0x10,%esp
40001165:	89 c6                	mov    %eax,%esi
40001167:	85 c0                	test   %eax,%eax
40001169:	74 0d                	je     40001178 <calloc+0x2b>
4000116b:	50                   	push   %eax
4000116c:	53                   	push   %ebx
4000116d:	6a 00                	push   $0x0
4000116f:	56                   	push   %esi
40001170:	e8 e7 fa ff ff       	call   40000c5c <memset>
40001175:	83 c4 10             	add    $0x10,%esp
40001178:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000117b:	89 f0                	mov    %esi,%eax
4000117d:	5b                   	pop    %ebx
4000117e:	5e                   	pop    %esi
4000117f:	5d                   	pop    %ebp
40001180:	c3                   	ret    
40001181:	00 00                	add    %al,(%eax)
	...

40001184 <print_memstat>:
            } while(pargs[n++] != 0);

            sexec(instr, pargs);

            printf("\n");
        }
40001184:	55                   	push   %ebp
40001185:	89 e5                	mov    %esp,%ebp
40001187:	83 ec 34             	sub    $0x34,%esp
4000118a:	8d 45 e0             	lea    -0x20(%ebp),%eax
    return 0;
}
4000118d:	c7 45 e0 cd 00 00 00 	movl   $0xcd,-0x20(%ebp)
40001194:	50                   	push   %eax
    return 0;
}
40001195:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
4000119c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400011a3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400011aa:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400011b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400011b8:	e8 7f 00 00 00       	call   4000123c <syscall>
400011bd:	83 c4 10             	add    $0x10,%esp
400011c0:	c9                   	leave  
400011c1:	c3                   	ret    

400011c2 <vmm_free>:
    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
400011c2:	55                   	push   %ebp
400011c3:	89 e5                	mov    %esp,%ebp
400011c5:	83 ec 34             	sub    $0x34,%esp
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);
400011c8:	8b 45 08             	mov    0x8(%ebp),%eax
400011cb:	c7 45 e0 cc 00 00 00 	movl   $0xcc,-0x20(%ebp)
400011d2:	89 45 e4             	mov    %eax,-0x1c(%ebp)

            sexec(instr, pargs);
400011d5:	8d 45 e0             	lea    -0x20(%ebp),%eax
400011d8:	50                   	push   %eax
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
            } while(pargs[n++] != 0);
400011d9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400011e0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400011e7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400011ee:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

            sexec(instr, pargs);
400011f5:	e8 42 00 00 00       	call   4000123c <syscall>
400011fa:	83 c4 10             	add    $0x10,%esp

400011fd:	c9                   	leave  
400011fe:	c3                   	ret    

400011ff <vmm_alloc_cont>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
400011ff:	55                   	push   %ebp
40001200:	89 e5                	mov    %esp,%ebp
40001202:	83 ec 34             	sub    $0x34,%esp
int main(int argc, char* args[])
{
    char epath[512];
    char instr[512];

    cd("ibin");
40001205:	8b 45 08             	mov    0x8(%ebp),%eax
40001208:	c7 45 e0 cb 00 00 00 	movl   $0xcb,-0x20(%ebp)
4000120f:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    while(1) {
40001212:	8d 45 e0             	lea    -0x20(%ebp),%eax
40001215:	50                   	push   %eax
int main(int argc, char* args[])
{
    char epath[512];
    char instr[512];

    cd("ibin");
40001216:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000121d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40001224:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000122b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    while(1) {
40001232:	e8 05 00 00 00       	call   4000123c <syscall>
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);
40001237:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000123a:	c9                   	leave  
4000123b:	c3                   	ret    

4000123c <syscall>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
4000123c:	55                   	push   %ebp
4000123d:	89 e5                	mov    %esp,%ebp
4000123f:	57                   	push   %edi
40001240:	56                   	push   %esi
40001241:	53                   	push   %ebx
40001242:	83 ec 10             	sub    $0x10,%esp
#include "string.h"
40001245:	8b 55 08             	mov    0x8(%ebp),%edx
40001248:	8b 45 08             	mov    0x8(%ebp),%eax
4000124b:	8b 72 0c             	mov    0xc(%edx),%esi
4000124e:	8b 00                	mov    (%eax),%eax
40001250:	89 75 e4             	mov    %esi,-0x1c(%ebp)
40001253:	8b 5a 04             	mov    0x4(%edx),%ebx
40001256:	8b 4a 08             	mov    0x8(%edx),%ecx
40001259:	8b 72 10             	mov    0x10(%edx),%esi
4000125c:	8b 7a 14             	mov    0x14(%edx),%edi
4000125f:	89 45 ec             	mov    %eax,-0x14(%ebp)
40001262:	8b 55 e4             	mov    -0x1c(%ebp),%edx
40001265:	cd 30                	int    $0x30
40001267:	89 55 e8             	mov    %edx,-0x18(%ebp)
4000126a:	8b 55 08             	mov    0x8(%ebp),%edx
4000126d:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001270:	89 02                	mov    %eax,(%edx)
40001272:	8b 45 e8             	mov    -0x18(%ebp),%eax
40001275:	89 5a 04             	mov    %ebx,0x4(%edx)
40001278:	89 4a 08             	mov    %ecx,0x8(%edx)
4000127b:	89 42 0c             	mov    %eax,0xc(%edx)
4000127e:	89 72 10             	mov    %esi,0x10(%edx)
40001281:	89 7a 14             	mov    %edi,0x14(%edx)
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

40001284:	83 c4 10             	add    $0x10,%esp
40001287:	5b                   	pop    %ebx
40001288:	5e                   	pop    %esi
40001289:	5f                   	pop    %edi
4000128a:	5d                   	pop    %ebp
4000128b:	c3                   	ret    
