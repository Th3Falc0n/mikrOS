
../../initrfs/ibin/csh:     file format elf32-i386
../../initrfs/ibin/csh
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x400004a7

Program Header:
    LOAD off    0x00001000 vaddr 0x40000000 paddr 0x40000000 align 2**12
         filesz 0x000021e6 memsz 0x000021e6 flags r-x
    LOAD off    0x00004000 vaddr 0x40003000 paddr 0x40003000 align 2**12
         filesz 0x00000000 memsz 0x00000214 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001280  40000000  40000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000005c  40002000  40002000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rodata.str1.1 0000018a  4000205c  4000205c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000214  40003000  40003000  00004000  2**2
                  ALLOC
  4 .stab         00004914  00000000  00000000  000031e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000007e  00000000  00000000  00007afc  2**0
                  CONTENTS, READONLY
  6 .stabstr      00001864  00000000  00000000  00007b7a  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
40000000 l    d  .text	00000000 .text
40002000 l    d  .rodata	00000000 .rodata
4000205c l    d  .rodata.str1.1	00000000 .rodata.str1.1
40003000 l    d  .bss	00000000 .bss
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 csh.c
00000000 l    df *ABS*	00000000 process.c
40003000 l     O .bss	00000200 irq_handlers
40002044 l     O .rodata	00000018 C.7.1012
40000519 l     F .text	000000c0 _handle_rpc
00000000 l    df *ABS*	00000000 stdio.c
400005dc l     F .text	00000047 resolveHandle
40000a8c l     F .text	0000004a printrwerror
400008d9 l     F .text	0000003f putn
00000000 l    df *ABS*	00000000 string.c
00000000 l    df *ABS*	00000000 stdlib.c
40000f80 l     F .text	00000069 pop_unused_node
00000000 l    df *ABS*	00000000 vmmcall.c
00000000 l    df *ABS*	00000000 syscall.c
4000029d g     F .text	0000003d getExecPath
40000990 g     F .text	00000014 putchar
40000d3d g     F .text	00000033 strcpy
40000320 g     F .text	0000003e yield
400009a4 g     F .text	000000e8 printf
40001230 g     F .text	00000050 syscall
40000ba1 g     F .text	00000042 fgets
40000b95 g     F .text	0000000c getc
40000c6c g     F .text	00000026 memcpy
400008c7 g     F .text	00000012 puts
4000035e g     F .text	0000003d pexists
40000fe9 g     F .text	000000f8 malloc
400003f3 g     F .text	0000003d fetch_rpc_data
40000d70 g     F .text	000000a5 strtoknc
40000233 g     F .text	0000003d changeExecPath
40003210 g     O .bss	00000004 first_free
40000776 g     F .text	00000012 setstdout
40001141 g     F .text	00000034 calloc
400011f3 g     F .text	0000003d vmm_alloc_cont
400001c1 g     F .text	0000003c exec
400004a7 g     F .text	00000072 _start
400010e1 g     F .text	00000060 realloc
4000046a g     F .text	0000003d set_rpc_handler
40000e4e g     F .text	00000052 strtok
40000c92 g     F .text	00000047 memcmp
40000ad6 g     F .text	00000085 fread
40003208 g     O .bss	00000004 first_unused
400006da g     F .text	0000003c fopen
40000c50 g     F .text	0000001c memset
40000000 g     F .text	0000014d main
4000069d g     F .text	0000003d fclose
40000b86 g     F .text	0000000f getchar
40000be3 g     F .text	0000006c getln
40003204 g     O .bss	00000004 fr
40000660 g     F .text	0000003d favailable
4000097d g     F .text	00000013 putc
40000cd9 g     F .text	00000049 strcmp
40000b5b g     F .text	0000002b fgetc
40003200 g     O .bss	00000004 sp
40000270 g     F .text	0000002d cd
4000320c g     O .bss	00000004 first_used
40000918 g     F .text	00000065 fputc
400007c6 g     F .text	00000093 fwrite
40000764 g     F .text	00000012 setstdin
400001fd g     F .text	00000036 texec
40000e15 g     F .text	00000039 strclone
400002da g     F .text	00000046 exit
4000039b g     F .text	00000058 register_irq_handler
40000716 g     F .text	0000003c fopenpmhandle
400011b6 g     F .text	0000003d vmm_free
40000150 g     F .text	00000071 printFilesystemError
40000d22 g     F .text	0000001b strlen
40000788 g     F .text	0000003e getLastVFSErr
40000859 g     F .text	0000006e fputs
40000623 g     F .text	0000003d fmkfifo
40000430 g     F .text	0000003a call_rpc
40000752 g     F .text	00000012 setstderr
40001178 g     F .text	0000003e print_memstat
40000ea0 g     F .text	000000e0 free



Disassembly of section .text:

40000000 <main>:
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
40000004:	83 e4 f0             	and    $0xfffffff0,%esp
40000007:	ff 71 fc             	pushl  -0x4(%ecx)
4000000a:	55                   	push   %ebp
4000000b:	89 e5                	mov    %esp,%ebp
4000000d:	53                   	push   %ebx
4000000e:	51                   	push   %ecx
4000000f:	81 ec 10 05 00 00    	sub    $0x510,%esp
    char epath[512];
    char instr[512];

    cd("ibin");
40000015:	83 ec 0c             	sub    $0xc,%esp
40000018:	68 00 20 00 40       	push   $0x40002000
4000001d:	e8 4e 02 00 00       	call   40000270 <cd>
40000022:	83 c4 10             	add    $0x10,%esp
40000025:	eb 01                	jmp    40000028 <main+0x28>
                yield();
            }

            printf("\n");
        }
    }
40000027:	90                   	nop    
    char instr[512];

    cd("ibin");

    while(1) {
        getExecPath(epath);
40000028:	83 ec 0c             	sub    $0xc,%esp
4000002b:	8d 85 ec fd ff ff    	lea    -0x214(%ebp),%eax
40000031:	50                   	push   %eax
40000032:	e8 66 02 00 00       	call   4000029d <getExecPath>
40000037:	83 c4 10             	add    $0x10,%esp
        printf("$%s> ", epath);
4000003a:	83 ec 08             	sub    $0x8,%esp
4000003d:	8d 85 ec fd ff ff    	lea    -0x214(%ebp),%eax
40000043:	50                   	push   %eax
40000044:	68 05 20 00 40       	push   $0x40002005
40000049:	e8 56 09 00 00       	call   400009a4 <printf>
4000004e:	83 c4 10             	add    $0x10,%esp
        getln(instr);
40000051:	83 ec 0c             	sub    $0xc,%esp
40000054:	8d 85 ec fb ff ff    	lea    -0x414(%ebp),%eax
4000005a:	50                   	push   %eax
4000005b:	e8 83 0b 00 00       	call   40000be3 <getln>
40000060:	83 c4 10             	add    $0x10,%esp

        char* cmd = strtoknc(instr, " ");
40000063:	83 ec 08             	sub    $0x8,%esp
40000066:	68 0b 20 00 40       	push   $0x4000200b
4000006b:	8d 85 ec fb ff ff    	lea    -0x414(%ebp),%eax
40000071:	50                   	push   %eax
40000072:	e8 f9 0c 00 00       	call   40000d70 <strtoknc>
40000077:	83 c4 10             	add    $0x10,%esp
4000007a:	89 45 ec             	mov    %eax,-0x14(%ebp)

        if(cmd != 0) {
4000007d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
40000081:	74 a4                	je     40000027 <main+0x27>
            char* pargs[64];
            int n = 0;
40000083:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)

            do {
                pargs[n] = strtoknc(0, " ");
4000008a:	8b 5d f0             	mov    -0x10(%ebp),%ebx
4000008d:	83 ec 08             	sub    $0x8,%esp
40000090:	68 0b 20 00 40       	push   $0x4000200b
40000095:	6a 00                	push   $0x0
40000097:	e8 d4 0c 00 00       	call   40000d70 <strtoknc>
4000009c:	83 c4 10             	add    $0x10,%esp
4000009f:	89 84 9d ec fa ff ff 	mov    %eax,-0x514(%ebp,%ebx,4)
                n++;
400000a6:	ff 45 f0             	incl   -0x10(%ebp)
            } while(pargs[n-1] != 0);
400000a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
400000ac:	48                   	dec    %eax
400000ad:	8b 84 85 ec fa ff ff 	mov    -0x514(%ebp,%eax,4),%eax
400000b4:	85 c0                	test   %eax,%eax
400000b6:	75 d2                	jne    4000008a <main+0x8a>

            if(!strcmp(cmd, "cd")) {
400000b8:	83 ec 08             	sub    $0x8,%esp
400000bb:	68 0d 20 00 40       	push   $0x4000200d
400000c0:	ff 75 ec             	pushl  -0x14(%ebp)
400000c3:	e8 11 0c 00 00       	call   40000cd9 <strcmp>
400000c8:	83 c4 10             	add    $0x10,%esp
400000cb:	85 c0                	test   %eax,%eax
400000cd:	75 34                	jne    40000103 <main+0x103>
                if(pargs[0] != 0) {
400000cf:	8b 85 ec fa ff ff    	mov    -0x514(%ebp),%eax
400000d5:	85 c0                	test   %eax,%eax
400000d7:	74 14                	je     400000ed <main+0xed>
                    cd((char*)pargs[0]);
400000d9:	8b 85 ec fa ff ff    	mov    -0x514(%ebp),%eax
400000df:	83 ec 0c             	sub    $0xc,%esp
400000e2:	50                   	push   %eax
400000e3:	e8 88 01 00 00       	call   40000270 <cd>
400000e8:	83 c4 10             	add    $0x10,%esp
400000eb:	eb 10                	jmp    400000fd <main+0xfd>
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400000ed:	83 ec 0c             	sub    $0xc,%esp
400000f0:	68 10 20 00 40       	push   $0x40002010
400000f5:	e8 aa 08 00 00       	call   400009a4 <printf>
400000fa:	83 c4 10             	add    $0x10,%esp
                }

                continue;
400000fd:	90                   	nop    
                yield();
            }

            printf("\n");
        }
    }
400000fe:	e9 25 ff ff ff       	jmp    40000028 <main+0x28>
                }

                continue;
            }

            int PID = texec(instr, pargs);
40000103:	83 ec 08             	sub    $0x8,%esp
40000106:	8d 85 ec fa ff ff    	lea    -0x514(%ebp),%eax
4000010c:	50                   	push   %eax
4000010d:	8d 85 ec fb ff ff    	lea    -0x414(%ebp),%eax
40000113:	50                   	push   %eax
40000114:	e8 e4 00 00 00       	call   400001fd <texec>
40000119:	83 c4 10             	add    $0x10,%esp
4000011c:	89 45 f4             	mov    %eax,-0xc(%ebp)

            while(pexists(PID)) {
4000011f:	eb 05                	jmp    40000126 <main+0x126>
                yield();
40000121:	e8 fa 01 00 00       	call   40000320 <yield>
                continue;
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
40000126:	83 ec 0c             	sub    $0xc,%esp
40000129:	ff 75 f4             	pushl  -0xc(%ebp)
4000012c:	e8 2d 02 00 00       	call   4000035e <pexists>
40000131:	83 c4 10             	add    $0x10,%esp
40000134:	85 c0                	test   %eax,%eax
40000136:	75 e9                	jne    40000121 <main+0x121>
                yield();
            }

            printf("\n");
40000138:	83 ec 0c             	sub    $0xc,%esp
4000013b:	68 28 20 00 40       	push   $0x40002028
40000140:	e8 5f 08 00 00       	call   400009a4 <printf>
40000145:	83 c4 10             	add    $0x10,%esp
        }
    }
40000148:	e9 db fe ff ff       	jmp    40000028 <main+0x28>
4000014d:	00 00                	add    %al,(%eax)
	...

40000150 <printFilesystemError>:
40000150:	55                   	push   %ebp
40000151:	89 e5                	mov    %esp,%ebp
40000153:	83 ec 08             	sub    $0x8,%esp
40000156:	8b 55 0c             	mov    0xc(%ebp),%edx
40000159:	8b 45 08             	mov    0x8(%ebp),%eax
4000015c:	83 fa 05             	cmp    $0x5,%edx
4000015f:	77 43                	ja     400001a4 <printFilesystemError+0x54>
40000161:	ff 24 95 2c 20 00 40 	jmp    *0x4000202c(,%edx,4)
40000168:	52                   	push   %edx
40000169:	52                   	push   %edx
4000016a:	50                   	push   %eax
4000016b:	68 5c 20 00 40       	push   $0x4000205c
40000170:	eb 3a                	jmp    400001ac <printFilesystemError+0x5c>
40000172:	51                   	push   %ecx
40000173:	51                   	push   %ecx
40000174:	50                   	push   %eax
40000175:	68 6e 20 00 40       	push   $0x4000206e
4000017a:	eb 30                	jmp    400001ac <printFilesystemError+0x5c>
4000017c:	52                   	push   %edx
4000017d:	52                   	push   %edx
4000017e:	50                   	push   %eax
4000017f:	68 8d 20 00 40       	push   $0x4000208d
40000184:	eb 26                	jmp    400001ac <printFilesystemError+0x5c>
40000186:	51                   	push   %ecx
40000187:	51                   	push   %ecx
40000188:	50                   	push   %eax
40000189:	68 b7 20 00 40       	push   $0x400020b7
4000018e:	eb 1c                	jmp    400001ac <printFilesystemError+0x5c>
40000190:	52                   	push   %edx
40000191:	52                   	push   %edx
40000192:	50                   	push   %eax
40000193:	68 cc 20 00 40       	push   $0x400020cc
40000198:	eb 12                	jmp    400001ac <printFilesystemError+0x5c>
4000019a:	51                   	push   %ecx
4000019b:	51                   	push   %ecx
4000019c:	50                   	push   %eax
4000019d:	68 07 21 00 40       	push   $0x40002107
400001a2:	eb 08                	jmp    400001ac <printFilesystemError+0x5c>
400001a4:	52                   	push   %edx
400001a5:	52                   	push   %edx
400001a6:	50                   	push   %eax
400001a7:	68 1a 21 00 40       	push   $0x4000211a
400001ac:	e8 f3 07 00 00       	call   400009a4 <printf>
400001b1:	c7 45 08 37 21 00 40 	movl   $0x40002137,0x8(%ebp)
400001b8:	83 c4 10             	add    $0x10,%esp
400001bb:	c9                   	leave  
400001bc:	e9 e3 07 00 00       	jmp    400009a4 <printf>

400001c1 <exec>:
400001c1:	55                   	push   %ebp
400001c2:	89 e5                	mov    %esp,%ebp
400001c4:	83 ec 34             	sub    $0x34,%esp
400001c7:	8b 45 08             	mov    0x8(%ebp),%eax
400001ca:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%ebp)
400001d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400001d4:	8b 45 0c             	mov    0xc(%ebp),%eax
400001d7:	89 45 e8             	mov    %eax,-0x18(%ebp)
400001da:	8d 45 e0             	lea    -0x20(%ebp),%eax
400001dd:	50                   	push   %eax
400001de:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400001e5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400001ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400001f3:	e8 38 10 00 00       	call   40001230 <syscall>
400001f8:	8b 45 e0             	mov    -0x20(%ebp),%eax
400001fb:	c9                   	leave  
400001fc:	c3                   	ret    

400001fd <texec>:
400001fd:	55                   	push   %ebp
400001fe:	89 e5                	mov    %esp,%ebp
40000200:	56                   	push   %esi
40000201:	53                   	push   %ebx
40000202:	53                   	push   %ebx
40000203:	53                   	push   %ebx
40000204:	8b 75 08             	mov    0x8(%ebp),%esi
40000207:	ff 75 0c             	pushl  0xc(%ebp)
4000020a:	56                   	push   %esi
4000020b:	e8 b1 ff ff ff       	call   400001c1 <exec>
40000210:	83 c4 10             	add    $0x10,%esp
40000213:	89 c3                	mov    %eax,%ebx
40000215:	85 c0                	test   %eax,%eax
40000217:	75 11                	jne    4000022a <texec+0x2d>
40000219:	e8 6a 05 00 00       	call   40000788 <getLastVFSErr>
4000021e:	51                   	push   %ecx
4000021f:	51                   	push   %ecx
40000220:	50                   	push   %eax
40000221:	56                   	push   %esi
40000222:	e8 29 ff ff ff       	call   40000150 <printFilesystemError>
40000227:	83 c4 10             	add    $0x10,%esp
4000022a:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000022d:	89 d8                	mov    %ebx,%eax
4000022f:	5b                   	pop    %ebx
40000230:	5e                   	pop    %esi
40000231:	5d                   	pop    %ebp
40000232:	c3                   	ret    

40000233 <changeExecPath>:
40000233:	55                   	push   %ebp
40000234:	89 e5                	mov    %esp,%ebp
40000236:	83 ec 34             	sub    $0x34,%esp
40000239:	8b 45 08             	mov    0x8(%ebp),%eax
4000023c:	c7 45 e0 07 00 00 00 	movl   $0x7,-0x20(%ebp)
40000243:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000246:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000249:	50                   	push   %eax
4000024a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000251:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000258:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000025f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000266:	e8 c5 0f 00 00       	call   40001230 <syscall>
4000026b:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000026e:	c9                   	leave  
4000026f:	c3                   	ret    

40000270 <cd>:
40000270:	55                   	push   %ebp
40000271:	89 e5                	mov    %esp,%ebp
40000273:	53                   	push   %ebx
40000274:	83 ec 10             	sub    $0x10,%esp
40000277:	8b 5d 08             	mov    0x8(%ebp),%ebx
4000027a:	53                   	push   %ebx
4000027b:	e8 b3 ff ff ff       	call   40000233 <changeExecPath>
40000280:	83 c4 10             	add    $0x10,%esp
40000283:	85 c0                	test   %eax,%eax
40000285:	75 11                	jne    40000298 <cd+0x28>
40000287:	e8 fc 04 00 00       	call   40000788 <getLastVFSErr>
4000028c:	52                   	push   %edx
4000028d:	52                   	push   %edx
4000028e:	50                   	push   %eax
4000028f:	53                   	push   %ebx
40000290:	e8 bb fe ff ff       	call   40000150 <printFilesystemError>
40000295:	83 c4 10             	add    $0x10,%esp
40000298:	8b 5d fc             	mov    -0x4(%ebp),%ebx
4000029b:	c9                   	leave  
4000029c:	c3                   	ret    

4000029d <getExecPath>:
4000029d:	55                   	push   %ebp
4000029e:	89 e5                	mov    %esp,%ebp
400002a0:	83 ec 34             	sub    $0x34,%esp
400002a3:	8b 45 08             	mov    0x8(%ebp),%eax
400002a6:	c7 45 e0 06 00 00 00 	movl   $0x6,-0x20(%ebp)
400002ad:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400002b0:	8d 45 e0             	lea    -0x20(%ebp),%eax
400002b3:	50                   	push   %eax
400002b4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400002bb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400002c2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400002c9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400002d0:	e8 5b 0f 00 00       	call   40001230 <syscall>
400002d5:	83 c4 10             	add    $0x10,%esp
400002d8:	c9                   	leave  
400002d9:	c3                   	ret    

400002da <exit>:
400002da:	55                   	push   %ebp
400002db:	89 e5                	mov    %esp,%ebp
400002dd:	83 ec 34             	sub    $0x34,%esp
400002e0:	8b 45 08             	mov    0x8(%ebp),%eax
400002e3:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
400002ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400002ed:	8d 45 e0             	lea    -0x20(%ebp),%eax
400002f0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400002f7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400002fe:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000305:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000030c:	50                   	push   %eax
4000030d:	e8 1e 0f 00 00       	call   40001230 <syscall>
40000312:	c7 04 24 22 21 00 40 	movl   $0x40002122,(%esp)
40000319:	e8 86 06 00 00       	call   400009a4 <printf>
4000031e:	eb f2                	jmp    40000312 <exit+0x38>

40000320 <yield>:

    return 0;
}
40000320:	55                   	push   %ebp
40000321:	89 e5                	mov    %esp,%ebp
40000323:	83 ec 34             	sub    $0x34,%esp
40000326:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000329:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%ebp)
40000330:	50                   	push   %eax
40000331:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000338:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000033f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000346:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000034d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000354:	e8 d7 0e 00 00       	call   40001230 <syscall>
40000359:	83 c4 10             	add    $0x10,%esp
4000035c:	c9                   	leave  
4000035d:	c3                   	ret    

4000035e <pexists>:

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;
4000035e:	55                   	push   %ebp
4000035f:	89 e5                	mov    %esp,%ebp
40000361:	83 ec 34             	sub    $0x34,%esp
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000364:	8b 45 08             	mov    0x8(%ebp),%eax
40000367:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
4000036e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
                    cd((char*)pargs[0]);
                }
40000371:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000374:	50                   	push   %eax
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000375:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000037c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000383:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000038a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
                    cd((char*)pargs[0]);
                }
40000391:	e8 9a 0e 00 00       	call   40001230 <syscall>
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
40000396:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000399:	c9                   	leave  
4000039a:	c3                   	ret    

4000039b <register_irq_handler>:
4000039b:	55                   	push   %ebp
4000039c:	89 e5                	mov    %esp,%ebp
4000039e:	53                   	push   %ebx
4000039f:	83 ec 30             	sub    $0x30,%esp
400003a2:	8d 45 e0             	lea    -0x20(%ebp),%eax
400003a5:	8b 5d 08             	mov    0x8(%ebp),%ebx
400003a8:	50                   	push   %eax
    return 0;
}
400003a9:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%ebp)
400003b0:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
400003b3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400003ba:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400003c1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400003c8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400003cf:	e8 5c 0e 00 00       	call   40001230 <syscall>
400003d4:	83 c4 10             	add    $0x10,%esp
400003d7:	31 c0                	xor    %eax,%eax
400003d9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
400003dd:	74 0f                	je     400003ee <register_irq_handler+0x53>
400003df:	8b 45 0c             	mov    0xc(%ebp),%eax
400003e2:	89 04 9d 00 30 00 40 	mov    %eax,0x40003000(,%ebx,4)
400003e9:	b8 01 00 00 00       	mov    $0x1,%eax
400003ee:	8b 5d fc             	mov    -0x4(%ebp),%ebx
400003f1:	c9                   	leave  
400003f2:	c3                   	ret    

400003f3 <fetch_rpc_data>:
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400003f3:	55                   	push   %ebp
400003f4:	89 e5                	mov    %esp,%ebp
400003f6:	83 ec 34             	sub    $0x34,%esp
                continue;
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
400003f9:	8b 45 08             	mov    0x8(%ebp),%eax
400003fc:	c7 45 e0 21 00 00 00 	movl   $0x21,-0x20(%ebp)
40000403:	89 45 e4             	mov    %eax,-0x1c(%ebp)
                yield();
            }
40000406:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000409:	50                   	push   %eax
                continue;
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
4000040a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000411:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000418:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000041f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
                yield();
            }
40000426:	e8 05 0e 00 00       	call   40001230 <syscall>
4000042b:	83 c4 10             	add    $0x10,%esp

4000042e:	c9                   	leave  
4000042f:	c3                   	ret    

40000430 <call_rpc>:
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000430:	55                   	push   %ebp
40000431:	89 e5                	mov    %esp,%ebp
40000433:	83 ec 34             	sub    $0x34,%esp

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

40000436:	8b 45 08             	mov    0x8(%ebp),%eax
40000439:	c7 45 e0 1f 00 00 00 	movl   $0x1f,-0x20(%ebp)
40000440:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000443:	8b 45 0c             	mov    0xc(%ebp),%eax
40000446:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000449:	8b 45 10             	mov    0x10(%ebp),%eax
4000044c:	89 45 ec             	mov    %eax,-0x14(%ebp)
4000044f:	8b 45 14             	mov    0x14(%ebp),%eax
40000452:	89 45 f0             	mov    %eax,-0x10(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000455:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000458:	50                   	push   %eax

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

40000459:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000460:	e8 cb 0d 00 00       	call   40001230 <syscall>
                    cd((char*)pargs[0]);
                }
                else
40000465:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000468:	c9                   	leave  
40000469:	c3                   	ret    

4000046a <set_rpc_handler>:
4000046a:	55                   	push   %ebp
4000046b:	89 e5                	mov    %esp,%ebp
4000046d:	57                   	push   %edi
4000046e:	56                   	push   %esi
4000046f:	be 44 20 00 40       	mov    $0x40002044,%esi
40000474:	83 ec 24             	sub    $0x24,%esp
40000477:	8d 7d e0             	lea    -0x20(%ebp),%edi
4000047a:	68 00 02 00 00       	push   $0x200
4000047f:	6a 00                	push   $0x0
40000481:	68 00 30 00 40       	push   $0x40003000
40000486:	e8 c5 07 00 00       	call   40000c50 <memset>
4000048b:	b9 06 00 00 00       	mov    $0x6,%ecx
40000490:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000493:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
40000495:	89 04 24             	mov    %eax,(%esp)
40000498:	e8 93 0d 00 00       	call   40001230 <syscall>
4000049d:	83 c4 10             	add    $0x10,%esp
400004a0:	8d 65 f8             	lea    -0x8(%ebp),%esp
400004a3:	5e                   	pop    %esi
400004a4:	5f                   	pop    %edi
400004a5:	5d                   	pop    %ebp
400004a6:	c3                   	ret    

400004a7 <_start>:
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

400004a7:	55                   	push   %ebp
400004a8:	89 e5                	mov    %esp,%ebp
400004aa:	56                   	push   %esi
400004ab:	53                   	push   %ebx
                continue;
            }

            int PID = texec(instr, pargs);

400004ac:	31 db                	xor    %ebx,%ebx
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

400004ae:	83 ec 2c             	sub    $0x2c,%esp

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

400004b1:	8d 45 e0             	lea    -0x20(%ebp),%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400004b4:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%ebp)
400004bb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
        getln(instr);

400004c2:	50                   	push   %eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
400004c3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400004ca:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400004d1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400004d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getln(instr);

400004df:	e8 4c 0d 00 00       	call   40001230 <syscall>
        char* cmd = strtoknc(instr, " ");

400004e4:	8b 75 e0             	mov    -0x20(%ebp),%esi

                continue;
            }

            int PID = texec(instr, pargs);

400004e7:	83 c4 10             	add    $0x10,%esp
400004ea:	85 f6                	test   %esi,%esi
400004ec:	75 05                	jne    400004f3 <_start+0x4c>
400004ee:	89 f3                	mov    %esi,%ebx
400004f0:	eb 07                	jmp    400004f9 <_start+0x52>
            while(pexists(PID)) {
                yield();
400004f2:	43                   	inc    %ebx
                continue;
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
400004f3:	83 3c 9e 00          	cmpl   $0x0,(%esi,%ebx,4)
400004f7:	75 f9                	jne    400004f2 <_start+0x4b>
                yield();
            }

            printf("\n");
        }
400004f9:	e8 6c ff ff ff       	call   4000046a <set_rpc_handler>
    }

400004fe:	51                   	push   %ecx
400004ff:	51                   	push   %ecx
40000500:	56                   	push   %esi
40000501:	53                   	push   %ebx
40000502:	e8 f9 fa ff ff       	call   40000000 <main>
    return 0;
}
40000507:	89 04 24             	mov    %eax,(%esp)
4000050a:	e8 cb fd ff ff       	call   400002da <exit>
4000050f:	83 c4 10             	add    $0x10,%esp
40000512:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000515:	5b                   	pop    %ebx
40000516:	5e                   	pop    %esi
40000517:	5d                   	pop    %ebp
40000518:	c3                   	ret    

40000519 <_handle_rpc>:
40000519:	55                   	push   %ebp
4000051a:	89 e5                	mov    %esp,%ebp
4000051c:	56                   	push   %esi
4000051d:	53                   	push   %ebx
4000051e:	83 ec 2c             	sub    $0x2c,%esp
40000521:	ff 75 10             	pushl  0x10(%ebp)
40000524:	8b 75 0c             	mov    0xc(%ebp),%esi
40000527:	e8 bd 0a 00 00       	call   40000fe9 <malloc>
4000052c:	89 04 24             	mov    %eax,(%esp)
4000052f:	89 c3                	mov    %eax,%ebx
40000531:	e8 bd fe ff ff       	call   400003f3 <fetch_rpc_data>
40000536:	83 c4 10             	add    $0x10,%esp
40000539:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
4000053d:	75 4b                	jne    4000058a <_handle_rpc+0x71>
4000053f:	8b 04 b5 00 30 00 40 	mov    0x40003000(,%esi,4),%eax
40000546:	85 c0                	test   %eax,%eax
40000548:	74 40                	je     4000058a <_handle_rpc+0x71>
4000054a:	83 ec 0c             	sub    $0xc,%esp
4000054d:	56                   	push   %esi
4000054e:	ff d0                	call   *%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
40000550:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000553:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
4000055a:	89 04 24             	mov    %eax,(%esp)
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
4000055d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000564:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000056b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000572:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000579:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
40000580:	e8 ab 0c 00 00       	call   40001230 <syscall>
40000585:	83 c4 10             	add    $0x10,%esp
40000588:	eb fe                	jmp    40000588 <_handle_rpc+0x6f>
4000058a:	83 ec 0c             	sub    $0xc,%esp
4000058d:	68 29 21 00 40       	push   $0x40002129
40000592:	e8 0d 04 00 00       	call   400009a4 <printf>
40000597:	89 1c 24             	mov    %ebx,(%esp)
4000059a:	e8 01 09 00 00       	call   40000ea0 <free>

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
4000059f:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400005a2:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400005a9:	89 04 24             	mov    %eax,(%esp)
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
400005ac:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400005b3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400005ba:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400005c1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400005c8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400005cf:	e8 5c 0c 00 00       	call   40001230 <syscall>
400005d4:	83 c4 10             	add    $0x10,%esp
400005d7:	eb fe                	jmp    400005d7 <_handle_rpc+0xbe>
400005d9:	00 00                	add    %al,(%eax)
	...

400005dc <resolveHandle>:
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
400005dc:	55                   	push   %ebp
400005dd:	89 e5                	mov    %esp,%ebp
400005df:	83 ec 28             	sub    $0x28,%esp
                }
400005e2:	3d fe 0f 00 00       	cmp    $0xffe,%eax
400005e7:	77 38                	ja     40000621 <resolveHandle+0x45>
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
400005e9:	83 ec 0c             	sub    $0xc,%esp

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

400005ec:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
400005ef:	8d 45 e0             	lea    -0x20(%ebp),%eax

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

400005f2:	c7 45 e0 14 00 00 00 	movl   $0x14,-0x20(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
400005f9:	50                   	push   %eax

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

400005fa:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000601:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000608:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000060f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000616:	e8 15 0c 00 00       	call   40001230 <syscall>
                    cd((char*)pargs[0]);
                }
4000061b:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000061e:	83 c4 10             	add    $0x10,%esp
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }

40000621:	c9                   	leave  
40000622:	c3                   	ret    

40000623 <fmkfifo>:
40000623:	55                   	push   %ebp
40000624:	89 e5                	mov    %esp,%ebp
40000626:	83 ec 34             	sub    $0x34,%esp
40000629:	8b 45 08             	mov    0x8(%ebp),%eax
4000062c:	c7 45 e0 0e 00 00 00 	movl   $0xe,-0x20(%ebp)
40000633:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000636:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000639:	50                   	push   %eax
4000063a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000641:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000648:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000064f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000656:	e8 d5 0b 00 00       	call   40001230 <syscall>
4000065b:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000065e:	c9                   	leave  
4000065f:	c3                   	ret    

40000660 <favailable>:
40000660:	55                   	push   %ebp
40000661:	89 e5                	mov    %esp,%ebp
40000663:	83 ec 34             	sub    $0x34,%esp
40000666:	8b 45 08             	mov    0x8(%ebp),%eax
40000669:	c7 45 e0 10 00 00 00 	movl   $0x10,-0x20(%ebp)
40000670:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000673:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000676:	50                   	push   %eax
40000677:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000067e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000685:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000068c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000693:	e8 98 0b 00 00       	call   40001230 <syscall>
40000698:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000069b:	c9                   	leave  
4000069c:	c3                   	ret    

4000069d <fclose>:
4000069d:	55                   	push   %ebp
4000069e:	89 e5                	mov    %esp,%ebp
400006a0:	83 ec 34             	sub    $0x34,%esp
400006a3:	8b 45 08             	mov    0x8(%ebp),%eax
400006a6:	c7 45 e0 0b 00 00 00 	movl   $0xb,-0x20(%ebp)
400006ad:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006b0:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006b3:	50                   	push   %eax
400006b4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006bb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006c2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400006c9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400006d0:	e8 5b 0b 00 00       	call   40001230 <syscall>
400006d5:	8b 45 e0             	mov    -0x20(%ebp),%eax
400006d8:	c9                   	leave  
400006d9:	c3                   	ret    

400006da <fopen>:
400006da:	55                   	push   %ebp
400006db:	89 e5                	mov    %esp,%ebp
400006dd:	83 ec 34             	sub    $0x34,%esp
400006e0:	8b 45 08             	mov    0x8(%ebp),%eax
400006e3:	c7 45 e0 0a 00 00 00 	movl   $0xa,-0x20(%ebp)
400006ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006ed:	8b 45 0c             	mov    0xc(%ebp),%eax
400006f0:	89 45 e8             	mov    %eax,-0x18(%ebp)
400006f3:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006f6:	50                   	push   %eax
400006f7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006fe:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000705:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000070c:	e8 1f 0b 00 00       	call   40001230 <syscall>
40000711:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000714:	c9                   	leave  
40000715:	c3                   	ret    

40000716 <fopenpmhandle>:
            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
            }

40000716:	55                   	push   %ebp
40000717:	89 e5                	mov    %esp,%ebp
40000719:	83 ec 34             	sub    $0x34,%esp
    }

    return 0;
}
4000071c:	8b 45 08             	mov    0x8(%ebp),%eax
4000071f:	c7 45 e0 15 00 00 00 	movl   $0x15,-0x20(%ebp)
40000726:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000729:	8b 45 0c             	mov    0xc(%ebp),%eax
4000072c:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000072f:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000732:	50                   	push   %eax
    }

    return 0;
}
40000733:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000073a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000741:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000748:	e8 e3 0a 00 00       	call   40001230 <syscall>
4000074d:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000750:	c9                   	leave  
40000751:	c3                   	ret    

40000752 <setstderr>:
40000752:	55                   	push   %ebp
40000753:	89 e5                	mov    %esp,%ebp
40000755:	83 ec 10             	sub    $0x10,%esp
40000758:	ff 75 08             	pushl  0x8(%ebp)
4000075b:	6a 03                	push   $0x3
4000075d:	e8 b4 ff ff ff       	call   40000716 <fopenpmhandle>
40000762:	c9                   	leave  
40000763:	c3                   	ret    

40000764 <setstdin>:
40000764:	55                   	push   %ebp
40000765:	89 e5                	mov    %esp,%ebp
40000767:	83 ec 10             	sub    $0x10,%esp
4000076a:	ff 75 08             	pushl  0x8(%ebp)
4000076d:	6a 02                	push   $0x2
4000076f:	e8 a2 ff ff ff       	call   40000716 <fopenpmhandle>
40000774:	c9                   	leave  
40000775:	c3                   	ret    

40000776 <setstdout>:
40000776:	55                   	push   %ebp
40000777:	89 e5                	mov    %esp,%ebp
40000779:	83 ec 10             	sub    $0x10,%esp
4000077c:	ff 75 08             	pushl  0x8(%ebp)
4000077f:	6a 01                	push   $0x1
40000781:	e8 90 ff ff ff       	call   40000716 <fopenpmhandle>
40000786:	c9                   	leave  
40000787:	c3                   	ret    

40000788 <getLastVFSErr>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"

40000788:	55                   	push   %ebp
40000789:	89 e5                	mov    %esp,%ebp
4000078b:	83 ec 34             	sub    $0x34,%esp

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
4000078e:	8d 45 e0             	lea    -0x20(%ebp),%eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000791:	c7 45 e0 0f 00 00 00 	movl   $0xf,-0x20(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
40000798:	50                   	push   %eax
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000799:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400007a0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400007a7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400007ae:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400007b5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        getExecPath(epath);
        printf("$%s> ", epath);
400007bc:	e8 6f 0a 00 00       	call   40001230 <syscall>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
400007c1:	8b 45 e0             	mov    -0x20(%ebp),%eax
400007c4:	c9                   	leave  
400007c5:	c3                   	ret    

400007c6 <fwrite>:
400007c6:	55                   	push   %ebp
400007c7:	89 e5                	mov    %esp,%ebp
400007c9:	57                   	push   %edi
400007ca:	56                   	push   %esi
400007cb:	53                   	push   %ebx
400007cc:	83 ec 3c             	sub    $0x3c,%esp
400007cf:	8b 45 08             	mov    0x8(%ebp),%eax
400007d2:	8b 7d 10             	mov    0x10(%ebp),%edi
400007d5:	e8 02 fe ff ff       	call   400005dc <resolveHandle>
400007da:	83 ec 0c             	sub    $0xc,%esp
400007dd:	89 c6                	mov    %eax,%esi
400007df:	89 45 d4             	mov    %eax,-0x2c(%ebp)
400007e2:	8b 45 0c             	mov    0xc(%ebp),%eax
400007e5:	c7 45 d0 0c 00 00 00 	movl   $0xc,-0x30(%ebp)
400007ec:	89 45 d8             	mov    %eax,-0x28(%ebp)
400007ef:	8d 45 d0             	lea    -0x30(%ebp),%eax
400007f2:	89 7d dc             	mov    %edi,-0x24(%ebp)
400007f5:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
400007fc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000803:	50                   	push   %eax
40000804:	89 45 c4             	mov    %eax,-0x3c(%ebp)
40000807:	eb 2d                	jmp    40000836 <fwrite+0x70>
40000809:	e8 12 fb ff ff       	call   40000320 <yield>
4000080e:	8b 45 0c             	mov    0xc(%ebp),%eax
40000811:	83 ec 0c             	sub    $0xc,%esp
40000814:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000817:	8d 45 d0             	lea    -0x30(%ebp),%eax
4000081a:	c7 45 d0 0c 00 00 00 	movl   $0xc,-0x30(%ebp)
40000821:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000824:	89 7d dc             	mov    %edi,-0x24(%ebp)
40000827:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
4000082e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000835:	50                   	push   %eax
40000836:	e8 f5 09 00 00       	call   40001230 <syscall>
4000083b:	8b 5d d0             	mov    -0x30(%ebp),%ebx
4000083e:	83 c4 10             	add    $0x10,%esp
40000841:	83 fb 01             	cmp    $0x1,%ebx
40000844:	74 c3                	je     40000809 <fwrite+0x43>
40000846:	89 f0                	mov    %esi,%eax
40000848:	89 da                	mov    %ebx,%edx
4000084a:	e8 3d 02 00 00       	call   40000a8c <printrwerror>
4000084f:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000852:	89 d8                	mov    %ebx,%eax
40000854:	5b                   	pop    %ebx
40000855:	5e                   	pop    %esi
40000856:	5f                   	pop    %edi
40000857:	5d                   	pop    %ebp
40000858:	c3                   	ret    

40000859 <fputs>:
40000859:	55                   	push   %ebp
4000085a:	89 e5                	mov    %esp,%ebp
4000085c:	56                   	push   %esi
4000085d:	53                   	push   %ebx
4000085e:	83 ec 20             	sub    $0x20,%esp
40000861:	8b 45 0c             	mov    0xc(%ebp),%eax
40000864:	8b 5d 08             	mov    0x8(%ebp),%ebx
40000867:	e8 70 fd ff ff       	call   400005dc <resolveHandle>
4000086c:	89 c6                	mov    %eax,%esi
4000086e:	85 c0                	test   %eax,%eax
40000870:	74 16                	je     40000888 <fputs+0x2f>
40000872:	83 ec 0c             	sub    $0xc,%esp
40000875:	53                   	push   %ebx
40000876:	e8 a7 04 00 00       	call   40000d22 <strlen>
4000087b:	83 c4 0c             	add    $0xc,%esp
4000087e:	50                   	push   %eax
4000087f:	53                   	push   %ebx
40000880:	56                   	push   %esi
40000881:	e8 40 ff ff ff       	call   400007c6 <fwrite>
40000886:	eb 35                	jmp    400008bd <fputs+0x64>
40000888:	83 ec 0c             	sub    $0xc,%esp
4000088b:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000088e:	c7 45 e0 ca 00 00 00 	movl   $0xca,-0x20(%ebp)
40000895:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
40000898:	50                   	push   %eax
40000899:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400008a0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400008a7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400008ae:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400008b5:	e8 76 09 00 00       	call   40001230 <syscall>
400008ba:	8b 45 e0             	mov    -0x20(%ebp),%eax
400008bd:	83 c4 10             	add    $0x10,%esp
400008c0:	8d 65 f8             	lea    -0x8(%ebp),%esp
400008c3:	5b                   	pop    %ebx
400008c4:	5e                   	pop    %esi
400008c5:	5d                   	pop    %ebp
400008c6:	c3                   	ret    

400008c7 <puts>:
400008c7:	55                   	push   %ebp
400008c8:	89 e5                	mov    %esp,%ebp
400008ca:	83 ec 10             	sub    $0x10,%esp
400008cd:	6a 01                	push   $0x1
400008cf:	ff 75 08             	pushl  0x8(%ebp)
400008d2:	e8 82 ff ff ff       	call   40000859 <fputs>
400008d7:	c9                   	leave  
400008d8:	c3                   	ret    

400008d9 <putn>:
400008d9:	55                   	push   %ebp
400008da:	89 e5                	mov    %esp,%ebp
400008dc:	56                   	push   %esi
400008dd:	53                   	push   %ebx
400008de:	31 f6                	xor    %esi,%esi
400008e0:	83 ec 50             	sub    $0x50,%esp
400008e3:	89 d3                	mov    %edx,%ebx
400008e5:	83 fa 24             	cmp    $0x24,%edx
400008e8:	7f 25                	jg     4000090f <putn+0x36>
400008ea:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
400008ee:	8d 4d f7             	lea    -0x9(%ebp),%ecx
400008f1:	31 d2                	xor    %edx,%edx
400008f3:	49                   	dec    %ecx
400008f4:	f7 f3                	div    %ebx
400008f6:	46                   	inc    %esi
400008f7:	85 c0                	test   %eax,%eax
400008f9:	8a 92 39 21 00 40    	mov    0x40002139(%edx),%dl
400008ff:	88 11                	mov    %dl,(%ecx)
40000901:	75 ee                	jne    400008f1 <putn+0x18>
40000903:	83 ec 0c             	sub    $0xc,%esp
40000906:	51                   	push   %ecx
40000907:	e8 bb ff ff ff       	call   400008c7 <puts>
4000090c:	83 c4 10             	add    $0x10,%esp
4000090f:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000912:	89 f0                	mov    %esi,%eax
40000914:	5b                   	pop    %ebx
40000915:	5e                   	pop    %esi
40000916:	5d                   	pop    %ebp
40000917:	c3                   	ret    

40000918 <fputc>:
40000918:	55                   	push   %ebp
40000919:	89 e5                	mov    %esp,%ebp
4000091b:	83 ec 38             	sub    $0x38,%esp
4000091e:	8b 45 08             	mov    0x8(%ebp),%eax
40000921:	88 45 d4             	mov    %al,-0x2c(%ebp)
40000924:	8b 45 0c             	mov    0xc(%ebp),%eax
40000927:	e8 b0 fc ff ff       	call   400005dc <resolveHandle>
4000092c:	85 c0                	test   %eax,%eax
4000092e:	74 0f                	je     4000093f <fputc+0x27>
40000930:	52                   	push   %edx
40000931:	8d 55 d4             	lea    -0x2c(%ebp),%edx
40000934:	6a 01                	push   $0x1
40000936:	52                   	push   %edx
40000937:	50                   	push   %eax
40000938:	e8 89 fe ff ff       	call   400007c6 <fwrite>
4000093d:	eb 39                	jmp    40000978 <fputc+0x60>
4000093f:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
40000943:	83 ec 0c             	sub    $0xc,%esp
40000946:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000949:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000094c:	c7 45 e0 c9 00 00 00 	movl   $0xc9,-0x20(%ebp)
40000953:	50                   	push   %eax
40000954:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000095b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000962:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000969:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000970:	e8 bb 08 00 00       	call   40001230 <syscall>
40000975:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000978:	83 c4 10             	add    $0x10,%esp
4000097b:	c9                   	leave  
4000097c:	c3                   	ret    

4000097d <putc>:
4000097d:	55                   	push   %ebp
4000097e:	89 e5                	mov    %esp,%ebp
40000980:	83 ec 08             	sub    $0x8,%esp
40000983:	0f be 45 08          	movsbl 0x8(%ebp),%eax
40000987:	89 45 08             	mov    %eax,0x8(%ebp)
4000098a:	c9                   	leave  
4000098b:	e9 88 ff ff ff       	jmp    40000918 <fputc>

40000990 <putchar>:
40000990:	55                   	push   %ebp
40000991:	89 e5                	mov    %esp,%ebp
40000993:	83 ec 10             	sub    $0x10,%esp
40000996:	0f be 45 08          	movsbl 0x8(%ebp),%eax
4000099a:	6a 01                	push   $0x1
4000099c:	50                   	push   %eax
4000099d:	e8 76 ff ff ff       	call   40000918 <fputc>
400009a2:	c9                   	leave  
400009a3:	c3                   	ret    

400009a4 <printf>:
400009a4:	55                   	push   %ebp
400009a5:	89 e5                	mov    %esp,%ebp
400009a7:	57                   	push   %edi
400009a8:	56                   	push   %esi
400009a9:	53                   	push   %ebx
400009aa:	83 ec 1c             	sub    $0x1c,%esp
400009ad:	8d 75 0c             	lea    0xc(%ebp),%esi
400009b0:	8b 7d 08             	mov    0x8(%ebp),%edi
400009b3:	31 db                	xor    %ebx,%ebx
400009b5:	e9 be 00 00 00       	jmp    40000a78 <printf+0xd4>
400009ba:	3c 25                	cmp    $0x25,%al
400009bc:	0f 85 a4 00 00 00    	jne    40000a66 <printf+0xc2>
400009c2:	47                   	inc    %edi
400009c3:	8a 07                	mov    (%edi),%al
400009c5:	3c 70                	cmp    $0x70,%al
400009c7:	74 47                	je     40000a10 <printf+0x6c>
400009c9:	7f 1a                	jg     400009e5 <printf+0x41>
400009cb:	3c 63                	cmp    $0x63,%al
400009cd:	74 5a                	je     40000a29 <printf+0x85>
400009cf:	7f 0e                	jg     400009df <printf+0x3b>
400009d1:	84 c0                	test   %al,%al
400009d3:	0f 84 a9 00 00 00    	je     40000a82 <printf+0xde>
400009d9:	3c 25                	cmp    $0x25,%al
400009db:	75 6c                	jne    40000a49 <printf+0xa5>
400009dd:	eb 63                	jmp    40000a42 <printf+0x9e>
400009df:	3c 64                	cmp    $0x64,%al
400009e1:	75 66                	jne    40000a49 <printf+0xa5>
400009e3:	eb 1e                	jmp    40000a03 <printf+0x5f>
400009e5:	3c 75                	cmp    $0x75,%al
400009e7:	74 1a                	je     40000a03 <printf+0x5f>
400009e9:	3c 78                	cmp    $0x78,%al
400009eb:	74 23                	je     40000a10 <printf+0x6c>
400009ed:	3c 73                	cmp    $0x73,%al
400009ef:	75 58                	jne    40000a49 <printf+0xa5>
400009f1:	83 ec 0c             	sub    $0xc,%esp
400009f4:	8d 46 04             	lea    0x4(%esi),%eax
400009f7:	ff 36                	pushl  (%esi)
400009f9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400009fc:	e8 c6 fe ff ff       	call   400008c7 <puts>
40000a01:	eb 38                	jmp    40000a3b <printf+0x97>
40000a03:	8d 46 04             	lea    0x4(%esi),%eax
40000a06:	ba 0a 00 00 00       	mov    $0xa,%edx
40000a0b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a0e:	eb 0b                	jmp    40000a1b <printf+0x77>
40000a10:	8d 46 04             	lea    0x4(%esi),%eax
40000a13:	ba 10 00 00 00       	mov    $0x10,%edx
40000a18:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a1b:	8b 06                	mov    (%esi),%eax
40000a1d:	e8 b7 fe ff ff       	call   400008d9 <putn>
40000a22:	8b 75 e4             	mov    -0x1c(%ebp),%esi
40000a25:	01 c3                	add    %eax,%ebx
40000a27:	eb 4e                	jmp    40000a77 <printf+0xd3>
40000a29:	8d 46 04             	lea    0x4(%esi),%eax
40000a2c:	83 ec 0c             	sub    $0xc,%esp
40000a2f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a32:	0f be 06             	movsbl (%esi),%eax
40000a35:	50                   	push   %eax
40000a36:	e8 55 ff ff ff       	call   40000990 <putchar>
40000a3b:	01 c3                	add    %eax,%ebx
40000a3d:	8b 75 e4             	mov    -0x1c(%ebp),%esi
40000a40:	eb 32                	jmp    40000a74 <printf+0xd0>
40000a42:	83 ec 0c             	sub    $0xc,%esp
40000a45:	6a 25                	push   $0x25
40000a47:	eb 24                	jmp    40000a6d <printf+0xc9>
40000a49:	83 ec 0c             	sub    $0xc,%esp
40000a4c:	6a 25                	push   $0x25
40000a4e:	e8 3d ff ff ff       	call   40000990 <putchar>
40000a53:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a56:	0f be 07             	movsbl (%edi),%eax
40000a59:	89 04 24             	mov    %eax,(%esp)
40000a5c:	e8 2f ff ff ff       	call   40000990 <putchar>
40000a61:	03 45 e4             	add    -0x1c(%ebp),%eax
40000a64:	eb 0c                	jmp    40000a72 <printf+0xce>
40000a66:	83 ec 0c             	sub    $0xc,%esp
40000a69:	0f be c0             	movsbl %al,%eax
40000a6c:	50                   	push   %eax
40000a6d:	e8 1e ff ff ff       	call   40000990 <putchar>
40000a72:	01 c3                	add    %eax,%ebx
40000a74:	83 c4 10             	add    $0x10,%esp
40000a77:	47                   	inc    %edi
40000a78:	8a 07                	mov    (%edi),%al
40000a7a:	84 c0                	test   %al,%al
40000a7c:	0f 85 38 ff ff ff    	jne    400009ba <printf+0x16>
40000a82:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000a85:	89 d8                	mov    %ebx,%eax
40000a87:	5b                   	pop    %ebx
40000a88:	5e                   	pop    %esi
40000a89:	5f                   	pop    %edi
40000a8a:	5d                   	pop    %ebp
40000a8b:	c3                   	ret    

40000a8c <printrwerror>:
40000a8c:	55                   	push   %ebp
40000a8d:	89 e5                	mov    %esp,%ebp
40000a8f:	83 ec 08             	sub    $0x8,%esp
40000a92:	83 fa 02             	cmp    $0x2,%edx
40000a95:	75 0a                	jne    40000aa1 <printrwerror+0x15>
40000a97:	52                   	push   %edx
40000a98:	52                   	push   %edx
40000a99:	50                   	push   %eax
40000a9a:	68 5e 21 00 40       	push   $0x4000215e
40000a9f:	eb 2b                	jmp    40000acc <printrwerror+0x40>
40000aa1:	83 fa 03             	cmp    $0x3,%edx
40000aa4:	75 0a                	jne    40000ab0 <printrwerror+0x24>
40000aa6:	51                   	push   %ecx
40000aa7:	51                   	push   %ecx
40000aa8:	50                   	push   %eax
40000aa9:	68 76 21 00 40       	push   $0x40002176
40000aae:	eb 1c                	jmp    40000acc <printrwerror+0x40>
40000ab0:	83 fa 04             	cmp    $0x4,%edx
40000ab3:	75 0a                	jne    40000abf <printrwerror+0x33>
40000ab5:	52                   	push   %edx
40000ab6:	52                   	push   %edx
40000ab7:	50                   	push   %eax
40000ab8:	68 91 21 00 40       	push   $0x40002191
40000abd:	eb 0d                	jmp    40000acc <printrwerror+0x40>
40000abf:	83 fa 05             	cmp    $0x5,%edx
40000ac2:	75 10                	jne    40000ad4 <printrwerror+0x48>
40000ac4:	51                   	push   %ecx
40000ac5:	51                   	push   %ecx
40000ac6:	50                   	push   %eax
40000ac7:	68 bb 21 00 40       	push   $0x400021bb
40000acc:	e8 d3 fe ff ff       	call   400009a4 <printf>
40000ad1:	83 c4 10             	add    $0x10,%esp
40000ad4:	c9                   	leave  
40000ad5:	c3                   	ret    

40000ad6 <fread>:
40000ad6:	55                   	push   %ebp
40000ad7:	89 e5                	mov    %esp,%ebp
40000ad9:	57                   	push   %edi
40000ada:	56                   	push   %esi
40000adb:	53                   	push   %ebx
40000adc:	83 ec 38             	sub    $0x38,%esp
40000adf:	8d 7d d0             	lea    -0x30(%ebp),%edi
40000ae2:	8b 45 0c             	mov    0xc(%ebp),%eax
40000ae5:	8b 75 08             	mov    0x8(%ebp),%esi
40000ae8:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000aeb:	8b 45 10             	mov    0x10(%ebp),%eax
40000aee:	c7 45 d0 0d 00 00 00 	movl   $0xd,-0x30(%ebp)
40000af5:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000af8:	89 45 dc             	mov    %eax,-0x24(%ebp)
40000afb:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000b02:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000b09:	eb 2c                	jmp    40000b37 <fread+0x61>
40000b0b:	e8 10 f8 ff ff       	call   40000320 <yield>
40000b10:	8b 45 0c             	mov    0xc(%ebp),%eax
40000b13:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000b16:	8b 45 10             	mov    0x10(%ebp),%eax
40000b19:	c7 45 d0 0d 00 00 00 	movl   $0xd,-0x30(%ebp)
40000b20:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000b23:	89 45 dc             	mov    %eax,-0x24(%ebp)
40000b26:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000b2d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000b34:	83 ec 0c             	sub    $0xc,%esp
40000b37:	57                   	push   %edi
40000b38:	e8 f3 06 00 00       	call   40001230 <syscall>
40000b3d:	8b 5d d0             	mov    -0x30(%ebp),%ebx
40000b40:	83 c4 10             	add    $0x10,%esp
40000b43:	83 fb 01             	cmp    $0x1,%ebx
40000b46:	74 c3                	je     40000b0b <fread+0x35>
40000b48:	89 f0                	mov    %esi,%eax
40000b4a:	89 da                	mov    %ebx,%edx
40000b4c:	e8 3b ff ff ff       	call   40000a8c <printrwerror>
40000b51:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000b54:	89 d8                	mov    %ebx,%eax
40000b56:	5b                   	pop    %ebx
40000b57:	5e                   	pop    %esi
40000b58:	5f                   	pop    %edi
40000b59:	5d                   	pop    %ebp
40000b5a:	c3                   	ret    

40000b5b <fgetc>:
40000b5b:	55                   	push   %ebp
40000b5c:	89 e5                	mov    %esp,%ebp
40000b5e:	83 ec 18             	sub    $0x18,%esp
40000b61:	8b 45 08             	mov    0x8(%ebp),%eax
40000b64:	e8 73 fa ff ff       	call   400005dc <resolveHandle>
40000b69:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
40000b6d:	85 c0                	test   %eax,%eax
40000b6f:	74 10                	je     40000b81 <fgetc+0x26>
40000b71:	8d 55 f7             	lea    -0x9(%ebp),%edx
40000b74:	51                   	push   %ecx
40000b75:	6a 01                	push   $0x1
40000b77:	52                   	push   %edx
40000b78:	50                   	push   %eax
40000b79:	e8 58 ff ff ff       	call   40000ad6 <fread>
40000b7e:	83 c4 10             	add    $0x10,%esp
40000b81:	8a 45 f7             	mov    -0x9(%ebp),%al
40000b84:	c9                   	leave  
40000b85:	c3                   	ret    

40000b86 <getchar>:
40000b86:	55                   	push   %ebp
40000b87:	89 e5                	mov    %esp,%ebp
40000b89:	83 ec 14             	sub    $0x14,%esp
40000b8c:	6a 02                	push   $0x2
40000b8e:	e8 c8 ff ff ff       	call   40000b5b <fgetc>
40000b93:	c9                   	leave  
40000b94:	c3                   	ret    

40000b95 <getc>:
40000b95:	55                   	push   %ebp
40000b96:	89 e5                	mov    %esp,%ebp
40000b98:	83 ec 08             	sub    $0x8,%esp
40000b9b:	c9                   	leave  
40000b9c:	e9 ba ff ff ff       	jmp    40000b5b <fgetc>

40000ba1 <fgets>:
40000ba1:	55                   	push   %ebp
40000ba2:	89 e5                	mov    %esp,%ebp
40000ba4:	57                   	push   %edi
40000ba5:	56                   	push   %esi
40000ba6:	53                   	push   %ebx
40000ba7:	83 ec 1c             	sub    $0x1c,%esp
40000baa:	31 db                	xor    %ebx,%ebx
40000bac:	8b 7d 0c             	mov    0xc(%ebp),%edi
40000baf:	8b 75 08             	mov    0x8(%ebp),%esi
40000bb2:	8d 47 ff             	lea    -0x1(%edi),%eax
40000bb5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000bb8:	eb 16                	jmp    40000bd0 <fgets+0x2f>
40000bba:	83 ec 0c             	sub    $0xc,%esp
40000bbd:	ff 75 10             	pushl  0x10(%ebp)
40000bc0:	e8 96 ff ff ff       	call   40000b5b <fgetc>
40000bc5:	83 c4 10             	add    $0x10,%esp
40000bc8:	88 04 1e             	mov    %al,(%esi,%ebx,1)
40000bcb:	84 c0                	test   %al,%al
40000bcd:	74 0a                	je     40000bd9 <fgets+0x38>
40000bcf:	43                   	inc    %ebx
40000bd0:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
40000bd3:	7c e5                	jl     40000bba <fgets+0x19>
40000bd5:	c6 04 3e 00          	movb   $0x0,(%esi,%edi,1)
40000bd9:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000bdc:	89 f0                	mov    %esi,%eax
40000bde:	5b                   	pop    %ebx
40000bdf:	5e                   	pop    %esi
40000be0:	5f                   	pop    %edi
40000be1:	5d                   	pop    %ebp
40000be2:	c3                   	ret    

40000be3 <getln>:
40000be3:	55                   	push   %ebp
40000be4:	89 e5                	mov    %esp,%ebp
40000be6:	56                   	push   %esi
40000be7:	53                   	push   %ebx
40000be8:	31 db                	xor    %ebx,%ebx
40000bea:	8b 75 08             	mov    0x8(%ebp),%esi
40000bed:	eb 42                	jmp    40000c31 <getln+0x4e>
40000bef:	3c 0a                	cmp    $0xa,%al
40000bf1:	75 0f                	jne    40000c02 <getln+0x1f>
40000bf3:	83 ec 0c             	sub    $0xc,%esp
40000bf6:	6a 0a                	push   $0xa
40000bf8:	e8 93 fd ff ff       	call   40000990 <putchar>
40000bfd:	83 c4 10             	add    $0x10,%esp
40000c00:	eb 40                	jmp    40000c42 <getln+0x5f>
40000c02:	3c 08                	cmp    $0x8,%al
40000c04:	75 18                	jne    40000c1e <getln+0x3b>
40000c06:	85 db                	test   %ebx,%ebx
40000c08:	74 0e                	je     40000c18 <getln+0x35>
40000c0a:	83 ec 0c             	sub    $0xc,%esp
40000c0d:	4b                   	dec    %ebx
40000c0e:	6a 08                	push   $0x8
40000c10:	e8 7b fd ff ff       	call   40000990 <putchar>
40000c15:	83 c4 10             	add    $0x10,%esp
40000c18:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
40000c1c:	eb 13                	jmp    40000c31 <getln+0x4e>
40000c1e:	83 ec 0c             	sub    $0xc,%esp
40000c21:	88 04 1e             	mov    %al,(%esi,%ebx,1)
40000c24:	0f be c0             	movsbl %al,%eax
40000c27:	50                   	push   %eax
40000c28:	43                   	inc    %ebx
40000c29:	e8 62 fd ff ff       	call   40000990 <putchar>
40000c2e:	83 c4 10             	add    $0x10,%esp
40000c31:	83 ec 0c             	sub    $0xc,%esp
40000c34:	6a 02                	push   $0x2
40000c36:	e8 20 ff ff ff       	call   40000b5b <fgetc>
40000c3b:	83 c4 10             	add    $0x10,%esp
40000c3e:	84 c0                	test   %al,%al
40000c40:	75 ad                	jne    40000bef <getln+0xc>
40000c42:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
40000c46:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000c49:	89 f0                	mov    %esi,%eax
40000c4b:	5b                   	pop    %ebx
40000c4c:	5e                   	pop    %esi
40000c4d:	5d                   	pop    %ebp
40000c4e:	c3                   	ret    
	...

40000c50 <memset>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "string.h"
40000c50:	55                   	push   %ebp
40000c51:	89 e5                	mov    %esp,%ebp
40000c53:	53                   	push   %ebx
40000c54:	8b 45 08             	mov    0x8(%ebp),%eax
40000c57:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000c5a:	8b 4d 10             	mov    0x10(%ebp),%ecx

40000c5d:	89 c2                	mov    %eax,%edx
int main(int argc, char* args[])
{
40000c5f:	eb 04                	jmp    40000c65 <memset+0x15>
    char epath[512];
40000c61:	88 1a                	mov    %bl,(%edx)
40000c63:	49                   	dec    %ecx
40000c64:	42                   	inc    %edx
#include "stdio.h"
#include "process.h"
#include "string.h"

int main(int argc, char* args[])
{
40000c65:	85 c9                	test   %ecx,%ecx
40000c67:	75 f8                	jne    40000c61 <memset+0x11>
    char epath[512];
    char instr[512];

    cd("ibin");

40000c69:	5b                   	pop    %ebx
40000c6a:	5d                   	pop    %ebp
40000c6b:	c3                   	ret    

40000c6c <memcpy>:
    while(1) {
        getExecPath(epath);
40000c6c:	55                   	push   %ebp
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000c6d:	31 c9                	xor    %ecx,%ecx
    char instr[512];

    cd("ibin");

    while(1) {
        getExecPath(epath);
40000c6f:	89 e5                	mov    %esp,%ebp
40000c71:	56                   	push   %esi
40000c72:	53                   	push   %ebx
40000c73:	8b 75 10             	mov    0x10(%ebp),%esi
40000c76:	8b 45 08             	mov    0x8(%ebp),%eax
40000c79:	8b 5d 0c             	mov    0xc(%ebp),%ebx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000c7c:	85 f6                	test   %esi,%esi
40000c7e:	75 04                	jne    40000c84 <memcpy+0x18>
40000c80:	31 c0                	xor    %eax,%eax
40000c82:	eb 0a                	jmp    40000c8e <memcpy+0x22>

        if(cmd != 0) {
            char* pargs[64];
40000c84:	8a 14 0b             	mov    (%ebx,%ecx,1),%dl
40000c87:	88 14 08             	mov    %dl,(%eax,%ecx,1)
40000c8a:	41                   	inc    %ecx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000c8b:	4e                   	dec    %esi
40000c8c:	75 f6                	jne    40000c84 <memcpy+0x18>
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
40000c8e:	5b                   	pop    %ebx
40000c8f:	5e                   	pop    %esi
40000c90:	5d                   	pop    %ebp
40000c91:	c3                   	ret    

40000c92 <memcmp>:
                n++;
            } while(pargs[n-1] != 0);
40000c92:	55                   	push   %ebp

40000c93:	83 c8 ff             	or     $0xffffffff,%eax
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);
40000c96:	89 e5                	mov    %esp,%ebp
40000c98:	57                   	push   %edi
40000c99:	56                   	push   %esi
40000c9a:	53                   	push   %ebx
40000c9b:	8b 75 08             	mov    0x8(%ebp),%esi
40000c9e:	8b 7d 0c             	mov    0xc(%ebp),%edi
40000ca1:	8b 5d 10             	mov    0x10(%ebp),%ebx

40000ca4:	85 f6                	test   %esi,%esi
40000ca6:	74 2c                	je     40000cd4 <memcmp+0x42>
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40000ca8:	b8 01 00 00 00       	mov    $0x1,%eax
40000cad:	85 ff                	test   %edi,%edi
40000caf:	74 23                	je     40000cd4 <memcmp+0x42>
                    cd((char*)pargs[0]);
                }
40000cb1:	31 d2                	xor    %edx,%edx
40000cb3:	85 db                	test   %ebx,%ebx
40000cb5:	75 17                	jne    40000cce <memcmp+0x3c>
40000cb7:	eb 19                	jmp    40000cd2 <memcmp+0x40>
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }
40000cb9:	8a 04 16             	mov    (%esi,%edx,1),%al
40000cbc:	8a 0c 17             	mov    (%edi,%edx,1),%cl
40000cbf:	38 c8                	cmp    %cl,%al
40000cc1:	74 0a                	je     40000ccd <memcmp+0x3b>

40000cc3:	0f b6 c0             	movzbl %al,%eax
40000cc6:	0f b6 c9             	movzbl %cl,%ecx
40000cc9:	29 c8                	sub    %ecx,%eax
40000ccb:	eb 07                	jmp    40000cd4 <memcmp+0x42>
                else
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
40000ccd:	42                   	inc    %edx
40000cce:	39 da                	cmp    %ebx,%edx
40000cd0:	72 e7                	jb     40000cb9 <memcmp+0x27>
40000cd2:	31 c0                	xor    %eax,%eax
            }

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
40000cd4:	5b                   	pop    %ebx
40000cd5:	5e                   	pop    %esi
40000cd6:	5f                   	pop    %edi
40000cd7:	5d                   	pop    %ebp
40000cd8:	c3                   	ret    

40000cd9 <strcmp>:
            }

40000cd9:	55                   	push   %ebp

    return 0;
}
40000cda:	31 c0                	xor    %eax,%eax
            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
            }

40000cdc:	89 e5                	mov    %esp,%ebp
40000cde:	56                   	push   %esi
40000cdf:	53                   	push   %ebx

    return 0;
}
40000ce0:	31 db                	xor    %ebx,%ebx
            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
            }

40000ce2:	8b 55 08             	mov    0x8(%ebp),%edx
40000ce5:	8b 4d 0c             	mov    0xc(%ebp),%ecx

    return 0;
}
40000ce8:	85 d2                	test   %edx,%edx
40000cea:	75 03                	jne    40000cef <strcmp+0x16>
40000cec:	eb 09                	jmp    40000cf7 <strcmp+0x1e>
40000cee:	40                   	inc    %eax
40000cef:	89 c3                	mov    %eax,%ebx
40000cf1:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
40000cf5:	75 f7                	jne    40000cee <strcmp+0x15>

    return 0;
}
40000cf7:	31 c0                	xor    %eax,%eax
40000cf9:	31 f6                	xor    %esi,%esi
40000cfb:	85 c9                	test   %ecx,%ecx
40000cfd:	75 03                	jne    40000d02 <strcmp+0x29>
40000cff:	eb 09                	jmp    40000d0a <strcmp+0x31>
40000d01:	40                   	inc    %eax
40000d02:	89 c6                	mov    %eax,%esi
40000d04:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)
40000d08:	75 f7                	jne    40000d01 <strcmp+0x28>

            printf("\n");
        }
    }

    return 0;
40000d0a:	89 f0                	mov    %esi,%eax
40000d0c:	39 de                	cmp    %ebx,%esi
40000d0e:	7e 02                	jle    40000d12 <strcmp+0x39>
40000d10:	89 d8                	mov    %ebx,%eax
40000d12:	40                   	inc    %eax
40000d13:	50                   	push   %eax
40000d14:	51                   	push   %ecx
40000d15:	52                   	push   %edx
40000d16:	e8 77 ff ff ff       	call   40000c92 <memcmp>
}
40000d1b:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000d1e:	5b                   	pop    %ebx
40000d1f:	5e                   	pop    %esi
40000d20:	5d                   	pop    %ebp
40000d21:	c3                   	ret    

40000d22 <strlen>:
40000d22:	55                   	push   %ebp
40000d23:	31 d2                	xor    %edx,%edx
    }

    return 0;
}
40000d25:	89 e5                	mov    %esp,%ebp
40000d27:	31 c0                	xor    %eax,%eax
    }

    return 0;
}
40000d29:	8b 4d 08             	mov    0x8(%ebp),%ecx
40000d2c:	85 c9                	test   %ecx,%ecx
40000d2e:	75 03                	jne    40000d33 <strlen+0x11>
40000d30:	eb 09                	jmp    40000d3b <strlen+0x19>
40000d32:	42                   	inc    %edx
40000d33:	89 d0                	mov    %edx,%eax
40000d35:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)
40000d39:	75 f7                	jne    40000d32 <strlen+0x10>
40000d3b:	5d                   	pop    %ebp
40000d3c:	c3                   	ret    

40000d3d <strcpy>:
40000d3d:	55                   	push   %ebp

    return 0;
}
40000d3e:	31 d2                	xor    %edx,%edx
40000d40:	89 e5                	mov    %esp,%ebp
40000d42:	56                   	push   %esi
40000d43:	53                   	push   %ebx

    return 0;
}
40000d44:	31 c9                	xor    %ecx,%ecx
40000d46:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000d49:	8b 45 08             	mov    0x8(%ebp),%eax

    return 0;
}
40000d4c:	85 db                	test   %ebx,%ebx
40000d4e:	75 03                	jne    40000d53 <strcpy+0x16>
40000d50:	eb 09                	jmp    40000d5b <strcpy+0x1e>
40000d52:	42                   	inc    %edx
40000d53:	89 d1                	mov    %edx,%ecx
40000d55:	80 3c 13 00          	cmpb   $0x0,(%ebx,%edx,1)
40000d59:	75 f7                	jne    40000d52 <strcpy+0x15>
    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000d5b:	89 ce                	mov    %ecx,%esi
40000d5d:	46                   	inc    %esi
40000d5e:	74 0c                	je     40000d6c <strcpy+0x2f>
40000d60:	31 d2                	xor    %edx,%edx

        if(cmd != 0) {
            char* pargs[64];
40000d62:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
40000d65:	88 0c 10             	mov    %cl,(%eax,%edx,1)
40000d68:	42                   	inc    %edx
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
40000d69:	4e                   	dec    %esi
40000d6a:	75 f6                	jne    40000d62 <strcpy+0x25>
40000d6c:	5b                   	pop    %ebx
40000d6d:	5e                   	pop    %esi
40000d6e:	5d                   	pop    %ebp
40000d6f:	c3                   	ret    

40000d70 <strtoknc>:
40000d70:	55                   	push   %ebp

    return 0;
}
40000d71:	31 c0                	xor    %eax,%eax
40000d73:	89 e5                	mov    %esp,%ebp
40000d75:	57                   	push   %edi
40000d76:	56                   	push   %esi
40000d77:	53                   	push   %ebx
40000d78:	83 ec 04             	sub    $0x4,%esp
40000d7b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000d7e:	8b 4d 08             	mov    0x8(%ebp),%ecx

    return 0;
}
40000d81:	85 db                	test   %ebx,%ebx
40000d83:	75 06                	jne    40000d8b <strtoknc+0x1b>
40000d85:	e9 83 00 00 00       	jmp    40000e0d <strtoknc+0x9d>
40000d8a:	40                   	inc    %eax
40000d8b:	89 c7                	mov    %eax,%edi
40000d8d:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
40000d91:	75 f7                	jne    40000d8a <strtoknc+0x1a>
40000d93:	85 c0                	test   %eax,%eax
40000d95:	74 76                	je     40000e0d <strtoknc+0x9d>
40000d97:	85 c9                	test   %ecx,%ecx
40000d99:	75 0b                	jne    40000da6 <strtoknc+0x36>
40000d9b:	83 3d 00 32 00 40 00 	cmpl   $0x0,0x40003200
40000da2:	75 08                	jne    40000dac <strtoknc+0x3c>
40000da4:	eb 67                	jmp    40000e0d <strtoknc+0x9d>
40000da6:	89 0d 00 32 00 40    	mov    %ecx,0x40003200
40000dac:	a1 00 32 00 40       	mov    0x40003200,%eax
40000db1:	31 c9                	xor    %ecx,%ecx
40000db3:	eb 0b                	jmp    40000dc0 <strtoknc+0x50>
40000db5:	8a 10                	mov    (%eax),%dl
40000db7:	3a 14 0b             	cmp    (%ebx,%ecx,1),%dl
40000dba:	75 03                	jne    40000dbf <strtoknc+0x4f>
40000dbc:	40                   	inc    %eax
40000dbd:	eb 05                	jmp    40000dc4 <strtoknc+0x54>
40000dbf:	41                   	inc    %ecx
40000dc0:	39 f9                	cmp    %edi,%ecx
40000dc2:	7c f1                	jl     40000db5 <strtoknc+0x45>
40000dc4:	39 f9                	cmp    %edi,%ecx
40000dc6:	75 e9                	jne    40000db1 <strtoknc+0x41>
40000dc8:	a3 00 32 00 40       	mov    %eax,0x40003200
40000dcd:	80 38 00             	cmpb   $0x0,(%eax)
40000dd0:	75 28                	jne    40000dfa <strtoknc+0x8a>
40000dd2:	c7 05 00 32 00 40 00 	movl   $0x0,0x40003200
40000dd9:	00 00 00 
40000ddc:	eb 2f                	jmp    40000e0d <strtoknc+0x9d>
40000dde:	8a 55 f3             	mov    -0xd(%ebp),%dl
40000de1:	3a 14 0b             	cmp    (%ebx,%ecx,1),%dl
40000de4:	75 05                	jne    40000deb <strtoknc+0x7b>
40000de6:	c6 06 00             	movb   $0x0,(%esi)
40000de9:	eb 05                	jmp    40000df0 <strtoknc+0x80>
40000deb:	41                   	inc    %ecx
40000dec:	39 f9                	cmp    %edi,%ecx
40000dee:	7c ee                	jl     40000dde <strtoknc+0x6e>
40000df0:	ff 05 00 32 00 40    	incl   0x40003200
40000df6:	39 f9                	cmp    %edi,%ecx
40000df8:	7c 15                	jl     40000e0f <strtoknc+0x9f>
40000dfa:	8b 35 00 32 00 40    	mov    0x40003200,%esi
40000e00:	8a 16                	mov    (%esi),%dl
40000e02:	88 55 f3             	mov    %dl,-0xd(%ebp)
40000e05:	84 d2                	test   %dl,%dl
40000e07:	74 06                	je     40000e0f <strtoknc+0x9f>
40000e09:	31 c9                	xor    %ecx,%ecx
40000e0b:	eb df                	jmp    40000dec <strtoknc+0x7c>
40000e0d:	31 c0                	xor    %eax,%eax
40000e0f:	5a                   	pop    %edx
40000e10:	5b                   	pop    %ebx
40000e11:	5e                   	pop    %esi
40000e12:	5f                   	pop    %edi
40000e13:	5d                   	pop    %ebp
40000e14:	c3                   	ret    

40000e15 <strclone>:
40000e15:	55                   	push   %ebp

    return 0;
}
40000e16:	31 c0                	xor    %eax,%eax
40000e18:	89 e5                	mov    %esp,%ebp
40000e1a:	56                   	push   %esi
40000e1b:	53                   	push   %ebx

    return 0;
}
40000e1c:	31 d2                	xor    %edx,%edx
40000e1e:	8b 5d 08             	mov    0x8(%ebp),%ebx

    return 0;
}
40000e21:	85 db                	test   %ebx,%ebx
40000e23:	75 03                	jne    40000e28 <strclone+0x13>
40000e25:	eb 09                	jmp    40000e30 <strclone+0x1b>
40000e27:	40                   	inc    %eax
40000e28:	89 c2                	mov    %eax,%edx
40000e2a:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
40000e2e:	75 f7                	jne    40000e27 <strclone+0x12>
40000e30:	83 ec 0c             	sub    $0xc,%esp
40000e33:	42                   	inc    %edx
40000e34:	52                   	push   %edx
40000e35:	e8 af 01 00 00       	call   40000fe9 <malloc>
40000e3a:	59                   	pop    %ecx
40000e3b:	89 c6                	mov    %eax,%esi
40000e3d:	58                   	pop    %eax
40000e3e:	53                   	push   %ebx
40000e3f:	56                   	push   %esi
40000e40:	e8 f8 fe ff ff       	call   40000d3d <strcpy>
40000e45:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000e48:	89 f0                	mov    %esi,%eax
40000e4a:	5b                   	pop    %ebx
40000e4b:	5e                   	pop    %esi
40000e4c:	5d                   	pop    %ebp
40000e4d:	c3                   	ret    

40000e4e <strtok>:
40000e4e:	55                   	push   %ebp
40000e4f:	89 e5                	mov    %esp,%ebp
40000e51:	56                   	push   %esi
40000e52:	53                   	push   %ebx
40000e53:	8b 75 08             	mov    0x8(%ebp),%esi
40000e56:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000e59:	85 f6                	test   %esi,%esi
40000e5b:	74 2e                	je     40000e8b <strtok+0x3d>
40000e5d:	a1 04 32 00 40       	mov    0x40003204,%eax
40000e62:	85 c0                	test   %eax,%eax
40000e64:	74 0c                	je     40000e72 <strtok+0x24>
40000e66:	83 ec 0c             	sub    $0xc,%esp
40000e69:	50                   	push   %eax
40000e6a:	e8 31 00 00 00       	call   40000ea0 <free>
40000e6f:	83 c4 10             	add    $0x10,%esp
40000e72:	83 ec 0c             	sub    $0xc,%esp
40000e75:	56                   	push   %esi
40000e76:	e8 9a ff ff ff       	call   40000e15 <strclone>
40000e7b:	83 c4 10             	add    $0x10,%esp
40000e7e:	a3 04 32 00 40       	mov    %eax,0x40003204
40000e83:	89 5d 0c             	mov    %ebx,0xc(%ebp)
40000e86:	89 45 08             	mov    %eax,0x8(%ebp)
40000e89:	eb 0a                	jmp    40000e95 <strtok+0x47>
40000e8b:	89 5d 0c             	mov    %ebx,0xc(%ebp)
40000e8e:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)
40000e95:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000e98:	5b                   	pop    %ebx
40000e99:	5e                   	pop    %esi
40000e9a:	5d                   	pop    %ebp
40000e9b:	e9 d0 fe ff ff       	jmp    40000d70 <strtoknc>

40000ea0 <free>:
40000ea0:	55                   	push   %ebp
40000ea1:	89 e5                	mov    %esp,%ebp
40000ea3:	57                   	push   %edi
40000ea4:	56                   	push   %esi
40000ea5:	53                   	push   %ebx
40000ea6:	83 ec 08             	sub    $0x8,%esp
40000ea9:	8b 15 0c 32 00 40    	mov    0x4000320c,%edx
40000eaf:	8b 4d 08             	mov    0x8(%ebp),%ecx
40000eb2:	89 d0                	mov    %edx,%eax
40000eb4:	e9 b8 00 00 00       	jmp    40000f71 <free+0xd1>
40000eb9:	3b 48 04             	cmp    0x4(%eax),%ecx
40000ebc:	0f 85 ac 00 00 00    	jne    40000f6e <free+0xce>
40000ec2:	31 c9                	xor    %ecx,%ecx
40000ec4:	eb 23                	jmp    40000ee9 <free+0x49>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000ec6:	39 c2                	cmp    %eax,%edx
40000ec8:	75 1a                	jne    40000ee4 <free+0x44>
        getExecPath(epath);
40000eca:	85 c9                	test   %ecx,%ecx
40000ecc:	8b 50 08             	mov    0x8(%eax),%edx
40000ecf:	75 0e                	jne    40000edf <free+0x3f>
        printf("$%s> ", epath);
40000ed1:	89 15 0c 32 00 40    	mov    %edx,0x4000320c
40000ed7:	8b 0d 10 32 00 40    	mov    0x40003210,%ecx
40000edd:	eb 10                	jmp    40000eef <free+0x4f>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000edf:	89 51 08             	mov    %edx,0x8(%ecx)
40000ee2:	eb f3                	jmp    40000ed7 <free+0x37>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000ee4:	89 d1                	mov    %edx,%ecx
40000ee6:	8b 52 08             	mov    0x8(%edx),%edx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000ee9:	85 d2                	test   %edx,%edx
40000eeb:	75 d9                	jne    40000ec6 <free+0x26>
40000eed:	eb e8                	jmp    40000ed7 <free+0x37>
40000eef:	89 ca                	mov    %ecx,%edx
40000ef1:	eb 6d                	jmp    40000f60 <free+0xc0>
40000ef3:	8b 5a 04             	mov    0x4(%edx),%ebx
40000ef6:	8b 32                	mov    (%edx),%esi
40000ef8:	8b 78 04             	mov    0x4(%eax),%edi
40000efb:	89 7d ec             	mov    %edi,-0x14(%ebp)
40000efe:	8d 3c 1e             	lea    (%esi,%ebx,1),%edi
40000f01:	89 7d f0             	mov    %edi,-0x10(%ebp)
40000f04:	8b 7d ec             	mov    -0x14(%ebp),%edi
40000f07:	39 7d f0             	cmp    %edi,-0x10(%ebp)
40000f0a:	75 18                	jne    40000f24 <free+0x84>
40000f0c:	89 58 04             	mov    %ebx,0x4(%eax)
40000f0f:	31 f6                	xor    %esi,%esi
40000f11:	89 cb                	mov    %ecx,%ebx
40000f13:	eb 09                	jmp    40000f1e <free+0x7e>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000f15:	39 d3                	cmp    %edx,%ebx
40000f17:	74 29                	je     40000f42 <free+0xa2>
        char* cmd = strtoknc(instr, " ");

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000f19:	89 de                	mov    %ebx,%esi
40000f1b:	8b 5b 08             	mov    0x8(%ebx),%ebx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000f1e:	85 db                	test   %ebx,%ebx
40000f20:	75 f3                	jne    40000f15 <free+0x75>
40000f22:	eb cb                	jmp    40000eef <free+0x4f>
40000f24:	8b 38                	mov    (%eax),%edi
40000f26:	89 7d f0             	mov    %edi,-0x10(%ebp)
40000f29:	8b 7d ec             	mov    -0x14(%ebp),%edi
40000f2c:	03 7d f0             	add    -0x10(%ebp),%edi
40000f2f:	39 fb                	cmp    %edi,%ebx
40000f31:	75 2a                	jne    40000f5d <free+0xbd>
40000f33:	03 75 f0             	add    -0x10(%ebp),%esi
40000f36:	89 cb                	mov    %ecx,%ebx
40000f38:	89 30                	mov    %esi,(%eax)
40000f3a:	31 f6                	xor    %esi,%esi
40000f3c:	eb 19                	jmp    40000f57 <free+0xb7>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40000f3e:	39 d3                	cmp    %edx,%ebx
40000f40:	75 10                	jne    40000f52 <free+0xb2>
        getExecPath(epath);
40000f42:	85 f6                	test   %esi,%esi
40000f44:	8b 53 08             	mov    0x8(%ebx),%edx
40000f47:	75 04                	jne    40000f4d <free+0xad>
        printf("$%s> ", epath);
40000f49:	89 d1                	mov    %edx,%ecx
40000f4b:	eb a2                	jmp    40000eef <free+0x4f>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40000f4d:	89 56 08             	mov    %edx,0x8(%esi)
40000f50:	eb 9d                	jmp    40000eef <free+0x4f>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

40000f52:	89 de                	mov    %ebx,%esi
40000f54:	8b 5b 08             	mov    0x8(%ebx),%ebx
{
    char epath[512];
    char instr[512];

    cd("ibin");

40000f57:	85 db                	test   %ebx,%ebx
40000f59:	75 e3                	jne    40000f3e <free+0x9e>
40000f5b:	eb 92                	jmp    40000eef <free+0x4f>
40000f5d:	8b 52 08             	mov    0x8(%edx),%edx
40000f60:	85 d2                	test   %edx,%edx
40000f62:	75 8f                	jne    40000ef3 <free+0x53>
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40000f64:	89 48 08             	mov    %ecx,0x8(%eax)
                if(pargs[0] != 0) {
40000f67:	a3 10 32 00 40       	mov    %eax,0x40003210
40000f6c:	eb 0b                	jmp    40000f79 <free+0xd9>
40000f6e:	8b 40 08             	mov    0x8(%eax),%eax
40000f71:	85 c0                	test   %eax,%eax
40000f73:	0f 85 40 ff ff ff    	jne    40000eb9 <free+0x19>
40000f79:	58                   	pop    %eax
40000f7a:	5a                   	pop    %edx
40000f7b:	5b                   	pop    %ebx
40000f7c:	5e                   	pop    %esi
40000f7d:	5f                   	pop    %edi
40000f7e:	5d                   	pop    %ebp
40000f7f:	c3                   	ret    

40000f80 <pop_unused_node>:
            }

            printf("\n");
        }
    }

40000f80:	55                   	push   %ebp
40000f81:	89 e5                	mov    %esp,%ebp
40000f83:	53                   	push   %ebx
40000f84:	83 ec 04             	sub    $0x4,%esp
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
                {
40000f87:	a1 08 32 00 40       	mov    0x40003208,%eax
40000f8c:	eb 45                	jmp    40000fd3 <pop_unused_node+0x53>

                continue;
            }

            int PID = texec(instr, pargs);

40000f8e:	83 ec 0c             	sub    $0xc,%esp
40000f91:	6a 01                	push   $0x1
40000f93:	e8 5b 02 00 00       	call   400011f3 <vmm_alloc_cont>
            while(pexists(PID)) {
40000f98:	83 c4 0c             	add    $0xc,%esp

                continue;
            }

            int PID = texec(instr, pargs);

40000f9b:	89 c3                	mov    %eax,%ebx
            while(pexists(PID)) {
40000f9d:	68 00 10 00 00       	push   $0x1000
40000fa2:	6a 00                	push   $0x0
40000fa4:	50                   	push   %eax
40000fa5:	e8 a6 fc ff ff       	call   40000c50 <memset>
40000faa:	8b 15 08 32 00 40    	mov    0x40003208,%edx
40000fb0:	8d 43 0c             	lea    0xc(%ebx),%eax
            }

            printf("\n");
        }
    }

40000fb3:	8d 8b fc 0f 00 00    	lea    0xffc(%ebx),%ecx
40000fb9:	83 c4 10             	add    $0x10,%esp
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40000fbc:	89 50 08             	mov    %edx,0x8(%eax)
40000fbf:	89 c2                	mov    %eax,%edx
40000fc1:	83 c0 0c             	add    $0xc,%eax

            int PID = texec(instr, pargs);

            while(pexists(PID)) {
                yield();
            }
40000fc4:	39 c8                	cmp    %ecx,%eax
40000fc6:	75 f4                	jne    40000fbc <pop_unused_node+0x3c>
40000fc8:	8d 83 f0 0f 00 00    	lea    0xff0(%ebx),%eax
40000fce:	a3 08 32 00 40       	mov    %eax,0x40003208
            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
                }
                else
                {
40000fd3:	85 c0                	test   %eax,%eax
40000fd5:	74 b7                	je     40000f8e <pop_unused_node+0xe>

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
40000fd7:	8b 50 08             	mov    0x8(%eax),%edx
        }
    }

    return 0;
}
40000fda:	85 c0                	test   %eax,%eax

    cd("ibin");

    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
40000fdc:	89 15 08 32 00 40    	mov    %edx,0x40003208
        }
    }

    return 0;
}
40000fe2:	74 aa                	je     40000f8e <pop_unused_node+0xe>
40000fe4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
40000fe7:	c9                   	leave  
40000fe8:	c3                   	ret    

40000fe9 <malloc>:
40000fe9:	55                   	push   %ebp
40000fea:	89 e5                	mov    %esp,%ebp
40000fec:	57                   	push   %edi
40000fed:	56                   	push   %esi
40000fee:	53                   	push   %ebx
40000fef:	83 ec 1c             	sub    $0x1c,%esp
40000ff2:	a1 10 32 00 40       	mov    0x40003210,%eax
40000ff7:	8b 75 08             	mov    0x8(%ebp),%esi
40000ffa:	89 c3                	mov    %eax,%ebx
40000ffc:	eb 07                	jmp    40001005 <malloc+0x1c>
40000ffe:	39 33                	cmp    %esi,(%ebx)
40001000:	73 0c                	jae    4000100e <malloc+0x25>
40001002:	8b 5b 08             	mov    0x8(%ebx),%ebx
40001005:	85 db                	test   %ebx,%ebx
40001007:	75 f5                	jne    40000ffe <malloc+0x15>
40001009:	e9 93 00 00 00       	jmp    400010a1 <malloc+0xb8>
4000100e:	8b 3b                	mov    (%ebx),%edi
40001010:	31 d2                	xor    %edx,%edx
40001012:	29 f7                	sub    %esi,%edi
40001014:	89 33                	mov    %esi,(%ebx)
40001016:	eb 4b                	jmp    40001063 <malloc+0x7a>
40001018:	e8 63 ff ff ff       	call   40000f80 <pop_unused_node>
4000101d:	8b 13                	mov    (%ebx),%edx
4000101f:	03 53 04             	add    0x4(%ebx),%edx
40001022:	29 f7                	sub    %esi,%edi
40001024:	89 50 04             	mov    %edx,0x4(%eax)
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40001027:	8b 15 10 32 00 40    	mov    0x40003210,%edx
4000102d:	89 50 08             	mov    %edx,0x8(%eax)
40001030:	89 38                	mov    %edi,(%eax)
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40001032:	a3 10 32 00 40       	mov    %eax,0x40003210
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40001037:	a1 0c 32 00 40       	mov    0x4000320c,%eax
4000103c:	89 43 08             	mov    %eax,0x8(%ebx)
                if(pargs[0] != 0) {
4000103f:	89 1d 0c 32 00 40    	mov    %ebx,0x4000320c
40001045:	eb 4f                	jmp    40001096 <malloc+0xad>
    char epath[512];
    char instr[512];

    cd("ibin");

    while(1) {
40001047:	39 d8                	cmp    %ebx,%eax
40001049:	75 13                	jne    4000105e <malloc+0x75>
        getExecPath(epath);
4000104b:	85 d2                	test   %edx,%edx
4000104d:	8b 43 08             	mov    0x8(%ebx),%eax
40001050:	75 07                	jne    40001059 <malloc+0x70>
        printf("$%s> ", epath);
40001052:	a3 10 32 00 40       	mov    %eax,0x40003210
40001057:	eb 0e                	jmp    40001067 <malloc+0x7e>
        getln(instr);

        char* cmd = strtoknc(instr, " ");
40001059:	89 42 08             	mov    %eax,0x8(%edx)
4000105c:	eb 09                	jmp    40001067 <malloc+0x7e>

        if(cmd != 0) {
            char* pargs[64];
            int n = 0;

4000105e:	89 c2                	mov    %eax,%edx
40001060:	8b 40 08             	mov    0x8(%eax),%eax
{
    char epath[512];
    char instr[512];

    cd("ibin");

40001063:	85 c0                	test   %eax,%eax
40001065:	75 e0                	jne    40001047 <malloc+0x5e>
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40001067:	a1 0c 32 00 40       	mov    0x4000320c,%eax
4000106c:	85 ff                	test   %edi,%edi
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
4000106e:	89 43 08             	mov    %eax,0x8(%ebx)
                if(pargs[0] != 0) {
40001071:	89 1d 0c 32 00 40    	mov    %ebx,0x4000320c
40001077:	74 1d                	je     40001096 <malloc+0xad>
40001079:	e8 02 ff ff ff       	call   40000f80 <pop_unused_node>
4000107e:	8b 13                	mov    (%ebx),%edx
40001080:	03 53 04             	add    0x4(%ebx),%edx
40001083:	89 50 04             	mov    %edx,0x4(%eax)
            do {
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
40001086:	8b 15 10 32 00 40    	mov    0x40003210,%edx
4000108c:	89 50 08             	mov    %edx,0x8(%eax)
4000108f:	89 38                	mov    %edi,(%eax)
                pargs[n] = strtoknc(0, " ");
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
40001091:	a3 10 32 00 40       	mov    %eax,0x40003210
40001096:	8b 43 04             	mov    0x4(%ebx),%eax
40001099:	8d 65 f4             	lea    -0xc(%ebp),%esp
4000109c:	5b                   	pop    %ebx
4000109d:	5e                   	pop    %esi
4000109e:	5f                   	pop    %edi
4000109f:	5d                   	pop    %ebp
400010a0:	c3                   	ret    
400010a1:	89 f0                	mov    %esi,%eax
400010a3:	89 f7                	mov    %esi,%edi
400010a5:	c1 ef 0c             	shr    $0xc,%edi
400010a8:	25 ff 0f 00 00       	and    $0xfff,%eax
400010ad:	83 f8 01             	cmp    $0x1,%eax
400010b0:	83 df ff             	sbb    $0xffffffff,%edi
400010b3:	83 ec 0c             	sub    $0xc,%esp
400010b6:	57                   	push   %edi
400010b7:	e8 37 01 00 00       	call   400011f3 <vmm_alloc_cont>
400010bc:	c1 e7 0c             	shl    $0xc,%edi
400010bf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400010c2:	e8 b9 fe ff ff       	call   40000f80 <pop_unused_node>
400010c7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
400010ca:	83 c4 10             	add    $0x10,%esp
400010cd:	89 c3                	mov    %eax,%ebx
400010cf:	89 50 04             	mov    %edx,0x4(%eax)
400010d2:	89 30                	mov    %esi,(%eax)
400010d4:	39 f7                	cmp    %esi,%edi
400010d6:	0f 86 5b ff ff ff    	jbe    40001037 <malloc+0x4e>
400010dc:	e9 37 ff ff ff       	jmp    40001018 <malloc+0x2f>

400010e1 <realloc>:
400010e1:	55                   	push   %ebp
400010e2:	89 e5                	mov    %esp,%ebp
400010e4:	56                   	push   %esi
400010e5:	53                   	push   %ebx
400010e6:	8b 1d 0c 32 00 40    	mov    0x4000320c,%ebx
400010ec:	8b 55 08             	mov    0x8(%ebp),%edx
400010ef:	8b 45 0c             	mov    0xc(%ebp),%eax
400010f2:	eb 3e                	jmp    40001132 <realloc+0x51>
400010f4:	3b 53 04             	cmp    0x4(%ebx),%edx
400010f7:	75 36                	jne    4000112f <realloc+0x4e>
400010f9:	85 c0                	test   %eax,%eax
400010fb:	75 0b                	jne    40001108 <realloc+0x27>
400010fd:	52                   	push   %edx
400010fe:	31 f6                	xor    %esi,%esi
40001100:	e8 9b fd ff ff       	call   40000ea0 <free>
40001105:	5b                   	pop    %ebx
40001106:	eb 30                	jmp    40001138 <realloc+0x57>
40001108:	83 ec 0c             	sub    $0xc,%esp
4000110b:	50                   	push   %eax
4000110c:	e8 d8 fe ff ff       	call   40000fe9 <malloc>
40001111:	83 c4 0c             	add    $0xc,%esp
40001114:	89 c6                	mov    %eax,%esi
40001116:	ff 33                	pushl  (%ebx)
40001118:	ff 73 04             	pushl  0x4(%ebx)
4000111b:	50                   	push   %eax
4000111c:	e8 4b fb ff ff       	call   40000c6c <memcpy>
40001121:	59                   	pop    %ecx
40001122:	ff 73 04             	pushl  0x4(%ebx)
40001125:	e8 76 fd ff ff       	call   40000ea0 <free>
4000112a:	83 c4 10             	add    $0x10,%esp
4000112d:	eb 09                	jmp    40001138 <realloc+0x57>
4000112f:	8b 5b 08             	mov    0x8(%ebx),%ebx
40001132:	85 db                	test   %ebx,%ebx
40001134:	75 be                	jne    400010f4 <realloc+0x13>
40001136:	31 f6                	xor    %esi,%esi
40001138:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000113b:	89 f0                	mov    %esi,%eax
4000113d:	5b                   	pop    %ebx
4000113e:	5e                   	pop    %esi
4000113f:	5d                   	pop    %ebp
40001140:	c3                   	ret    

40001141 <calloc>:
40001141:	55                   	push   %ebp
40001142:	89 e5                	mov    %esp,%ebp
40001144:	56                   	push   %esi
40001145:	53                   	push   %ebx
40001146:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40001149:	83 ec 0c             	sub    $0xc,%esp
4000114c:	0f af 5d 08          	imul   0x8(%ebp),%ebx
40001150:	53                   	push   %ebx
40001151:	e8 93 fe ff ff       	call   40000fe9 <malloc>
40001156:	83 c4 10             	add    $0x10,%esp
40001159:	89 c6                	mov    %eax,%esi
4000115b:	85 c0                	test   %eax,%eax
4000115d:	74 0d                	je     4000116c <calloc+0x2b>
4000115f:	50                   	push   %eax
40001160:	53                   	push   %ebx
40001161:	6a 00                	push   $0x0
40001163:	56                   	push   %esi
40001164:	e8 e7 fa ff ff       	call   40000c50 <memset>
40001169:	83 c4 10             	add    $0x10,%esp
4000116c:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000116f:	89 f0                	mov    %esi,%eax
40001171:	5b                   	pop    %ebx
40001172:	5e                   	pop    %esi
40001173:	5d                   	pop    %ebp
40001174:	c3                   	ret    
40001175:	00 00                	add    %al,(%eax)
	...

40001178 <print_memstat>:
                n++;
            } while(pargs[n-1] != 0);

            if(!strcmp(cmd, "cd")) {
                if(pargs[0] != 0) {
                    cd((char*)pargs[0]);
40001178:	55                   	push   %ebp
40001179:	89 e5                	mov    %esp,%ebp
4000117b:	83 ec 34             	sub    $0x34,%esp
                }

                continue;
            }

            int PID = texec(instr, pargs);
4000117e:	8d 45 e0             	lea    -0x20(%ebp),%eax
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }
40001181:	c7 45 e0 cd 00 00 00 	movl   $0xcd,-0x20(%ebp)

            int PID = texec(instr, pargs);
40001188:	50                   	push   %eax
                {
                    printf("cd: usage: \"cd [PATH)\"\n");
                }

                continue;
            }
40001189:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40001190:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001197:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000119e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400011a5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

            int PID = texec(instr, pargs);
400011ac:	e8 7f 00 00 00       	call   40001230 <syscall>
400011b1:	83 c4 10             	add    $0x10,%esp

400011b4:	c9                   	leave  
400011b5:	c3                   	ret    

400011b6 <vmm_free>:
    while(1) {
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");
400011b6:	55                   	push   %ebp
400011b7:	89 e5                	mov    %esp,%ebp
400011b9:	83 ec 34             	sub    $0x34,%esp
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
400011bc:	8b 45 08             	mov    0x8(%ebp),%eax
400011bf:	c7 45 e0 cc 00 00 00 	movl   $0xcc,-0x20(%ebp)
400011c6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            } while(pargs[n-1] != 0);

400011c9:	8d 45 e0             	lea    -0x20(%ebp),%eax
400011cc:	50                   	push   %eax
            char* pargs[64];
            int n = 0;

            do {
                pargs[n] = strtoknc(0, " ");
                n++;
400011cd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400011d4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400011db:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400011e2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
            } while(pargs[n-1] != 0);

400011e9:	e8 42 00 00 00       	call   40001230 <syscall>
400011ee:	83 c4 10             	add    $0x10,%esp
            if(!strcmp(cmd, "cd")) {
400011f1:	c9                   	leave  
400011f2:	c3                   	ret    

400011f3 <vmm_alloc_cont>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
400011f3:	55                   	push   %ebp
400011f4:	89 e5                	mov    %esp,%ebp
400011f6:	83 ec 34             	sub    $0x34,%esp
int main(int argc, char* args[])
{
    char epath[512];
    char instr[512];

    cd("ibin");
400011f9:	8b 45 08             	mov    0x8(%ebp),%eax
400011fc:	c7 45 e0 cb 00 00 00 	movl   $0xcb,-0x20(%ebp)
40001203:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    while(1) {
40001206:	8d 45 e0             	lea    -0x20(%ebp),%eax
40001209:	50                   	push   %eax
int main(int argc, char* args[])
{
    char epath[512];
    char instr[512];

    cd("ibin");
4000120a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001211:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40001218:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000121f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    while(1) {
40001226:	e8 05 00 00 00       	call   40001230 <syscall>
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);
4000122b:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000122e:	c9                   	leave  
4000122f:	c3                   	ret    

40001230 <syscall>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
40001230:	55                   	push   %ebp
40001231:	89 e5                	mov    %esp,%ebp
40001233:	57                   	push   %edi
40001234:	56                   	push   %esi
40001235:	53                   	push   %ebx
40001236:	83 ec 10             	sub    $0x10,%esp
#include "string.h"
40001239:	8b 55 08             	mov    0x8(%ebp),%edx
4000123c:	8b 45 08             	mov    0x8(%ebp),%eax
4000123f:	8b 72 0c             	mov    0xc(%edx),%esi
40001242:	8b 00                	mov    (%eax),%eax
40001244:	89 75 e4             	mov    %esi,-0x1c(%ebp)
40001247:	8b 5a 04             	mov    0x4(%edx),%ebx
4000124a:	8b 4a 08             	mov    0x8(%edx),%ecx
4000124d:	8b 72 10             	mov    0x10(%edx),%esi
40001250:	8b 7a 14             	mov    0x14(%edx),%edi
40001253:	89 45 ec             	mov    %eax,-0x14(%ebp)
40001256:	8b 55 e4             	mov    -0x1c(%ebp),%edx
40001259:	cd 30                	int    $0x30
4000125b:	89 55 e8             	mov    %edx,-0x18(%ebp)
4000125e:	8b 55 08             	mov    0x8(%ebp),%edx
40001261:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001264:	89 02                	mov    %eax,(%edx)
40001266:	8b 45 e8             	mov    -0x18(%ebp),%eax
40001269:	89 5a 04             	mov    %ebx,0x4(%edx)
4000126c:	89 4a 08             	mov    %ecx,0x8(%edx)
4000126f:	89 42 0c             	mov    %eax,0xc(%edx)
40001272:	89 72 10             	mov    %esi,0x10(%edx)
40001275:	89 7a 14             	mov    %edi,0x14(%edx)
        getExecPath(epath);
        printf("$%s> ", epath);
        getln(instr);

        char* cmd = strtoknc(instr, " ");

40001278:	83 c4 10             	add    $0x10,%esp
4000127b:	5b                   	pop    %ebx
4000127c:	5e                   	pop    %esi
4000127d:	5f                   	pop    %edi
4000127e:	5d                   	pop    %ebp
4000127f:	c3                   	ret    
