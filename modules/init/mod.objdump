
../../initrfs/ibin/init:     file format elf32-i386
../../initrfs/ibin/init
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x400003b1

Program Header:
    LOAD off    0x00001000 vaddr 0x40000000 paddr 0x40000000 align 2**12
         filesz 0x00002321 memsz 0x00002321 flags r-x
    LOAD off    0x00004000 vaddr 0x40003000 paddr 0x40003000 align 2**12
         filesz 0x00000000 memsz 0x00000214 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000185f  40000000  40000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000321  40002000  40002000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .bss          00000214  40003000  40003000  00004000  2**5
                  ALLOC
  3 .stab         000045c0  00000000  00000000  00003324  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000007e  00000000  00000000  000078e4  2**0
                  CONTENTS, READONLY
  5 .stabstr      000018fa  00000000  00000000  00007962  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
40000000 l    d  .text	00000000 .text
40002000 l    d  .rodata	00000000 .rodata
40003000 l    d  .bss	00000000 .bss
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 init.c
40000000 l     F .text	00000029 waitResp
40000029 l     F .text	00000018 hdlrx21
00000000 l    df *ABS*	00000000 process.c
40000160 l     F .text	00000040 return_rpc
40000220 l     F .text	00000043 register_irq_rpc_syscall
40003000 l     O .bss	00000200 irq_handlers
40000296 l     F .text	00000088 _handle_rpc
40002258 l     O .rodata	00000018 C.8.1010
4000036d l     F .text	00000044 getargs
00000000 l    df *ABS*	00000000 stdio.c
400006cc l     F .text	00000043 getpmhandle
4000070f l     F .text	00000015 getstdout
40000724 l     F .text	00000015 getstdin
40000739 l     F .text	00000015 getstderr
4000085d l     F .text	0000006c printrwerror
400008c9 l     F .text	00000041 frwrite
40000961 l     F .text	00000041 frread
40000a3c l     F .text	00000025 resolveHandle
40000bc1 l     F .text	0000004a kputc
40000c99 l     F .text	00000043 kputs
40000d43 l     F .text	0000007c putn
00000000 l    df *ABS*	00000000 string.c
00000000 l    df *ABS*	00000000 stdlib.c
40001294 l     F .text	00000057 remove_from_list
400012eb l     F .text	00000018 append_to_list
40001303 l     F .text	00000031 pop_from_list
40001334 l     F .text	00000062 allocate_unused_nodes
40001396 l     F .text	0000003b pop_unused_node
400013d1 l     F .text	000000c8 merge_into_frees
00000000 l    df *ABS*	00000000 vmmcall.c
00000000 l    df *ABS*	00000000 syscall.c
4000049a g     F .text	00000040 getExecPath
40000c0b g     F .text	00000020 putchar
400010c9 g     F .text	00000023 strcpy
40000409 g     F .text	00000041 yield
40000dbf g     F .text	0000017a printf
400017e8 g     F .text	00000077 syscall
40000a9b g     F .text	00000062 fgets
40000afd g     F .text	00000016 getc
40000f6a g     F .text	00000045 memcpy
40000cdc g     F .text	00000018 puts
40001499 g     F .text	00000166 malloc
400001e0 g     F .text	00000040 fetch_rpc_data
40001184 g     F .text	0000010d strtoknc
400004da g     F .text	00000043 changeExecPath
40003210 g     O .bss	00000004 first_free
40000790 g     F .text	00000018 setstdout
400015ff g     F .text	0000003f calloc
40001724 g     F .text	00000043 vmm_alloc_cont
4000054b g     F .text	00000042 exec
400003b1 g     F .text	00000058 _start
4000163e g     F .text	0000009e realloc
4000031e g     F .text	0000004f set_rpc_handler
40001123 g     F .text	00000061 strtok
40000faf g     F .text	0000009b memcmp
400009a2 g     F .text	00000057 fread
40003208 g     O .bss	00000004 first_unused
400007d8 g     F .text	00000042 fopen
40000f3c g     F .text	0000002e memset
40000041 g     F .text	0000011f main
4000081a g     F .text	00000043 fclose
40000b13 g     F .text	00000015 getchar
40000b28 g     F .text	00000099 getln
40003204 g     O .bss	00000004 fr
40000c2b g     F .text	00000021 putc
4000104a g     F .text	0000004f strcmp
40000a61 g     F .text	0000003a fgetc
40003200 g     O .bss	00000004 sp
4000051d g     F .text	0000002e cd
4000320c g     O .bss	00000004 first_used
40000c4c g     F .text	0000004d fputc
4000090a g     F .text	00000057 fwrite
400007a8 g     F .text	00000018 setstdin
4000058d g     F .text	00000039 texec
400010ec g     F .text	00000037 strclone
4000044a g     F .text	00000050 exit
40000263 g     F .text	00000033 register_irq_handler
4000074e g     F .text	00000042 fopenpmhandle
40001767 g     F .text	00000040 vmm_free
400005c6 g     F .text	000000c1 printFilesystemError
40001099 g     F .text	00000030 strlen
40000688 g     F .text	00000044 getLastVFSErr
40000cf4 g     F .text	0000004f fputs
400009f9 g     F .text	00000043 fmkfifo
400001a0 g     F .text	00000040 call_rpc
400007c0 g     F .text	00000018 setstderr
400017a7 g     F .text	00000041 print_memstat
400016dc g     F .text	00000048 free



Disassembly of section .text:

40000000 <waitResp>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"

static void waitResp(HANDLE cntrl) {
40000000:	55                   	push   %ebp
40000001:	89 e5                	mov    %esp,%ebp
40000003:	83 ec 18             	sub    $0x18,%esp
    char resp = 0;
40000006:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)

    while(resp != 'K') {
4000000a:	eb 14                	jmp    40000020 <waitResp+0x20>
        fread(cntrl, &resp, sizeof(char));
4000000c:	83 ec 04             	sub    $0x4,%esp
4000000f:	6a 01                	push   $0x1
40000011:	8d 45 f7             	lea    -0x9(%ebp),%eax
40000014:	50                   	push   %eax
40000015:	ff 75 08             	pushl  0x8(%ebp)
40000018:	e8 85 09 00 00       	call   400009a2 <fread>
4000001d:	83 c4 10             	add    $0x10,%esp
#include "stdlib.h"

static void waitResp(HANDLE cntrl) {
    char resp = 0;

    while(resp != 'K') {
40000020:	8a 45 f7             	mov    -0x9(%ebp),%al
40000023:	3c 4b                	cmp    $0x4b,%al
40000025:	75 e5                	jne    4000000c <waitResp+0xc>
        fread(cntrl, &resp, sizeof(char));
    }
}
40000027:	c9                   	leave  
40000028:	c3                   	ret    

40000029 <hdlrx21>:

static void hdlrx21(uint32_t irq) {
40000029:	55                   	push   %ebp
4000002a:	89 e5                	mov    %esp,%ebp
4000002c:	83 ec 08             	sub    $0x8,%esp
    printf("IRQ 0x21!\n");
4000002f:	83 ec 0c             	sub    $0xc,%esp
40000032:	68 00 20 00 40       	push   $0x40002000
40000037:	e8 83 0d 00 00       	call   40000dbf <printf>
4000003c:	83 c4 10             	add    $0x10,%esp
}
4000003f:	c9                   	leave  
40000040:	c3                   	ret    

40000041 <main>:

int main(int argc, char* args[])
{
40000041:	8d 4c 24 04          	lea    0x4(%esp),%ecx
40000045:	83 e4 f0             	and    $0xfffffff0,%esp
40000048:	ff 71 fc             	pushl  -0x4(%ecx)
4000004b:	55                   	push   %ebp
4000004c:	89 e5                	mov    %esp,%ebp
4000004e:	51                   	push   %ecx
4000004f:	83 ec 14             	sub    $0x14,%esp
    printf("[ibin/init] Init process started... :) Thats so good!\n");
40000052:	83 ec 0c             	sub    $0xc,%esp
40000055:	68 0c 20 00 40       	push   $0x4000200c
4000005a:	e8 60 0d 00 00       	call   40000dbf <printf>
4000005f:	83 c4 10             	add    $0x10,%esp
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
40000062:	83 ec 0c             	sub    $0xc,%esp
40000065:	68 44 20 00 40       	push   $0x40002044
4000006a:	e8 50 0d 00 00       	call   40000dbf <printf>
4000006f:	83 c4 10             	add    $0x10,%esp

    HANDLE cntrl = fmkfifo("/var/cntrl/init");
40000072:	83 ec 0c             	sub    $0xc,%esp
40000075:	68 a0 20 00 40       	push   $0x400020a0
4000007a:	e8 7a 09 00 00       	call   400009f9 <fmkfifo>
4000007f:	83 c4 10             	add    $0x10,%esp
40000082:	89 45 f4             	mov    %eax,-0xc(%ebp)

    texec("/ibin/ttytovga", 0);
40000085:	83 ec 08             	sub    $0x8,%esp
40000088:	6a 00                	push   $0x0
4000008a:	68 b0 20 00 40       	push   $0x400020b0
4000008f:	e8 f9 04 00 00       	call   4000058d <texec>
40000094:	83 c4 10             	add    $0x10,%esp
    waitResp(cntrl);
40000097:	83 ec 0c             	sub    $0xc,%esp
4000009a:	ff 75 f4             	pushl  -0xc(%ebp)
4000009d:	e8 5e ff ff ff       	call   40000000 <waitResp>
400000a2:	83 c4 10             	add    $0x10,%esp

    setstdout("/dev/tty0");
400000a5:	83 ec 0c             	sub    $0xc,%esp
400000a8:	68 bf 20 00 40       	push   $0x400020bf
400000ad:	e8 de 06 00 00       	call   40000790 <setstdout>
400000b2:	83 c4 10             	add    $0x10,%esp
    setstdin ("/dev/keyboard");
400000b5:	83 ec 0c             	sub    $0xc,%esp
400000b8:	68 c9 20 00 40       	push   $0x400020c9
400000bd:	e8 e6 06 00 00       	call   400007a8 <setstdin>
400000c2:	83 c4 10             	add    $0x10,%esp
    setstderr("/dev/tty0");
400000c5:	83 ec 0c             	sub    $0xc,%esp
400000c8:	68 bf 20 00 40       	push   $0x400020bf
400000cd:	e8 ee 06 00 00       	call   400007c0 <setstderr>
400000d2:	83 c4 10             	add    $0x10,%esp

    printf("[init] now working on tty0\n");
400000d5:	83 ec 0c             	sub    $0xc,%esp
400000d8:	68 d7 20 00 40       	push   $0x400020d7
400000dd:	e8 dd 0c 00 00       	call   40000dbf <printf>
400000e2:	83 c4 10             	add    $0x10,%esp

    printf("[init] executing virtual file drivers\n");
400000e5:	83 ec 0c             	sub    $0xc,%esp
400000e8:	68 f4 20 00 40       	push   $0x400020f4
400000ed:	e8 cd 0c 00 00       	call   40000dbf <printf>
400000f2:	83 c4 10             	add    $0x10,%esp
    texec("/ibin/urnd_prov", 0);
400000f5:	83 ec 08             	sub    $0x8,%esp
400000f8:	6a 00                	push   $0x0
400000fa:	68 1b 21 00 40       	push   $0x4000211b
400000ff:	e8 89 04 00 00       	call   4000058d <texec>
40000104:	83 c4 10             	add    $0x10,%esp
    waitResp(cntrl);
40000107:	83 ec 0c             	sub    $0xc,%esp
4000010a:	ff 75 f4             	pushl  -0xc(%ebp)
4000010d:	e8 ee fe ff ff       	call   40000000 <waitResp>
40000112:	83 c4 10             	add    $0x10,%esp

    printf("[init] switching to shell\n");
40000115:	83 ec 0c             	sub    $0xc,%esp
40000118:	68 2b 21 00 40       	push   $0x4000212b
4000011d:	e8 9d 0c 00 00       	call   40000dbf <printf>
40000122:	83 c4 10             	add    $0x10,%esp

    char* testparams[] = {
        "test1",
        "test2",
        0
    };
40000125:	c7 45 e8 46 21 00 40 	movl   $0x40002146,-0x18(%ebp)
4000012c:	c7 45 ec 4c 21 00 40 	movl   $0x4000214c,-0x14(%ebp)
40000133:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)

    texec("/ibin/csh", 0);
4000013a:	83 ec 08             	sub    $0x8,%esp
4000013d:	6a 00                	push   $0x0
4000013f:	68 52 21 00 40       	push   $0x40002152
40000144:	e8 44 04 00 00       	call   4000058d <texec>
40000149:	83 c4 10             	add    $0x10,%esp

    register_irq_handler(0x21, hdlrx21);
4000014c:	83 ec 08             	sub    $0x8,%esp
4000014f:	68 29 00 00 40       	push   $0x40000029
40000154:	6a 21                	push   $0x21
40000156:	e8 08 01 00 00       	call   40000263 <register_irq_handler>
4000015b:	83 c4 10             	add    $0x10,%esp

    while(1);
4000015e:	eb fe                	jmp    4000015e <main+0x11d>

40000160 <return_rpc>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"

40000160:	55                   	push   %ebp
40000161:	89 e5                	mov    %esp,%ebp
40000163:	83 ec 28             	sub    $0x28,%esp
static void waitResp(HANDLE cntrl) {
    char resp = 0;

40000166:	8b 45 08             	mov    0x8(%ebp),%eax
    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

40000169:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
40000170:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000173:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000017a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000181:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000188:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
4000018f:	83 ec 0c             	sub    $0xc,%esp
40000192:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000195:	50                   	push   %eax
40000196:	e8 4d 16 00 00       	call   400017e8 <syscall>
4000019b:	83 c4 10             	add    $0x10,%esp
}

4000019e:	eb fe                	jmp    4000019e <return_rpc+0x3e>

400001a0 <call_rpc>:
int main(int argc, char* args[])
{
    printf("[ibin/init] Init process started... :) Thats so good!\n");
400001a0:	55                   	push   %ebp
400001a1:	89 e5                	mov    %esp,%ebp
400001a3:	83 ec 28             	sub    $0x28,%esp
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    HANDLE cntrl = fmkfifo("/var/cntrl/init");
400001a6:	8b 55 08             	mov    0x8(%ebp),%edx

    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);
400001a9:	8b 45 14             	mov    0x14(%ebp),%eax

    setstdout("/dev/tty0");
400001ac:	c7 45 e0 1f 00 00 00 	movl   $0x1f,-0x20(%ebp)
400001b3:	89 55 e4             	mov    %edx,-0x1c(%ebp)
400001b6:	8b 55 0c             	mov    0xc(%ebp),%edx
400001b9:	89 55 e8             	mov    %edx,-0x18(%ebp)
400001bc:	8b 55 10             	mov    0x10(%ebp),%edx
400001bf:	89 55 ec             	mov    %edx,-0x14(%ebp)
400001c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
400001c5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");
400001cc:	83 ec 0c             	sub    $0xc,%esp
400001cf:	8d 45 e0             	lea    -0x20(%ebp),%eax
400001d2:	50                   	push   %eax
400001d3:	e8 10 16 00 00       	call   400017e8 <syscall>
400001d8:	83 c4 10             	add    $0x10,%esp

    printf("[init] now working on tty0\n");
400001db:	8b 45 e0             	mov    -0x20(%ebp),%eax

400001de:	c9                   	leave  
400001df:	c3                   	ret    

400001e0 <fetch_rpc_data>:
    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
400001e0:	55                   	push   %ebp
400001e1:	89 e5                	mov    %esp,%ebp
400001e3:	83 ec 28             	sub    $0x28,%esp
    waitResp(cntrl);

    printf("[init] switching to shell\n");
400001e6:	8b 45 08             	mov    0x8(%ebp),%eax

    char* testparams[] = {
        "test1",
        "test2",
        0
400001e9:	c7 45 e0 21 00 00 00 	movl   $0x21,-0x20(%ebp)
400001f0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400001f3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400001fa:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000201:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000208:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    };

4000020f:	83 ec 0c             	sub    $0xc,%esp
40000212:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000215:	50                   	push   %eax
40000216:	e8 cd 15 00 00       	call   400017e8 <syscall>
4000021b:	83 c4 10             	add    $0x10,%esp
    texec("/ibin/csh", 0);
4000021e:	c9                   	leave  
4000021f:	c3                   	ret    

40000220 <register_irq_rpc_syscall>:

    register_irq_handler(0x21, hdlrx21);
40000220:	55                   	push   %ebp
40000221:	89 e5                	mov    %esp,%ebp
40000223:	83 ec 28             	sub    $0x28,%esp

    return 0;
}
40000226:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%ebp)
4000022d:	8b 45 08             	mov    0x8(%ebp),%eax
40000230:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000233:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000023a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000241:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000248:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000024f:	83 ec 0c             	sub    $0xc,%esp
40000252:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000255:	50                   	push   %eax
40000256:	e8 8d 15 00 00       	call   400017e8 <syscall>
4000025b:	83 c4 10             	add    $0x10,%esp
4000025e:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000261:	c9                   	leave  
40000262:	c3                   	ret    

40000263 <register_irq_handler>:
40000263:	55                   	push   %ebp
40000264:	89 e5                	mov    %esp,%ebp
40000266:	83 ec 08             	sub    $0x8,%esp
40000269:	83 ec 0c             	sub    $0xc,%esp
4000026c:	ff 75 08             	pushl  0x8(%ebp)
4000026f:	e8 ac ff ff ff       	call   40000220 <register_irq_rpc_syscall>
40000274:	83 c4 10             	add    $0x10,%esp
40000277:	85 c0                	test   %eax,%eax
40000279:	74 14                	je     4000028f <register_irq_handler+0x2c>
4000027b:	8b 45 08             	mov    0x8(%ebp),%eax
4000027e:	8b 55 0c             	mov    0xc(%ebp),%edx
40000281:	89 14 85 00 30 00 40 	mov    %edx,0x40003000(,%eax,4)
40000288:	b8 01 00 00 00       	mov    $0x1,%eax
4000028d:	eb 05                	jmp    40000294 <register_irq_handler+0x31>
4000028f:	b8 00 00 00 00       	mov    $0x0,%eax
40000294:	c9                   	leave  
40000295:	c3                   	ret    

40000296 <_handle_rpc>:
40000296:	55                   	push   %ebp
40000297:	89 e5                	mov    %esp,%ebp
40000299:	83 ec 18             	sub    $0x18,%esp
4000029c:	83 ec 0c             	sub    $0xc,%esp
4000029f:	ff 75 10             	pushl  0x10(%ebp)
400002a2:	e8 f2 11 00 00       	call   40001499 <malloc>
400002a7:	83 c4 10             	add    $0x10,%esp
400002aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
400002ad:	83 ec 0c             	sub    $0xc,%esp
400002b0:	ff 75 f4             	pushl  -0xc(%ebp)
400002b3:	e8 28 ff ff ff       	call   400001e0 <fetch_rpc_data>
400002b8:	83 c4 10             	add    $0x10,%esp
400002bb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
400002bf:	75 30                	jne    400002f1 <_handle_rpc+0x5b>
400002c1:	8b 45 0c             	mov    0xc(%ebp),%eax
400002c4:	8b 04 85 00 30 00 40 	mov    0x40003000(,%eax,4),%eax
400002cb:	85 c0                	test   %eax,%eax
400002cd:	74 22                	je     400002f1 <_handle_rpc+0x5b>
400002cf:	8b 45 0c             	mov    0xc(%ebp),%eax
400002d2:	8b 04 85 00 30 00 40 	mov    0x40003000(,%eax,4),%eax
400002d9:	83 ec 0c             	sub    $0xc,%esp
400002dc:	ff 75 0c             	pushl  0xc(%ebp)
400002df:	ff d0                	call   *%eax
400002e1:	83 c4 10             	add    $0x10,%esp
400002e4:	83 ec 0c             	sub    $0xc,%esp
400002e7:	6a 00                	push   $0x0
400002e9:	e8 72 fe ff ff       	call   40000160 <return_rpc>
400002ee:	83 c4 10             	add    $0x10,%esp
400002f1:	83 ec 0c             	sub    $0xc,%esp
400002f4:	68 5c 21 00 40       	push   $0x4000215c
400002f9:	e8 c1 0a 00 00       	call   40000dbf <printf>
400002fe:	83 c4 10             	add    $0x10,%esp
40000301:	83 ec 0c             	sub    $0xc,%esp
40000304:	ff 75 f4             	pushl  -0xc(%ebp)
40000307:	e8 d0 13 00 00       	call   400016dc <free>
4000030c:	83 c4 10             	add    $0x10,%esp
4000030f:	83 ec 0c             	sub    $0xc,%esp
40000312:	6a 00                	push   $0x0
40000314:	e8 47 fe ff ff       	call   40000160 <return_rpc>
40000319:	83 c4 10             	add    $0x10,%esp
4000031c:	c9                   	leave  
4000031d:	c3                   	ret    

4000031e <set_rpc_handler>:
4000031e:	55                   	push   %ebp
4000031f:	89 e5                	mov    %esp,%ebp
40000321:	57                   	push   %edi
40000322:	56                   	push   %esi
40000323:	53                   	push   %ebx
40000324:	83 ec 2c             	sub    $0x2c,%esp
40000327:	83 ec 04             	sub    $0x4,%esp
4000032a:	68 00 02 00 00       	push   $0x200
4000032f:	6a 00                	push   $0x0
40000331:	68 00 30 00 40       	push   $0x40003000
40000336:	e8 01 0c 00 00       	call   40000f3c <memset>
4000033b:	83 c4 10             	add    $0x10,%esp
4000033e:	8d 55 d0             	lea    -0x30(%ebp),%edx
40000341:	bb 58 22 00 40       	mov    $0x40002258,%ebx
40000346:	b8 06 00 00 00       	mov    $0x6,%eax
4000034b:	89 d7                	mov    %edx,%edi
4000034d:	89 de                	mov    %ebx,%esi
4000034f:	89 c1                	mov    %eax,%ecx
40000351:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
40000353:	83 ec 0c             	sub    $0xc,%esp
40000356:	8d 45 d0             	lea    -0x30(%ebp),%eax
40000359:	50                   	push   %eax
4000035a:	e8 89 14 00 00       	call   400017e8 <syscall>
4000035f:	83 c4 10             	add    $0x10,%esp
40000362:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000365:	83 c4 00             	add    $0x0,%esp
40000368:	5b                   	pop    %ebx
40000369:	5e                   	pop    %esi
4000036a:	5f                   	pop    %edi
4000036b:	5d                   	pop    %ebp
4000036c:	c3                   	ret    

4000036d <getargs>:
#include "stdio.h"
#include "process.h"
#include "stdlib.h"

static void waitResp(HANDLE cntrl) {
    char resp = 0;
4000036d:	55                   	push   %ebp
4000036e:	89 e5                	mov    %esp,%ebp
40000370:	83 ec 28             	sub    $0x28,%esp
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
40000373:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%ebp)
4000037a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000381:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000388:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000038f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000396:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
}

4000039d:	83 ec 0c             	sub    $0xc,%esp
400003a0:	8d 45 e0             	lea    -0x20(%ebp),%eax
400003a3:	50                   	push   %eax
400003a4:	e8 3f 14 00 00       	call   400017e8 <syscall>
400003a9:	83 c4 10             	add    $0x10,%esp
int main(int argc, char* args[])
{
400003ac:	8b 45 e0             	mov    -0x20(%ebp),%eax
    printf("[ibin/init] Init process started... :) Thats so good!\n");
400003af:	c9                   	leave  
400003b0:	c3                   	ret    

400003b1 <_start>:
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

400003b1:	55                   	push   %ebp
400003b2:	89 e5                	mov    %esp,%ebp
400003b4:	83 ec 18             	sub    $0x18,%esp
    HANDLE cntrl = fmkfifo("/var/cntrl/init");
400003b7:	e8 b1 ff ff ff       	call   4000036d <getargs>
400003bc:	89 45 ec             	mov    %eax,-0x14(%ebp)

    texec("/ibin/ttytovga", 0);
400003bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    waitResp(cntrl);

400003c6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
400003ca:	74 14                	je     400003e0 <_start+0x2f>
    setstdout("/dev/tty0");
400003cc:	eb 03                	jmp    400003d1 <_start+0x20>
    setstdin ("/dev/keyboard");
400003ce:	ff 45 f0             	incl   -0x10(%ebp)
    HANDLE cntrl = fmkfifo("/var/cntrl/init");

    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);

    setstdout("/dev/tty0");
400003d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
400003d4:	c1 e0 02             	shl    $0x2,%eax
400003d7:	03 45 ec             	add    -0x14(%ebp),%eax
400003da:	8b 00                	mov    (%eax),%eax
400003dc:	85 c0                	test   %eax,%eax
400003de:	75 ee                	jne    400003ce <_start+0x1d>
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");

    printf("[init] now working on tty0\n");

400003e0:	e8 39 ff ff ff       	call   4000031e <set_rpc_handler>
    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
400003e5:	83 ec 08             	sub    $0x8,%esp
400003e8:	ff 75 ec             	pushl  -0x14(%ebp)
400003eb:	ff 75 f0             	pushl  -0x10(%ebp)
400003ee:	e8 4e fc ff ff       	call   40000041 <main>
400003f3:	83 c4 10             	add    $0x10,%esp
400003f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    waitResp(cntrl);

400003f9:	83 ec 0c             	sub    $0xc,%esp
400003fc:	ff 75 f4             	pushl  -0xc(%ebp)
400003ff:	e8 46 00 00 00       	call   4000044a <exit>
40000404:	83 c4 10             	add    $0x10,%esp
    printf("[init] switching to shell\n");
40000407:	c9                   	leave  
40000408:	c3                   	ret    

40000409 <yield>:

    char* testparams[] = {
40000409:	55                   	push   %ebp
4000040a:	89 e5                	mov    %esp,%ebp
4000040c:	83 ec 28             	sub    $0x28,%esp
        0
    };

    texec("/ibin/csh", 0);

    register_irq_handler(0x21, hdlrx21);
4000040f:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%ebp)
40000416:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
4000041d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000424:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000042b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000432:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    while(1);
40000439:	83 ec 0c             	sub    $0xc,%esp
4000043c:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000043f:	50                   	push   %eax
40000440:	e8 a3 13 00 00       	call   400017e8 <syscall>
40000445:	83 c4 10             	add    $0x10,%esp

    return 0;
}
40000448:	c9                   	leave  
40000449:	c3                   	ret    

4000044a <exit>:
4000044a:	55                   	push   %ebp
4000044b:	89 e5                	mov    %esp,%ebp
4000044d:	83 ec 28             	sub    $0x28,%esp
40000450:	8b 45 08             	mov    0x8(%ebp),%eax
40000453:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
4000045a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000045d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000464:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000046b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000472:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000479:	83 ec 0c             	sub    $0xc,%esp
4000047c:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000047f:	50                   	push   %eax
40000480:	e8 63 13 00 00       	call   400017e8 <syscall>
40000485:	83 c4 10             	add    $0x10,%esp
40000488:	83 ec 0c             	sub    $0xc,%esp
4000048b:	68 6c 21 00 40       	push   $0x4000216c
40000490:	e8 2a 09 00 00       	call   40000dbf <printf>
40000495:	83 c4 10             	add    $0x10,%esp
40000498:	eb ee                	jmp    40000488 <exit+0x3e>

4000049a <getExecPath>:
4000049a:	55                   	push   %ebp
4000049b:	89 e5                	mov    %esp,%ebp
4000049d:	83 ec 28             	sub    $0x28,%esp
400004a0:	8b 45 08             	mov    0x8(%ebp),%eax
400004a3:	c7 45 e0 06 00 00 00 	movl   $0x6,-0x20(%ebp)
400004aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400004ad:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400004b4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400004bb:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400004c2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400004c9:	83 ec 0c             	sub    $0xc,%esp
400004cc:	8d 45 e0             	lea    -0x20(%ebp),%eax
400004cf:	50                   	push   %eax
400004d0:	e8 13 13 00 00       	call   400017e8 <syscall>
400004d5:	83 c4 10             	add    $0x10,%esp
400004d8:	c9                   	leave  
400004d9:	c3                   	ret    

400004da <changeExecPath>:
400004da:	55                   	push   %ebp
400004db:	89 e5                	mov    %esp,%ebp
400004dd:	83 ec 28             	sub    $0x28,%esp
400004e0:	8b 45 08             	mov    0x8(%ebp),%eax
400004e3:	c7 45 e0 07 00 00 00 	movl   $0x7,-0x20(%ebp)
400004ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400004ed:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400004f4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400004fb:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000502:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000509:	83 ec 0c             	sub    $0xc,%esp
4000050c:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000050f:	50                   	push   %eax
40000510:	e8 d3 12 00 00       	call   400017e8 <syscall>
40000515:	83 c4 10             	add    $0x10,%esp
40000518:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000051b:	c9                   	leave  
4000051c:	c3                   	ret    

4000051d <cd>:
4000051d:	55                   	push   %ebp
4000051e:	89 e5                	mov    %esp,%ebp
40000520:	83 ec 08             	sub    $0x8,%esp
40000523:	83 ec 0c             	sub    $0xc,%esp
40000526:	ff 75 08             	pushl  0x8(%ebp)
40000529:	e8 ac ff ff ff       	call   400004da <changeExecPath>
4000052e:	83 c4 10             	add    $0x10,%esp
40000531:	85 c0                	test   %eax,%eax
40000533:	75 14                	jne    40000549 <cd+0x2c>
40000535:	e8 4e 01 00 00       	call   40000688 <getLastVFSErr>
4000053a:	83 ec 08             	sub    $0x8,%esp
4000053d:	50                   	push   %eax
4000053e:	ff 75 08             	pushl  0x8(%ebp)
40000541:	e8 80 00 00 00       	call   400005c6 <printFilesystemError>
40000546:	83 c4 10             	add    $0x10,%esp
40000549:	c9                   	leave  
4000054a:	c3                   	ret    

4000054b <exec>:
4000054b:	55                   	push   %ebp
4000054c:	89 e5                	mov    %esp,%ebp
4000054e:	83 ec 28             	sub    $0x28,%esp
40000551:	8b 55 08             	mov    0x8(%ebp),%edx
40000554:	8b 45 0c             	mov    0xc(%ebp),%eax
40000557:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%ebp)
4000055e:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000561:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000564:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000056b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000572:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000579:	83 ec 0c             	sub    $0xc,%esp
4000057c:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000057f:	50                   	push   %eax
40000580:	e8 63 12 00 00       	call   400017e8 <syscall>
40000585:	83 c4 10             	add    $0x10,%esp
40000588:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000058b:	c9                   	leave  
4000058c:	c3                   	ret    

4000058d <texec>:
4000058d:	55                   	push   %ebp
4000058e:	89 e5                	mov    %esp,%ebp
40000590:	83 ec 18             	sub    $0x18,%esp
40000593:	83 ec 08             	sub    $0x8,%esp
40000596:	ff 75 0c             	pushl  0xc(%ebp)
40000599:	ff 75 08             	pushl  0x8(%ebp)
4000059c:	e8 aa ff ff ff       	call   4000054b <exec>
400005a1:	83 c4 10             	add    $0x10,%esp
400005a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
400005a7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
400005ab:	75 14                	jne    400005c1 <texec+0x34>
400005ad:	e8 d6 00 00 00       	call   40000688 <getLastVFSErr>
400005b2:	83 ec 08             	sub    $0x8,%esp
400005b5:	50                   	push   %eax
400005b6:	ff 75 08             	pushl  0x8(%ebp)
400005b9:	e8 08 00 00 00       	call   400005c6 <printFilesystemError>
400005be:	83 c4 10             	add    $0x10,%esp
400005c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
400005c4:	c9                   	leave  
400005c5:	c3                   	ret    

400005c6 <printFilesystemError>:
400005c6:	55                   	push   %ebp
400005c7:	89 e5                	mov    %esp,%ebp
400005c9:	83 ec 08             	sub    $0x8,%esp
400005cc:	83 7d 0c 05          	cmpl   $0x5,0xc(%ebp)
400005d0:	0f 87 8c 00 00 00    	ja     40000662 <printFilesystemError+0x9c>
400005d6:	8b 45 0c             	mov    0xc(%ebp),%eax
400005d9:	c1 e0 02             	shl    $0x2,%eax
400005dc:	8b 80 40 22 00 40    	mov    0x40002240(%eax),%eax
400005e2:	ff e0                	jmp    *%eax
400005e4:	83 ec 08             	sub    $0x8,%esp
400005e7:	ff 75 08             	pushl  0x8(%ebp)
400005ea:	68 73 21 00 40       	push   $0x40002173
400005ef:	e8 cb 07 00 00       	call   40000dbf <printf>
400005f4:	83 c4 10             	add    $0x10,%esp
400005f7:	eb 7c                	jmp    40000675 <printFilesystemError+0xaf>
400005f9:	83 ec 08             	sub    $0x8,%esp
400005fc:	ff 75 08             	pushl  0x8(%ebp)
400005ff:	68 88 21 00 40       	push   $0x40002188
40000604:	e8 b6 07 00 00       	call   40000dbf <printf>
40000609:	83 c4 10             	add    $0x10,%esp
4000060c:	eb 67                	jmp    40000675 <printFilesystemError+0xaf>
4000060e:	83 ec 08             	sub    $0x8,%esp
40000611:	ff 75 08             	pushl  0x8(%ebp)
40000614:	68 a8 21 00 40       	push   $0x400021a8
40000619:	e8 a1 07 00 00       	call   40000dbf <printf>
4000061e:	83 c4 10             	add    $0x10,%esp
40000621:	eb 52                	jmp    40000675 <printFilesystemError+0xaf>
40000623:	83 ec 08             	sub    $0x8,%esp
40000626:	ff 75 08             	pushl  0x8(%ebp)
40000629:	68 d2 21 00 40       	push   $0x400021d2
4000062e:	e8 8c 07 00 00       	call   40000dbf <printf>
40000633:	83 c4 10             	add    $0x10,%esp
40000636:	eb 3d                	jmp    40000675 <printFilesystemError+0xaf>
40000638:	83 ec 08             	sub    $0x8,%esp
4000063b:	ff 75 08             	pushl  0x8(%ebp)
4000063e:	68 e8 21 00 40       	push   $0x400021e8
40000643:	e8 77 07 00 00       	call   40000dbf <printf>
40000648:	83 c4 10             	add    $0x10,%esp
4000064b:	eb 28                	jmp    40000675 <printFilesystemError+0xaf>
4000064d:	83 ec 08             	sub    $0x8,%esp
40000650:	ff 75 08             	pushl  0x8(%ebp)
40000653:	68 23 22 00 40       	push   $0x40002223
40000658:	e8 62 07 00 00       	call   40000dbf <printf>
4000065d:	83 c4 10             	add    $0x10,%esp
40000660:	eb 13                	jmp    40000675 <printFilesystemError+0xaf>
40000662:	83 ec 08             	sub    $0x8,%esp
40000665:	ff 75 08             	pushl  0x8(%ebp)
40000668:	68 36 22 00 40       	push   $0x40002236
4000066d:	e8 4d 07 00 00       	call   40000dbf <printf>
40000672:	83 c4 10             	add    $0x10,%esp
40000675:	83 ec 0c             	sub    $0xc,%esp
40000678:	68 3e 22 00 40       	push   $0x4000223e
4000067d:	e8 3d 07 00 00       	call   40000dbf <printf>
40000682:	83 c4 10             	add    $0x10,%esp
40000685:	c9                   	leave  
40000686:	c3                   	ret    
	...

40000688 <getLastVFSErr>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"

40000688:	55                   	push   %ebp
40000689:	89 e5                	mov    %esp,%ebp
4000068b:	83 ec 28             	sub    $0x28,%esp

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

4000068e:	c7 45 e0 0f 00 00 00 	movl   $0xf,-0x20(%ebp)
40000695:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
4000069c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006a3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006aa:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400006b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400006b8:	83 ec 0c             	sub    $0xc,%esp
400006bb:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006be:	50                   	push   %eax
400006bf:	e8 24 11 00 00       	call   400017e8 <syscall>
400006c4:	83 c4 10             	add    $0x10,%esp
}

400006c7:	8b 45 e0             	mov    -0x20(%ebp),%eax
int main(int argc, char* args[])
400006ca:	c9                   	leave  
400006cb:	c3                   	ret    

400006cc <getpmhandle>:
{
    printf("[ibin/init] Init process started... :) Thats so good!\n");
400006cc:	55                   	push   %ebp
400006cd:	89 e5                	mov    %esp,%ebp
400006cf:	83 ec 28             	sub    $0x28,%esp
    HANDLE cntrl = fmkfifo("/var/cntrl/init");

    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);

    setstdout("/dev/tty0");
400006d2:	c7 45 e0 14 00 00 00 	movl   $0x14,-0x20(%ebp)
400006d9:	8b 45 08             	mov    0x8(%ebp),%eax
400006dc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006df:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006e6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006ed:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400006f4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");
400006fb:	83 ec 0c             	sub    $0xc,%esp
400006fe:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000701:	50                   	push   %eax
40000702:	e8 e1 10 00 00       	call   400017e8 <syscall>
40000707:	83 c4 10             	add    $0x10,%esp

    printf("[init] now working on tty0\n");
4000070a:	8b 45 e0             	mov    -0x20(%ebp),%eax

4000070d:	c9                   	leave  
4000070e:	c3                   	ret    

4000070f <getstdout>:
    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
4000070f:	55                   	push   %ebp
40000710:	89 e5                	mov    %esp,%ebp
40000712:	83 ec 08             	sub    $0x8,%esp
40000715:	83 ec 0c             	sub    $0xc,%esp
40000718:	6a 00                	push   $0x0
4000071a:	e8 ad ff ff ff       	call   400006cc <getpmhandle>
4000071f:	83 c4 10             	add    $0x10,%esp
40000722:	c9                   	leave  
40000723:	c3                   	ret    

40000724 <getstdin>:
    waitResp(cntrl);
40000724:	55                   	push   %ebp
40000725:	89 e5                	mov    %esp,%ebp
40000727:	83 ec 08             	sub    $0x8,%esp
4000072a:	83 ec 0c             	sub    $0xc,%esp
4000072d:	6a 01                	push   $0x1
4000072f:	e8 98 ff ff ff       	call   400006cc <getpmhandle>
40000734:	83 c4 10             	add    $0x10,%esp
40000737:	c9                   	leave  
40000738:	c3                   	ret    

40000739 <getstderr>:

40000739:	55                   	push   %ebp
4000073a:	89 e5                	mov    %esp,%ebp
4000073c:	83 ec 08             	sub    $0x8,%esp
4000073f:	83 ec 0c             	sub    $0xc,%esp
40000742:	6a 02                	push   $0x2
40000744:	e8 83 ff ff ff       	call   400006cc <getpmhandle>
40000749:	83 c4 10             	add    $0x10,%esp
4000074c:	c9                   	leave  
4000074d:	c3                   	ret    

4000074e <fopenpmhandle>:
    printf("[init] switching to shell\n");

4000074e:	55                   	push   %ebp
4000074f:	89 e5                	mov    %esp,%ebp
40000751:	83 ec 28             	sub    $0x28,%esp
    char* testparams[] = {
        "test1",
        "test2",
        0
40000754:	8b 45 0c             	mov    0xc(%ebp),%eax
    };

    texec("/ibin/csh", 0);

40000757:	c7 45 e0 15 00 00 00 	movl   $0x15,-0x20(%ebp)
4000075e:	8b 55 08             	mov    0x8(%ebp),%edx
40000761:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000764:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000767:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000076e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000775:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    register_irq_handler(0x21, hdlrx21);

4000077c:	83 ec 0c             	sub    $0xc,%esp
4000077f:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000782:	50                   	push   %eax
40000783:	e8 60 10 00 00       	call   400017e8 <syscall>
40000788:	83 c4 10             	add    $0x10,%esp
    while(1);

4000078b:	8b 45 e0             	mov    -0x20(%ebp),%eax
    return 0;
4000078e:	c9                   	leave  
4000078f:	c3                   	ret    

40000790 <setstdout>:
}
40000790:	55                   	push   %ebp
40000791:	89 e5                	mov    %esp,%ebp
40000793:	83 ec 08             	sub    $0x8,%esp
40000796:	83 ec 08             	sub    $0x8,%esp
40000799:	ff 75 08             	pushl  0x8(%ebp)
4000079c:	6a 00                	push   $0x0
4000079e:	e8 ab ff ff ff       	call   4000074e <fopenpmhandle>
400007a3:	83 c4 10             	add    $0x10,%esp
400007a6:	c9                   	leave  
400007a7:	c3                   	ret    

400007a8 <setstdin>:
400007a8:	55                   	push   %ebp
400007a9:	89 e5                	mov    %esp,%ebp
400007ab:	83 ec 08             	sub    $0x8,%esp
400007ae:	83 ec 08             	sub    $0x8,%esp
400007b1:	ff 75 08             	pushl  0x8(%ebp)
400007b4:	6a 01                	push   $0x1
400007b6:	e8 93 ff ff ff       	call   4000074e <fopenpmhandle>
400007bb:	83 c4 10             	add    $0x10,%esp
400007be:	c9                   	leave  
400007bf:	c3                   	ret    

400007c0 <setstderr>:
400007c0:	55                   	push   %ebp
400007c1:	89 e5                	mov    %esp,%ebp
400007c3:	83 ec 08             	sub    $0x8,%esp
400007c6:	83 ec 08             	sub    $0x8,%esp
400007c9:	ff 75 08             	pushl  0x8(%ebp)
400007cc:	6a 02                	push   $0x2
400007ce:	e8 7b ff ff ff       	call   4000074e <fopenpmhandle>
400007d3:	83 c4 10             	add    $0x10,%esp
400007d6:	c9                   	leave  
400007d7:	c3                   	ret    

400007d8 <fopen>:
400007d8:	55                   	push   %ebp
400007d9:	89 e5                	mov    %esp,%ebp
400007db:	83 ec 28             	sub    $0x28,%esp
400007de:	8b 45 08             	mov    0x8(%ebp),%eax
400007e1:	c7 45 e0 0a 00 00 00 	movl   $0xa,-0x20(%ebp)
400007e8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400007eb:	8b 45 0c             	mov    0xc(%ebp),%eax
400007ee:	89 45 e8             	mov    %eax,-0x18(%ebp)
400007f1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400007f8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400007ff:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000806:	83 ec 0c             	sub    $0xc,%esp
40000809:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000080c:	50                   	push   %eax
4000080d:	e8 d6 0f 00 00       	call   400017e8 <syscall>
40000812:	83 c4 10             	add    $0x10,%esp
40000815:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000818:	c9                   	leave  
40000819:	c3                   	ret    

4000081a <fclose>:
4000081a:	55                   	push   %ebp
4000081b:	89 e5                	mov    %esp,%ebp
4000081d:	83 ec 28             	sub    $0x28,%esp
40000820:	c7 45 e0 0b 00 00 00 	movl   $0xb,-0x20(%ebp)
40000827:	8b 45 08             	mov    0x8(%ebp),%eax
4000082a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000082d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000834:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000083b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000842:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000849:	83 ec 0c             	sub    $0xc,%esp
4000084c:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000084f:	50                   	push   %eax
40000850:	e8 93 0f 00 00       	call   400017e8 <syscall>
40000855:	83 c4 10             	add    $0x10,%esp
40000858:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000085b:	c9                   	leave  
4000085c:	c3                   	ret    

4000085d <printrwerror>:
4000085d:	55                   	push   %ebp
4000085e:	89 e5                	mov    %esp,%ebp
40000860:	83 ec 08             	sub    $0x8,%esp
40000863:	83 7d 0c 02          	cmpl   $0x2,0xc(%ebp)
40000867:	75 13                	jne    4000087c <printrwerror+0x1f>
40000869:	83 ec 08             	sub    $0x8,%esp
4000086c:	ff 75 08             	pushl  0x8(%ebp)
4000086f:	68 70 22 00 40       	push   $0x40002270
40000874:	e8 46 05 00 00       	call   40000dbf <printf>
40000879:	83 c4 10             	add    $0x10,%esp
4000087c:	83 7d 0c 03          	cmpl   $0x3,0xc(%ebp)
40000880:	75 13                	jne    40000895 <printrwerror+0x38>
40000882:	83 ec 08             	sub    $0x8,%esp
40000885:	ff 75 08             	pushl  0x8(%ebp)
40000888:	68 88 22 00 40       	push   $0x40002288
4000088d:	e8 2d 05 00 00       	call   40000dbf <printf>
40000892:	83 c4 10             	add    $0x10,%esp
40000895:	83 7d 0c 04          	cmpl   $0x4,0xc(%ebp)
40000899:	75 13                	jne    400008ae <printrwerror+0x51>
4000089b:	83 ec 08             	sub    $0x8,%esp
4000089e:	ff 75 08             	pushl  0x8(%ebp)
400008a1:	68 a4 22 00 40       	push   $0x400022a4
400008a6:	e8 14 05 00 00       	call   40000dbf <printf>
400008ab:	83 c4 10             	add    $0x10,%esp
400008ae:	83 7d 0c 05          	cmpl   $0x5,0xc(%ebp)
400008b2:	75 13                	jne    400008c7 <printrwerror+0x6a>
400008b4:	83 ec 08             	sub    $0x8,%esp
400008b7:	ff 75 08             	pushl  0x8(%ebp)
400008ba:	68 d0 22 00 40       	push   $0x400022d0
400008bf:	e8 fb 04 00 00       	call   40000dbf <printf>
400008c4:	83 c4 10             	add    $0x10,%esp
400008c7:	c9                   	leave  
400008c8:	c3                   	ret    

400008c9 <frwrite>:
400008c9:	55                   	push   %ebp
400008ca:	89 e5                	mov    %esp,%ebp
400008cc:	83 ec 28             	sub    $0x28,%esp
400008cf:	8b 45 0c             	mov    0xc(%ebp),%eax
400008d2:	c7 45 e0 0c 00 00 00 	movl   $0xc,-0x20(%ebp)
400008d9:	8b 55 08             	mov    0x8(%ebp),%edx
400008dc:	89 55 e4             	mov    %edx,-0x1c(%ebp)
400008df:	89 45 e8             	mov    %eax,-0x18(%ebp)
400008e2:	8b 45 10             	mov    0x10(%ebp),%eax
400008e5:	89 45 ec             	mov    %eax,-0x14(%ebp)
400008e8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400008ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400008f6:	83 ec 0c             	sub    $0xc,%esp
400008f9:	8d 45 e0             	lea    -0x20(%ebp),%eax
400008fc:	50                   	push   %eax
400008fd:	e8 e6 0e 00 00       	call   400017e8 <syscall>
40000902:	83 c4 10             	add    $0x10,%esp
40000905:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000908:	c9                   	leave  
40000909:	c3                   	ret    

4000090a <fwrite>:
4000090a:	55                   	push   %ebp
4000090b:	89 e5                	mov    %esp,%ebp
4000090d:	83 ec 18             	sub    $0x18,%esp
40000910:	83 ec 04             	sub    $0x4,%esp
40000913:	ff 75 10             	pushl  0x10(%ebp)
40000916:	ff 75 0c             	pushl  0xc(%ebp)
40000919:	ff 75 08             	pushl  0x8(%ebp)
4000091c:	e8 a8 ff ff ff       	call   400008c9 <frwrite>
40000921:	83 c4 10             	add    $0x10,%esp
40000924:	89 45 f4             	mov    %eax,-0xc(%ebp)
40000927:	eb 1c                	jmp    40000945 <fwrite+0x3b>
40000929:	e8 db fa ff ff       	call   40000409 <yield>
4000092e:	83 ec 04             	sub    $0x4,%esp
40000931:	ff 75 10             	pushl  0x10(%ebp)
40000934:	ff 75 0c             	pushl  0xc(%ebp)
40000937:	ff 75 08             	pushl  0x8(%ebp)
4000093a:	e8 8a ff ff ff       	call   400008c9 <frwrite>
4000093f:	83 c4 10             	add    $0x10,%esp
40000942:	89 45 f4             	mov    %eax,-0xc(%ebp)
40000945:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
40000949:	74 de                	je     40000929 <fwrite+0x1f>
4000094b:	83 ec 08             	sub    $0x8,%esp
4000094e:	ff 75 f4             	pushl  -0xc(%ebp)
40000951:	ff 75 08             	pushl  0x8(%ebp)
40000954:	e8 04 ff ff ff       	call   4000085d <printrwerror>
40000959:	83 c4 10             	add    $0x10,%esp
4000095c:	8b 45 f4             	mov    -0xc(%ebp),%eax
4000095f:	c9                   	leave  
40000960:	c3                   	ret    

40000961 <frread>:
40000961:	55                   	push   %ebp
40000962:	89 e5                	mov    %esp,%ebp
40000964:	83 ec 28             	sub    $0x28,%esp
40000967:	8b 45 0c             	mov    0xc(%ebp),%eax
4000096a:	c7 45 e0 0d 00 00 00 	movl   $0xd,-0x20(%ebp)
40000971:	8b 55 08             	mov    0x8(%ebp),%edx
40000974:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000977:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000097a:	8b 45 10             	mov    0x10(%ebp),%eax
4000097d:	89 45 ec             	mov    %eax,-0x14(%ebp)
40000980:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000987:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000098e:	83 ec 0c             	sub    $0xc,%esp
40000991:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000994:	50                   	push   %eax
40000995:	e8 4e 0e 00 00       	call   400017e8 <syscall>
4000099a:	83 c4 10             	add    $0x10,%esp
4000099d:	8b 45 e0             	mov    -0x20(%ebp),%eax
400009a0:	c9                   	leave  
400009a1:	c3                   	ret    

400009a2 <fread>:
400009a2:	55                   	push   %ebp
400009a3:	89 e5                	mov    %esp,%ebp
400009a5:	83 ec 18             	sub    $0x18,%esp
400009a8:	83 ec 04             	sub    $0x4,%esp
400009ab:	ff 75 10             	pushl  0x10(%ebp)
400009ae:	ff 75 0c             	pushl  0xc(%ebp)
400009b1:	ff 75 08             	pushl  0x8(%ebp)
400009b4:	e8 a8 ff ff ff       	call   40000961 <frread>
400009b9:	83 c4 10             	add    $0x10,%esp
400009bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
400009bf:	eb 1c                	jmp    400009dd <fread+0x3b>
400009c1:	e8 43 fa ff ff       	call   40000409 <yield>
400009c6:	83 ec 04             	sub    $0x4,%esp
400009c9:	ff 75 10             	pushl  0x10(%ebp)
400009cc:	ff 75 0c             	pushl  0xc(%ebp)
400009cf:	ff 75 08             	pushl  0x8(%ebp)
400009d2:	e8 8a ff ff ff       	call   40000961 <frread>
400009d7:	83 c4 10             	add    $0x10,%esp
400009da:	89 45 f4             	mov    %eax,-0xc(%ebp)
400009dd:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
400009e1:	74 de                	je     400009c1 <fread+0x1f>
400009e3:	83 ec 08             	sub    $0x8,%esp
400009e6:	ff 75 f4             	pushl  -0xc(%ebp)
400009e9:	ff 75 08             	pushl  0x8(%ebp)
400009ec:	e8 6c fe ff ff       	call   4000085d <printrwerror>
400009f1:	83 c4 10             	add    $0x10,%esp
400009f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
400009f7:	c9                   	leave  
400009f8:	c3                   	ret    

400009f9 <fmkfifo>:
400009f9:	55                   	push   %ebp
400009fa:	89 e5                	mov    %esp,%ebp
400009fc:	83 ec 28             	sub    $0x28,%esp
400009ff:	8b 45 08             	mov    0x8(%ebp),%eax
40000a02:	c7 45 e0 0e 00 00 00 	movl   $0xe,-0x20(%ebp)
40000a09:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a0c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000a13:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000a1a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000a21:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000a28:	83 ec 0c             	sub    $0xc,%esp
40000a2b:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000a2e:	50                   	push   %eax
40000a2f:	e8 b4 0d 00 00       	call   400017e8 <syscall>
40000a34:	83 c4 10             	add    $0x10,%esp
40000a37:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000a3a:	c9                   	leave  
40000a3b:	c3                   	ret    

40000a3c <resolveHandle>:
40000a3c:	55                   	push   %ebp
40000a3d:	89 e5                	mov    %esp,%ebp
40000a3f:	83 ec 08             	sub    $0x8,%esp
40000a42:	81 7d 08 fe 0f 00 00 	cmpl   $0xffe,0x8(%ebp)
40000a49:	77 11                	ja     40000a5c <resolveHandle+0x20>
40000a4b:	83 ec 0c             	sub    $0xc,%esp
40000a4e:	ff 75 08             	pushl  0x8(%ebp)
40000a51:	e8 76 fc ff ff       	call   400006cc <getpmhandle>
40000a56:	83 c4 10             	add    $0x10,%esp
40000a59:	89 45 08             	mov    %eax,0x8(%ebp)
40000a5c:	8b 45 08             	mov    0x8(%ebp),%eax
40000a5f:	c9                   	leave  
40000a60:	c3                   	ret    

40000a61 <fgetc>:
40000a61:	55                   	push   %ebp
40000a62:	89 e5                	mov    %esp,%ebp
40000a64:	83 ec 18             	sub    $0x18,%esp
40000a67:	83 ec 0c             	sub    $0xc,%esp
40000a6a:	ff 75 08             	pushl  0x8(%ebp)
40000a6d:	e8 ca ff ff ff       	call   40000a3c <resolveHandle>
40000a72:	83 c4 10             	add    $0x10,%esp
40000a75:	89 45 08             	mov    %eax,0x8(%ebp)
40000a78:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
40000a7c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40000a80:	74 14                	je     40000a96 <fgetc+0x35>
40000a82:	83 ec 04             	sub    $0x4,%esp
40000a85:	6a 01                	push   $0x1
40000a87:	8d 45 f7             	lea    -0x9(%ebp),%eax
40000a8a:	50                   	push   %eax
40000a8b:	ff 75 08             	pushl  0x8(%ebp)
40000a8e:	e8 0f ff ff ff       	call   400009a2 <fread>
40000a93:	83 c4 10             	add    $0x10,%esp
40000a96:	8a 45 f7             	mov    -0x9(%ebp),%al
40000a99:	c9                   	leave  
40000a9a:	c3                   	ret    

40000a9b <fgets>:
40000a9b:	55                   	push   %ebp
40000a9c:	89 e5                	mov    %esp,%ebp
40000a9e:	53                   	push   %ebx
40000a9f:	83 ec 14             	sub    $0x14,%esp
40000aa2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000aa9:	eb 38                	jmp    40000ae3 <fgets+0x48>
40000aab:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000aae:	89 c3                	mov    %eax,%ebx
40000ab0:	03 5d 08             	add    0x8(%ebp),%ebx
40000ab3:	83 ec 0c             	sub    $0xc,%esp
40000ab6:	ff 75 10             	pushl  0x10(%ebp)
40000ab9:	e8 a3 ff ff ff       	call   40000a61 <fgetc>
40000abe:	83 c4 10             	add    $0x10,%esp
40000ac1:	88 03                	mov    %al,(%ebx)
40000ac3:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000ac6:	03 45 08             	add    0x8(%ebp),%eax
40000ac9:	8a 00                	mov    (%eax),%al
40000acb:	84 c0                	test   %al,%al
40000acd:	74 0c                	je     40000adb <fgets+0x40>
40000acf:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000ad2:	03 45 08             	add    0x8(%ebp),%eax
40000ad5:	8a 00                	mov    (%eax),%al
40000ad7:	84 c0                	test   %al,%al
40000ad9:	75 05                	jne    40000ae0 <fgets+0x45>
40000adb:	8b 45 08             	mov    0x8(%ebp),%eax
40000ade:	eb 18                	jmp    40000af8 <fgets+0x5d>
40000ae0:	ff 45 f4             	incl   -0xc(%ebp)
40000ae3:	8b 45 0c             	mov    0xc(%ebp),%eax
40000ae6:	48                   	dec    %eax
40000ae7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
40000aea:	7f bf                	jg     40000aab <fgets+0x10>
40000aec:	8b 45 0c             	mov    0xc(%ebp),%eax
40000aef:	03 45 08             	add    0x8(%ebp),%eax
40000af2:	c6 00 00             	movb   $0x0,(%eax)
40000af5:	8b 45 08             	mov    0x8(%ebp),%eax
40000af8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
40000afb:	c9                   	leave  
40000afc:	c3                   	ret    

40000afd <getc>:
40000afd:	55                   	push   %ebp
40000afe:	89 e5                	mov    %esp,%ebp
40000b00:	83 ec 08             	sub    $0x8,%esp
40000b03:	83 ec 0c             	sub    $0xc,%esp
40000b06:	ff 75 08             	pushl  0x8(%ebp)
40000b09:	e8 53 ff ff ff       	call   40000a61 <fgetc>
40000b0e:	83 c4 10             	add    $0x10,%esp
40000b11:	c9                   	leave  
40000b12:	c3                   	ret    

40000b13 <getchar>:
40000b13:	55                   	push   %ebp
40000b14:	89 e5                	mov    %esp,%ebp
40000b16:	83 ec 08             	sub    $0x8,%esp
40000b19:	83 ec 0c             	sub    $0xc,%esp
40000b1c:	6a 01                	push   $0x1
40000b1e:	e8 3e ff ff ff       	call   40000a61 <fgetc>
40000b23:	83 c4 10             	add    $0x10,%esp
40000b26:	c9                   	leave  
40000b27:	c3                   	ret    

40000b28 <getln>:
40000b28:	55                   	push   %ebp
40000b29:	89 e5                	mov    %esp,%ebp
40000b2b:	83 ec 18             	sub    $0x18,%esp
40000b2e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000b35:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
40000b39:	eb 5f                	jmp    40000b9a <getln+0x72>
40000b3b:	80 7d f7 0a          	cmpb   $0xa,-0x9(%ebp)
40000b3f:	75 0f                	jne    40000b50 <getln+0x28>
40000b41:	83 ec 0c             	sub    $0xc,%esp
40000b44:	6a 0a                	push   $0xa
40000b46:	e8 c0 00 00 00       	call   40000c0b <putchar>
40000b4b:	83 c4 10             	add    $0x10,%esp
40000b4e:	eb 60                	jmp    40000bb0 <getln+0x88>
40000b50:	80 7d f7 08          	cmpb   $0x8,-0x9(%ebp)
40000b54:	75 24                	jne    40000b7a <getln+0x52>
40000b56:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
40000b5a:	74 10                	je     40000b6c <getln+0x44>
40000b5c:	ff 4d f0             	decl   -0x10(%ebp)
40000b5f:	83 ec 0c             	sub    $0xc,%esp
40000b62:	6a 08                	push   $0x8
40000b64:	e8 a2 00 00 00       	call   40000c0b <putchar>
40000b69:	83 c4 10             	add    $0x10,%esp
40000b6c:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000b6f:	8b 55 08             	mov    0x8(%ebp),%edx
40000b72:	8d 04 02             	lea    (%edx,%eax,1),%eax
40000b75:	c6 00 00             	movb   $0x0,(%eax)
40000b78:	eb 20                	jmp    40000b9a <getln+0x72>
40000b7a:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000b7d:	8b 55 08             	mov    0x8(%ebp),%edx
40000b80:	01 c2                	add    %eax,%edx
40000b82:	8a 45 f7             	mov    -0x9(%ebp),%al
40000b85:	88 02                	mov    %al,(%edx)
40000b87:	0f be 45 f7          	movsbl -0x9(%ebp),%eax
40000b8b:	83 ec 0c             	sub    $0xc,%esp
40000b8e:	50                   	push   %eax
40000b8f:	e8 77 00 00 00       	call   40000c0b <putchar>
40000b94:	83 c4 10             	add    $0x10,%esp
40000b97:	ff 45 f0             	incl   -0x10(%ebp)
40000b9a:	83 ec 0c             	sub    $0xc,%esp
40000b9d:	6a 01                	push   $0x1
40000b9f:	e8 bd fe ff ff       	call   40000a61 <fgetc>
40000ba4:	83 c4 10             	add    $0x10,%esp
40000ba7:	88 45 f7             	mov    %al,-0x9(%ebp)
40000baa:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)
40000bae:	75 8b                	jne    40000b3b <getln+0x13>
40000bb0:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000bb3:	8b 55 08             	mov    0x8(%ebp),%edx
40000bb6:	8d 04 02             	lea    (%edx,%eax,1),%eax
40000bb9:	c6 00 00             	movb   $0x0,(%eax)
40000bbc:	8b 45 08             	mov    0x8(%ebp),%eax
40000bbf:	c9                   	leave  
40000bc0:	c3                   	ret    

40000bc1 <kputc>:
40000bc1:	55                   	push   %ebp
40000bc2:	89 e5                	mov    %esp,%ebp
40000bc4:	83 ec 38             	sub    $0x38,%esp
40000bc7:	8b 45 08             	mov    0x8(%ebp),%eax
40000bca:	88 45 d4             	mov    %al,-0x2c(%ebp)
40000bcd:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
40000bd1:	c7 45 e0 c9 00 00 00 	movl   $0xc9,-0x20(%ebp)
40000bd8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000bdb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000be2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000be9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000bf0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000bf7:	83 ec 0c             	sub    $0xc,%esp
40000bfa:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000bfd:	50                   	push   %eax
40000bfe:	e8 e5 0b 00 00       	call   400017e8 <syscall>
40000c03:	83 c4 10             	add    $0x10,%esp
40000c06:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000c09:	c9                   	leave  
40000c0a:	c3                   	ret    

40000c0b <putchar>:
40000c0b:	55                   	push   %ebp
40000c0c:	89 e5                	mov    %esp,%ebp
40000c0e:	83 ec 18             	sub    $0x18,%esp
40000c11:	8b 45 08             	mov    0x8(%ebp),%eax
40000c14:	88 45 f4             	mov    %al,-0xc(%ebp)
40000c17:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
40000c1b:	83 ec 08             	sub    $0x8,%esp
40000c1e:	6a 00                	push   $0x0
40000c20:	50                   	push   %eax
40000c21:	e8 26 00 00 00       	call   40000c4c <fputc>
40000c26:	83 c4 10             	add    $0x10,%esp
40000c29:	c9                   	leave  
40000c2a:	c3                   	ret    

40000c2b <putc>:
40000c2b:	55                   	push   %ebp
40000c2c:	89 e5                	mov    %esp,%ebp
40000c2e:	83 ec 18             	sub    $0x18,%esp
40000c31:	8b 45 08             	mov    0x8(%ebp),%eax
40000c34:	88 45 f4             	mov    %al,-0xc(%ebp)
40000c37:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
40000c3b:	83 ec 08             	sub    $0x8,%esp
40000c3e:	ff 75 0c             	pushl  0xc(%ebp)
40000c41:	50                   	push   %eax
40000c42:	e8 05 00 00 00       	call   40000c4c <fputc>
40000c47:	83 c4 10             	add    $0x10,%esp
40000c4a:	c9                   	leave  
40000c4b:	c3                   	ret    

40000c4c <fputc>:
40000c4c:	55                   	push   %ebp
40000c4d:	89 e5                	mov    %esp,%ebp
40000c4f:	83 ec 18             	sub    $0x18,%esp
40000c52:	8b 45 08             	mov    0x8(%ebp),%eax
40000c55:	88 45 f4             	mov    %al,-0xc(%ebp)
40000c58:	83 ec 0c             	sub    $0xc,%esp
40000c5b:	ff 75 0c             	pushl  0xc(%ebp)
40000c5e:	e8 d9 fd ff ff       	call   40000a3c <resolveHandle>
40000c63:	83 c4 10             	add    $0x10,%esp
40000c66:	89 45 0c             	mov    %eax,0xc(%ebp)
40000c69:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
40000c6d:	74 16                	je     40000c85 <fputc+0x39>
40000c6f:	83 ec 04             	sub    $0x4,%esp
40000c72:	6a 01                	push   $0x1
40000c74:	8d 45 f4             	lea    -0xc(%ebp),%eax
40000c77:	50                   	push   %eax
40000c78:	ff 75 0c             	pushl  0xc(%ebp)
40000c7b:	e8 8a fc ff ff       	call   4000090a <fwrite>
40000c80:	83 c4 10             	add    $0x10,%esp
40000c83:	eb 12                	jmp    40000c97 <fputc+0x4b>
40000c85:	8a 45 f4             	mov    -0xc(%ebp),%al
40000c88:	0f be c0             	movsbl %al,%eax
40000c8b:	83 ec 0c             	sub    $0xc,%esp
40000c8e:	50                   	push   %eax
40000c8f:	e8 2d ff ff ff       	call   40000bc1 <kputc>
40000c94:	83 c4 10             	add    $0x10,%esp
40000c97:	c9                   	leave  
40000c98:	c3                   	ret    

40000c99 <kputs>:
40000c99:	55                   	push   %ebp
40000c9a:	89 e5                	mov    %esp,%ebp
40000c9c:	83 ec 28             	sub    $0x28,%esp
40000c9f:	8b 45 08             	mov    0x8(%ebp),%eax
40000ca2:	c7 45 e0 ca 00 00 00 	movl   $0xca,-0x20(%ebp)
40000ca9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000cac:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000cb3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000cba:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000cc1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000cc8:	83 ec 0c             	sub    $0xc,%esp
40000ccb:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000cce:	50                   	push   %eax
40000ccf:	e8 14 0b 00 00       	call   400017e8 <syscall>
40000cd4:	83 c4 10             	add    $0x10,%esp
40000cd7:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000cda:	c9                   	leave  
40000cdb:	c3                   	ret    

40000cdc <puts>:
40000cdc:	55                   	push   %ebp
40000cdd:	89 e5                	mov    %esp,%ebp
40000cdf:	83 ec 08             	sub    $0x8,%esp
40000ce2:	83 ec 08             	sub    $0x8,%esp
40000ce5:	6a 00                	push   $0x0
40000ce7:	ff 75 08             	pushl  0x8(%ebp)
40000cea:	e8 05 00 00 00       	call   40000cf4 <fputs>
40000cef:	83 c4 10             	add    $0x10,%esp
40000cf2:	c9                   	leave  
40000cf3:	c3                   	ret    

40000cf4 <fputs>:
40000cf4:	55                   	push   %ebp
40000cf5:	89 e5                	mov    %esp,%ebp
40000cf7:	83 ec 08             	sub    $0x8,%esp
40000cfa:	83 ec 0c             	sub    $0xc,%esp
40000cfd:	ff 75 0c             	pushl  0xc(%ebp)
40000d00:	e8 37 fd ff ff       	call   40000a3c <resolveHandle>
40000d05:	83 c4 10             	add    $0x10,%esp
40000d08:	89 45 0c             	mov    %eax,0xc(%ebp)
40000d0b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
40000d0f:	74 22                	je     40000d33 <fputs+0x3f>
40000d11:	83 ec 0c             	sub    $0xc,%esp
40000d14:	ff 75 08             	pushl  0x8(%ebp)
40000d17:	e8 7d 03 00 00       	call   40001099 <strlen>
40000d1c:	83 c4 10             	add    $0x10,%esp
40000d1f:	83 ec 04             	sub    $0x4,%esp
40000d22:	50                   	push   %eax
40000d23:	ff 75 08             	pushl  0x8(%ebp)
40000d26:	ff 75 0c             	pushl  0xc(%ebp)
40000d29:	e8 dc fb ff ff       	call   4000090a <fwrite>
40000d2e:	83 c4 10             	add    $0x10,%esp
40000d31:	eb 0e                	jmp    40000d41 <fputs+0x4d>
40000d33:	83 ec 0c             	sub    $0xc,%esp
40000d36:	ff 75 08             	pushl  0x8(%ebp)
40000d39:	e8 5b ff ff ff       	call   40000c99 <kputs>
40000d3e:	83 c4 10             	add    $0x10,%esp
40000d41:	c9                   	leave  
40000d42:	c3                   	ret    

40000d43 <putn>:
40000d43:	55                   	push   %ebp
40000d44:	89 e5                	mov    %esp,%ebp
40000d46:	83 ec 58             	sub    $0x58,%esp
40000d49:	c7 45 ec fc 22 00 40 	movl   $0x400022fc,-0x14(%ebp)
40000d50:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000d57:	83 7d 0c 24          	cmpl   $0x24,0xc(%ebp)
40000d5b:	7e 07                	jle    40000d64 <putn+0x21>
40000d5d:	b8 00 00 00 00       	mov    $0x0,%eax
40000d62:	eb 59                	jmp    40000dbd <putn+0x7a>
40000d64:	8d 45 ab             	lea    -0x55(%ebp),%eax
40000d67:	83 c0 40             	add    $0x40,%eax
40000d6a:	89 45 f0             	mov    %eax,-0x10(%ebp)
40000d6d:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000d70:	c6 00 00             	movb   $0x0,(%eax)
40000d73:	ff 45 f4             	incl   -0xc(%ebp)
40000d76:	ff 4d f0             	decl   -0x10(%ebp)
40000d79:	8b 55 0c             	mov    0xc(%ebp),%edx
40000d7c:	8b 45 08             	mov    0x8(%ebp),%eax
40000d7f:	89 d1                	mov    %edx,%ecx
40000d81:	ba 00 00 00 00       	mov    $0x0,%edx
40000d86:	f7 f1                	div    %ecx
40000d88:	89 d0                	mov    %edx,%eax
40000d8a:	03 45 ec             	add    -0x14(%ebp),%eax
40000d8d:	8a 10                	mov    (%eax),%dl
40000d8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000d92:	88 10                	mov    %dl,(%eax)
40000d94:	8b 55 0c             	mov    0xc(%ebp),%edx
40000d97:	8b 45 08             	mov    0x8(%ebp),%eax
40000d9a:	89 d1                	mov    %edx,%ecx
40000d9c:	ba 00 00 00 00       	mov    $0x0,%edx
40000da1:	f7 f1                	div    %ecx
40000da3:	89 45 08             	mov    %eax,0x8(%ebp)
40000da6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40000daa:	75 c7                	jne    40000d73 <putn+0x30>
40000dac:	83 ec 0c             	sub    $0xc,%esp
40000daf:	ff 75 f0             	pushl  -0x10(%ebp)
40000db2:	e8 25 ff ff ff       	call   40000cdc <puts>
40000db7:	83 c4 10             	add    $0x10,%esp
40000dba:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000dbd:	c9                   	leave  
40000dbe:	c3                   	ret    

40000dbf <printf>:
40000dbf:	55                   	push   %ebp
40000dc0:	89 e5                	mov    %esp,%ebp
40000dc2:	83 ec 28             	sub    $0x28,%esp
40000dc5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000dcc:	8d 45 0c             	lea    0xc(%ebp),%eax
40000dcf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000dd2:	e9 4d 01 00 00       	jmp    40000f24 <printf+0x165>
40000dd7:	8b 45 08             	mov    0x8(%ebp),%eax
40000dda:	8a 00                	mov    (%eax),%al
40000ddc:	3c 25                	cmp    $0x25,%al
40000dde:	0f 85 26 01 00 00    	jne    40000f0a <printf+0x14b>
40000de4:	ff 45 08             	incl   0x8(%ebp)
40000de7:	8b 45 08             	mov    0x8(%ebp),%eax
40000dea:	8a 00                	mov    (%eax),%al
40000dec:	0f be c0             	movsbl %al,%eax
40000def:	83 f8 70             	cmp    $0x70,%eax
40000df2:	0f 84 90 00 00 00    	je     40000e88 <printf+0xc9>
40000df8:	83 f8 70             	cmp    $0x70,%eax
40000dfb:	7f 2e                	jg     40000e2b <printf+0x6c>
40000dfd:	83 f8 63             	cmp    $0x63,%eax
40000e00:	0f 84 a5 00 00 00    	je     40000eab <printf+0xec>
40000e06:	83 f8 63             	cmp    $0x63,%eax
40000e09:	7f 16                	jg     40000e21 <printf+0x62>
40000e0b:	85 c0                	test   %eax,%eax
40000e0d:	0f 84 20 01 00 00    	je     40000f33 <printf+0x174>
40000e13:	83 f8 25             	cmp    $0x25,%eax
40000e16:	0f 84 b2 00 00 00    	je     40000ece <printf+0x10f>
40000e1c:	e9 c0 00 00 00       	jmp    40000ee1 <printf+0x122>
40000e21:	83 f8 64             	cmp    $0x64,%eax
40000e24:	74 3c                	je     40000e62 <printf+0xa3>
40000e26:	e9 b6 00 00 00       	jmp    40000ee1 <printf+0x122>
40000e2b:	83 f8 75             	cmp    $0x75,%eax
40000e2e:	74 32                	je     40000e62 <printf+0xa3>
40000e30:	83 f8 78             	cmp    $0x78,%eax
40000e33:	74 53                	je     40000e88 <printf+0xc9>
40000e35:	83 f8 73             	cmp    $0x73,%eax
40000e38:	0f 85 a3 00 00 00    	jne    40000ee1 <printf+0x122>
40000e3e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
40000e41:	8d 50 04             	lea    0x4(%eax),%edx
40000e44:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000e47:	8b 00                	mov    (%eax),%eax
40000e49:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000e4c:	83 ec 0c             	sub    $0xc,%esp
40000e4f:	ff 75 e8             	pushl  -0x18(%ebp)
40000e52:	e8 85 fe ff ff       	call   40000cdc <puts>
40000e57:	83 c4 10             	add    $0x10,%esp
40000e5a:	01 45 f4             	add    %eax,-0xc(%ebp)
40000e5d:	e9 bf 00 00 00       	jmp    40000f21 <printf+0x162>
40000e62:	8b 45 e4             	mov    -0x1c(%ebp),%eax
40000e65:	8d 50 04             	lea    0x4(%eax),%edx
40000e68:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000e6b:	8b 00                	mov    (%eax),%eax
40000e6d:	89 45 ec             	mov    %eax,-0x14(%ebp)
40000e70:	83 ec 08             	sub    $0x8,%esp
40000e73:	6a 0a                	push   $0xa
40000e75:	ff 75 ec             	pushl  -0x14(%ebp)
40000e78:	e8 c6 fe ff ff       	call   40000d43 <putn>
40000e7d:	83 c4 10             	add    $0x10,%esp
40000e80:	01 45 f4             	add    %eax,-0xc(%ebp)
40000e83:	e9 99 00 00 00       	jmp    40000f21 <printf+0x162>
40000e88:	8b 45 e4             	mov    -0x1c(%ebp),%eax
40000e8b:	8d 50 04             	lea    0x4(%eax),%edx
40000e8e:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000e91:	8b 00                	mov    (%eax),%eax
40000e93:	89 45 ec             	mov    %eax,-0x14(%ebp)
40000e96:	83 ec 08             	sub    $0x8,%esp
40000e99:	6a 10                	push   $0x10
40000e9b:	ff 75 ec             	pushl  -0x14(%ebp)
40000e9e:	e8 a0 fe ff ff       	call   40000d43 <putn>
40000ea3:	83 c4 10             	add    $0x10,%esp
40000ea6:	01 45 f4             	add    %eax,-0xc(%ebp)
40000ea9:	eb 76                	jmp    40000f21 <printf+0x162>
40000eab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
40000eae:	8d 50 04             	lea    0x4(%eax),%edx
40000eb1:	89 55 e4             	mov    %edx,-0x1c(%ebp)
40000eb4:	8b 00                	mov    (%eax),%eax
40000eb6:	88 45 f3             	mov    %al,-0xd(%ebp)
40000eb9:	0f be 45 f3          	movsbl -0xd(%ebp),%eax
40000ebd:	83 ec 0c             	sub    $0xc,%esp
40000ec0:	50                   	push   %eax
40000ec1:	e8 45 fd ff ff       	call   40000c0b <putchar>
40000ec6:	83 c4 10             	add    $0x10,%esp
40000ec9:	01 45 f4             	add    %eax,-0xc(%ebp)
40000ecc:	eb 53                	jmp    40000f21 <printf+0x162>
40000ece:	83 ec 0c             	sub    $0xc,%esp
40000ed1:	6a 25                	push   $0x25
40000ed3:	e8 33 fd ff ff       	call   40000c0b <putchar>
40000ed8:	83 c4 10             	add    $0x10,%esp
40000edb:	01 45 f4             	add    %eax,-0xc(%ebp)
40000ede:	90                   	nop    
40000edf:	eb 40                	jmp    40000f21 <printf+0x162>
40000ee1:	83 ec 0c             	sub    $0xc,%esp
40000ee4:	6a 25                	push   $0x25
40000ee6:	e8 20 fd ff ff       	call   40000c0b <putchar>
40000eeb:	83 c4 10             	add    $0x10,%esp
40000eee:	01 45 f4             	add    %eax,-0xc(%ebp)
40000ef1:	8b 45 08             	mov    0x8(%ebp),%eax
40000ef4:	8a 00                	mov    (%eax),%al
40000ef6:	0f be c0             	movsbl %al,%eax
40000ef9:	83 ec 0c             	sub    $0xc,%esp
40000efc:	50                   	push   %eax
40000efd:	e8 09 fd ff ff       	call   40000c0b <putchar>
40000f02:	83 c4 10             	add    $0x10,%esp
40000f05:	01 45 f4             	add    %eax,-0xc(%ebp)
40000f08:	eb 17                	jmp    40000f21 <printf+0x162>
40000f0a:	8b 45 08             	mov    0x8(%ebp),%eax
40000f0d:	8a 00                	mov    (%eax),%al
40000f0f:	0f be c0             	movsbl %al,%eax
40000f12:	83 ec 0c             	sub    $0xc,%esp
40000f15:	50                   	push   %eax
40000f16:	e8 f0 fc ff ff       	call   40000c0b <putchar>
40000f1b:	83 c4 10             	add    $0x10,%esp
40000f1e:	01 45 f4             	add    %eax,-0xc(%ebp)
40000f21:	ff 45 08             	incl   0x8(%ebp)
40000f24:	8b 45 08             	mov    0x8(%ebp),%eax
40000f27:	8a 00                	mov    (%eax),%al
40000f29:	84 c0                	test   %al,%al
40000f2b:	0f 85 a6 fe ff ff    	jne    40000dd7 <printf+0x18>
40000f31:	eb 01                	jmp    40000f34 <printf+0x175>
40000f33:	90                   	nop    
40000f34:	8b 45 f4             	mov    -0xc(%ebp),%eax
40000f37:	c9                   	leave  
40000f38:	c3                   	ret    
40000f39:	00 00                	add    %al,(%eax)
	...

40000f3c <memset>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"
40000f3c:	55                   	push   %ebp
40000f3d:	89 e5                	mov    %esp,%ebp
40000f3f:	83 ec 10             	sub    $0x10,%esp

40000f42:	8b 45 08             	mov    0x8(%ebp),%eax
40000f45:	89 45 fc             	mov    %eax,-0x4(%ebp)
static void waitResp(HANDLE cntrl) {
    char resp = 0;
40000f48:	eb 0d                	jmp    40000f57 <memset+0x1b>

40000f4a:	8b 45 0c             	mov    0xc(%ebp),%eax
40000f4d:	88 c2                	mov    %al,%dl
40000f4f:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000f52:	88 10                	mov    %dl,(%eax)
40000f54:	ff 45 fc             	incl   -0x4(%ebp)
#include "stdio.h"
#include "process.h"
#include "stdlib.h"

static void waitResp(HANDLE cntrl) {
    char resp = 0;
40000f57:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
40000f5b:	0f 95 c0             	setne  %al
40000f5e:	ff 4d 10             	decl   0x10(%ebp)
40000f61:	84 c0                	test   %al,%al
40000f63:	75 e5                	jne    40000f4a <memset+0xe>

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
40000f65:	8b 45 08             	mov    0x8(%ebp),%eax
}
40000f68:	c9                   	leave  
40000f69:	c3                   	ret    

40000f6a <memcpy>:

static void hdlrx21(uint32_t irq) {
40000f6a:	55                   	push   %ebp
40000f6b:	89 e5                	mov    %esp,%ebp
40000f6d:	83 ec 10             	sub    $0x10,%esp
    printf("IRQ 0x21!\n");
40000f70:	8b 45 08             	mov    0x8(%ebp),%eax
40000f73:	89 45 f8             	mov    %eax,-0x8(%ebp)
}
40000f76:	8b 45 0c             	mov    0xc(%ebp),%eax
40000f79:	89 45 fc             	mov    %eax,-0x4(%ebp)

int main(int argc, char* args[])
40000f7c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
40000f80:	75 19                	jne    40000f9b <memcpy+0x31>
40000f82:	b8 00 00 00 00       	mov    $0x0,%eax
40000f87:	eb 24                	jmp    40000fad <memcpy+0x43>
{
    printf("[ibin/init] Init process started... :) Thats so good!\n");
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
40000f89:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000f8c:	8a 10                	mov    (%eax),%dl
40000f8e:	8b 45 f8             	mov    -0x8(%ebp),%eax
40000f91:	88 10                	mov    %dl,(%eax)
40000f93:	ff 45 f8             	incl   -0x8(%ebp)
40000f96:	ff 45 fc             	incl   -0x4(%ebp)
40000f99:	eb 01                	jmp    40000f9c <memcpy+0x32>
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
{
    printf("[ibin/init] Init process started... :) Thats so good!\n");
40000f9b:	90                   	nop    
40000f9c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
40000fa0:	0f 95 c0             	setne  %al
40000fa3:	ff 4d 10             	decl   0x10(%ebp)
40000fa6:	84 c0                	test   %al,%al
40000fa8:	75 df                	jne    40000f89 <memcpy+0x1f>
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

40000faa:	8b 45 08             	mov    0x8(%ebp),%eax
    texec("/ibin/ttytovga", 0);
40000fad:	c9                   	leave  
40000fae:	c3                   	ret    

40000faf <memcmp>:
    waitResp(cntrl);

40000faf:	55                   	push   %ebp
40000fb0:	89 e5                	mov    %esp,%ebp
40000fb2:	83 ec 10             	sub    $0x10,%esp
    setstdout("/dev/tty0");
40000fb5:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
40000fb9:	75 0a                	jne    40000fc5 <memcmp+0x16>
    setstdin ("/dev/keyboard");
40000fbb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
40000fc0:	e9 83 00 00 00       	jmp    40001048 <memcmp+0x99>
    setstderr("/dev/tty0");
40000fc5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
40000fc9:	75 07                	jne    40000fd2 <memcmp+0x23>

40000fcb:	b8 01 00 00 00       	mov    $0x1,%eax
40000fd0:	eb 76                	jmp    40001048 <memcmp+0x99>
    printf("[init] now working on tty0\n");
40000fd2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
40000fd6:	75 07                	jne    40000fdf <memcmp+0x30>

40000fd8:	b8 00 00 00 00       	mov    $0x0,%eax
40000fdd:	eb 69                	jmp    40001048 <memcmp+0x99>
    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
40000fdf:	8b 45 08             	mov    0x8(%ebp),%eax
40000fe2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    waitResp(cntrl);
40000fe5:	8b 45 0c             	mov    0xc(%ebp),%eax
40000fe8:	89 45 f8             	mov    %eax,-0x8(%ebp)

    printf("[init] switching to shell\n");
40000feb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
40000ff2:	eb 47                	jmp    4000103b <memcmp+0x8c>

40000ff4:	8b 45 fc             	mov    -0x4(%ebp),%eax
40000ff7:	8b 55 f4             	mov    -0xc(%ebp),%edx
40000ffa:	8d 04 02             	lea    (%edx,%eax,1),%eax
40000ffd:	8a 10                	mov    (%eax),%dl
40000fff:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001002:	8b 4d f8             	mov    -0x8(%ebp),%ecx
40001005:	8d 04 01             	lea    (%ecx,%eax,1),%eax
40001008:	8a 00                	mov    (%eax),%al
4000100a:	38 c2                	cmp    %al,%dl
4000100c:	74 2a                	je     40001038 <memcmp+0x89>
    char* testparams[] = {
4000100e:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001011:	8b 55 f4             	mov    -0xc(%ebp),%edx
40001014:	8d 04 02             	lea    (%edx,%eax,1),%eax
40001017:	8a 00                	mov    (%eax),%al
40001019:	ba 00 00 00 00       	mov    $0x0,%edx
4000101e:	88 c2                	mov    %al,%dl
40001020:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001023:	8b 4d f8             	mov    -0x8(%ebp),%ecx
40001026:	8d 04 01             	lea    (%ecx,%eax,1),%eax
40001029:	8a 00                	mov    (%eax),%al
4000102b:	25 ff 00 00 00       	and    $0xff,%eax
40001030:	89 d1                	mov    %edx,%ecx
40001032:	29 c1                	sub    %eax,%ecx
40001034:	89 c8                	mov    %ecx,%eax
40001036:	eb 10                	jmp    40001048 <memcmp+0x99>

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

    printf("[init] switching to shell\n");
40001038:	ff 45 fc             	incl   -0x4(%ebp)
4000103b:	8b 45 fc             	mov    -0x4(%ebp),%eax
4000103e:	3b 45 10             	cmp    0x10(%ebp),%eax
40001041:	72 b1                	jb     40000ff4 <memcmp+0x45>

    char* testparams[] = {
        "test1",
        "test2",
        0
40001043:	b8 00 00 00 00       	mov    $0x0,%eax
    };
40001048:	c9                   	leave  
40001049:	c3                   	ret    

4000104a <strcmp>:

    texec("/ibin/csh", 0);
4000104a:	55                   	push   %ebp
4000104b:	89 e5                	mov    %esp,%ebp
4000104d:	83 ec 18             	sub    $0x18,%esp

40001050:	83 ec 0c             	sub    $0xc,%esp
40001053:	ff 75 08             	pushl  0x8(%ebp)
40001056:	e8 3e 00 00 00       	call   40001099 <strlen>
4000105b:	83 c4 10             	add    $0x10,%esp
4000105e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    register_irq_handler(0x21, hdlrx21);
40001061:	83 ec 0c             	sub    $0xc,%esp
40001064:	ff 75 0c             	pushl  0xc(%ebp)
40001067:	e8 2d 00 00 00       	call   40001099 <strlen>
4000106c:	83 c4 10             	add    $0x10,%esp
4000106f:	89 45 f4             	mov    %eax,-0xc(%ebp)

40001072:	8b 55 f0             	mov    -0x10(%ebp),%edx
40001075:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001078:	39 d0                	cmp    %edx,%eax
4000107a:	7e 02                	jle    4000107e <strcmp+0x34>
4000107c:	89 d0                	mov    %edx,%eax
4000107e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while(1);

40001081:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001084:	40                   	inc    %eax
40001085:	83 ec 04             	sub    $0x4,%esp
40001088:	50                   	push   %eax
40001089:	ff 75 0c             	pushl  0xc(%ebp)
4000108c:	ff 75 08             	pushl  0x8(%ebp)
4000108f:	e8 1b ff ff ff       	call   40000faf <memcmp>
40001094:	83 c4 10             	add    $0x10,%esp
    return 0;
40001097:	c9                   	leave  
40001098:	c3                   	ret    

40001099 <strlen>:
}
40001099:	55                   	push   %ebp
4000109a:	89 e5                	mov    %esp,%ebp
4000109c:	83 ec 10             	sub    $0x10,%esp
4000109f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
400010a3:	75 07                	jne    400010ac <strlen+0x13>
400010a5:	b8 00 00 00 00       	mov    $0x0,%eax
400010aa:	eb 1b                	jmp    400010c7 <strlen+0x2e>
400010ac:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
400010b3:	eb 03                	jmp    400010b8 <strlen+0x1f>
400010b5:	ff 45 fc             	incl   -0x4(%ebp)
400010b8:	8b 45 fc             	mov    -0x4(%ebp),%eax
400010bb:	03 45 08             	add    0x8(%ebp),%eax
400010be:	8a 00                	mov    (%eax),%al
400010c0:	84 c0                	test   %al,%al
400010c2:	75 f1                	jne    400010b5 <strlen+0x1c>
400010c4:	8b 45 fc             	mov    -0x4(%ebp),%eax
400010c7:	c9                   	leave  
400010c8:	c3                   	ret    

400010c9 <strcpy>:
400010c9:	55                   	push   %ebp
400010ca:	89 e5                	mov    %esp,%ebp
400010cc:	ff 75 0c             	pushl  0xc(%ebp)
400010cf:	e8 c5 ff ff ff       	call   40001099 <strlen>
400010d4:	83 c4 04             	add    $0x4,%esp
400010d7:	40                   	inc    %eax
400010d8:	50                   	push   %eax
400010d9:	ff 75 0c             	pushl  0xc(%ebp)
400010dc:	ff 75 08             	pushl  0x8(%ebp)
400010df:	e8 86 fe ff ff       	call   40000f6a <memcpy>
400010e4:	83 c4 0c             	add    $0xc,%esp
400010e7:	8b 45 08             	mov    0x8(%ebp),%eax
400010ea:	c9                   	leave  
400010eb:	c3                   	ret    

400010ec <strclone>:
400010ec:	55                   	push   %ebp
400010ed:	89 e5                	mov    %esp,%ebp
400010ef:	83 ec 18             	sub    $0x18,%esp
400010f2:	ff 75 08             	pushl  0x8(%ebp)
400010f5:	e8 9f ff ff ff       	call   40001099 <strlen>
400010fa:	83 c4 04             	add    $0x4,%esp
400010fd:	40                   	inc    %eax
400010fe:	83 ec 0c             	sub    $0xc,%esp
40001101:	50                   	push   %eax
40001102:	e8 92 03 00 00       	call   40001499 <malloc>
40001107:	83 c4 10             	add    $0x10,%esp
4000110a:	89 45 f4             	mov    %eax,-0xc(%ebp)
4000110d:	83 ec 08             	sub    $0x8,%esp
40001110:	ff 75 08             	pushl  0x8(%ebp)
40001113:	ff 75 f4             	pushl  -0xc(%ebp)
40001116:	e8 ae ff ff ff       	call   400010c9 <strcpy>
4000111b:	83 c4 10             	add    $0x10,%esp
4000111e:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001121:	c9                   	leave  
40001122:	c3                   	ret    

40001123 <strtok>:
40001123:	55                   	push   %ebp
40001124:	89 e5                	mov    %esp,%ebp
40001126:	83 ec 08             	sub    $0x8,%esp
40001129:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
4000112d:	74 43                	je     40001172 <strtok+0x4f>
4000112f:	a1 04 32 00 40       	mov    0x40003204,%eax
40001134:	85 c0                	test   %eax,%eax
40001136:	74 11                	je     40001149 <strtok+0x26>
40001138:	a1 04 32 00 40       	mov    0x40003204,%eax
4000113d:	83 ec 0c             	sub    $0xc,%esp
40001140:	50                   	push   %eax
40001141:	e8 96 05 00 00       	call   400016dc <free>
40001146:	83 c4 10             	add    $0x10,%esp
40001149:	83 ec 0c             	sub    $0xc,%esp
4000114c:	ff 75 08             	pushl  0x8(%ebp)
4000114f:	e8 98 ff ff ff       	call   400010ec <strclone>
40001154:	83 c4 10             	add    $0x10,%esp
40001157:	a3 04 32 00 40       	mov    %eax,0x40003204
4000115c:	a1 04 32 00 40       	mov    0x40003204,%eax
40001161:	83 ec 08             	sub    $0x8,%esp
40001164:	ff 75 0c             	pushl  0xc(%ebp)
40001167:	50                   	push   %eax
40001168:	e8 17 00 00 00       	call   40001184 <strtoknc>
4000116d:	83 c4 10             	add    $0x10,%esp
40001170:	eb 10                	jmp    40001182 <strtok+0x5f>
40001172:	83 ec 08             	sub    $0x8,%esp
40001175:	ff 75 0c             	pushl  0xc(%ebp)
40001178:	6a 00                	push   $0x0
4000117a:	e8 05 00 00 00       	call   40001184 <strtoknc>
4000117f:	83 c4 10             	add    $0x10,%esp
40001182:	c9                   	leave  
40001183:	c3                   	ret    

40001184 <strtoknc>:
40001184:	55                   	push   %ebp
40001185:	89 e5                	mov    %esp,%ebp
40001187:	83 ec 10             	sub    $0x10,%esp
4000118a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40001191:	ff 75 0c             	pushl  0xc(%ebp)
40001194:	e8 00 ff ff ff       	call   40001099 <strlen>
40001199:	83 c4 04             	add    $0x4,%esp
4000119c:	89 45 f8             	mov    %eax,-0x8(%ebp)
4000119f:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
400011a3:	75 0a                	jne    400011af <strtoknc+0x2b>
400011a5:	b8 00 00 00 00       	mov    $0x0,%eax
400011aa:	e9 e0 00 00 00       	jmp    4000128f <strtoknc+0x10b>
400011af:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
400011b3:	75 13                	jne    400011c8 <strtoknc+0x44>
400011b5:	a1 00 32 00 40       	mov    0x40003200,%eax
400011ba:	85 c0                	test   %eax,%eax
400011bc:	75 0a                	jne    400011c8 <strtoknc+0x44>
400011be:	b8 00 00 00 00       	mov    $0x0,%eax
400011c3:	e9 c7 00 00 00       	jmp    4000128f <strtoknc+0x10b>
400011c8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
400011cc:	74 08                	je     400011d6 <strtoknc+0x52>
400011ce:	8b 45 08             	mov    0x8(%ebp),%eax
400011d1:	a3 00 32 00 40       	mov    %eax,0x40003200
400011d6:	a1 00 32 00 40       	mov    0x40003200,%eax
400011db:	89 45 fc             	mov    %eax,-0x4(%ebp)
400011de:	eb 01                	jmp    400011e1 <strtoknc+0x5d>
400011e0:	90                   	nop    
400011e1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400011e8:	eb 19                	jmp    40001203 <strtoknc+0x7f>
400011ea:	8b 45 fc             	mov    -0x4(%ebp),%eax
400011ed:	8a 10                	mov    (%eax),%dl
400011ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
400011f2:	03 45 0c             	add    0xc(%ebp),%eax
400011f5:	8a 00                	mov    (%eax),%al
400011f7:	38 c2                	cmp    %al,%dl
400011f9:	75 05                	jne    40001200 <strtoknc+0x7c>
400011fb:	ff 45 fc             	incl   -0x4(%ebp)
400011fe:	eb 0b                	jmp    4000120b <strtoknc+0x87>
40001200:	ff 45 f4             	incl   -0xc(%ebp)
40001203:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001206:	3b 45 f8             	cmp    -0x8(%ebp),%eax
40001209:	7c df                	jl     400011ea <strtoknc+0x66>
4000120b:	8b 45 f4             	mov    -0xc(%ebp),%eax
4000120e:	3b 45 f8             	cmp    -0x8(%ebp),%eax
40001211:	75 cd                	jne    400011e0 <strtoknc+0x5c>
40001213:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001216:	a3 00 32 00 40       	mov    %eax,0x40003200
4000121b:	a1 00 32 00 40       	mov    0x40003200,%eax
40001220:	8a 00                	mov    (%eax),%al
40001222:	84 c0                	test   %al,%al
40001224:	75 57                	jne    4000127d <strtoknc+0xf9>
40001226:	c7 05 00 32 00 40 00 	movl   $0x0,0x40003200
4000122d:	00 00 00 
40001230:	a1 00 32 00 40       	mov    0x40003200,%eax
40001235:	eb 58                	jmp    4000128f <strtoknc+0x10b>
40001237:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000123e:	eb 20                	jmp    40001260 <strtoknc+0xdc>
40001240:	a1 00 32 00 40       	mov    0x40003200,%eax
40001245:	8a 10                	mov    (%eax),%dl
40001247:	8b 45 f4             	mov    -0xc(%ebp),%eax
4000124a:	03 45 0c             	add    0xc(%ebp),%eax
4000124d:	8a 00                	mov    (%eax),%al
4000124f:	38 c2                	cmp    %al,%dl
40001251:	75 0a                	jne    4000125d <strtoknc+0xd9>
40001253:	a1 00 32 00 40       	mov    0x40003200,%eax
40001258:	c6 00 00             	movb   $0x0,(%eax)
4000125b:	eb 0b                	jmp    40001268 <strtoknc+0xe4>
4000125d:	ff 45 f4             	incl   -0xc(%ebp)
40001260:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001263:	3b 45 f8             	cmp    -0x8(%ebp),%eax
40001266:	7c d8                	jl     40001240 <strtoknc+0xbc>
40001268:	a1 00 32 00 40       	mov    0x40003200,%eax
4000126d:	40                   	inc    %eax
4000126e:	a3 00 32 00 40       	mov    %eax,0x40003200
40001273:	8b 45 f4             	mov    -0xc(%ebp),%eax
40001276:	3b 45 f8             	cmp    -0x8(%ebp),%eax
40001279:	7c 10                	jl     4000128b <strtoknc+0x107>
4000127b:	eb 01                	jmp    4000127e <strtoknc+0xfa>
4000127d:	90                   	nop    
4000127e:	a1 00 32 00 40       	mov    0x40003200,%eax
40001283:	8a 00                	mov    (%eax),%al
40001285:	84 c0                	test   %al,%al
40001287:	75 ae                	jne    40001237 <strtoknc+0xb3>
40001289:	eb 01                	jmp    4000128c <strtoknc+0x108>
4000128b:	90                   	nop    
4000128c:	8b 45 fc             	mov    -0x4(%ebp),%eax
4000128f:	c9                   	leave  
40001290:	c3                   	ret    
40001291:	00 00                	add    %al,(%eax)
	...

40001294 <remove_from_list>:
#include "process.h"
#include "stdlib.h"

static void waitResp(HANDLE cntrl) {
    char resp = 0;

40001294:	55                   	push   %ebp
40001295:	89 e5                	mov    %esp,%ebp
40001297:	83 ec 10             	sub    $0x10,%esp
    while(resp != 'K') {
4000129a:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
        fread(cntrl, &resp, sizeof(char));
400012a1:	8b 45 08             	mov    0x8(%ebp),%eax
400012a4:	8b 00                	mov    (%eax),%eax
400012a6:	89 45 fc             	mov    %eax,-0x4(%ebp)
    }
}
400012a9:	eb 38                	jmp    400012e3 <remove_from_list+0x4f>

400012ab:	8b 45 fc             	mov    -0x4(%ebp),%eax
400012ae:	3b 45 0c             	cmp    0xc(%ebp),%eax
400012b1:	75 21                	jne    400012d4 <remove_from_list+0x40>
static void hdlrx21(uint32_t irq) {
400012b3:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
400012b7:	75 0d                	jne    400012c6 <remove_from_list+0x32>
    printf("IRQ 0x21!\n");
400012b9:	8b 45 fc             	mov    -0x4(%ebp),%eax
400012bc:	8b 50 08             	mov    0x8(%eax),%edx
400012bf:	8b 45 08             	mov    0x8(%ebp),%eax
400012c2:	89 10                	mov    %edx,(%eax)
}
400012c4:	eb 23                	jmp    400012e9 <remove_from_list+0x55>

int main(int argc, char* args[])
400012c6:	8b 45 fc             	mov    -0x4(%ebp),%eax
400012c9:	8b 50 08             	mov    0x8(%eax),%edx
400012cc:	8b 45 f8             	mov    -0x8(%ebp),%eax
400012cf:	89 50 08             	mov    %edx,0x8(%eax)
{
400012d2:	eb 15                	jmp    400012e9 <remove_from_list+0x55>
    printf("[ibin/init] Init process started... :) Thats so good!\n");
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

400012d4:	8b 45 fc             	mov    -0x4(%ebp),%eax
400012d7:	89 45 f8             	mov    %eax,-0x8(%ebp)
    HANDLE cntrl = fmkfifo("/var/cntrl/init");
400012da:	8b 45 fc             	mov    -0x4(%ebp),%eax
400012dd:	8b 40 08             	mov    0x8(%eax),%eax
400012e0:	89 45 fc             	mov    %eax,-0x4(%ebp)
    char resp = 0;

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}
400012e3:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
400012e7:	75 c2                	jne    400012ab <remove_from_list+0x17>
    printf("[ibin/init] Init process started... :) Thats so good!\n");
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

    texec("/ibin/ttytovga", 0);
400012e9:	c9                   	leave  
400012ea:	c3                   	ret    

400012eb <append_to_list>:
    waitResp(cntrl);

    setstdout("/dev/tty0");
400012eb:	55                   	push   %ebp
400012ec:	89 e5                	mov    %esp,%ebp
    setstdin ("/dev/keyboard");
400012ee:	8b 45 08             	mov    0x8(%ebp),%eax
400012f1:	8b 10                	mov    (%eax),%edx
400012f3:	8b 45 0c             	mov    0xc(%ebp),%eax
400012f6:	89 50 08             	mov    %edx,0x8(%eax)
    setstderr("/dev/tty0");
400012f9:	8b 45 08             	mov    0x8(%ebp),%eax
400012fc:	8b 55 0c             	mov    0xc(%ebp),%edx
400012ff:	89 10                	mov    %edx,(%eax)

40001301:	5d                   	pop    %ebp
40001302:	c3                   	ret    

40001303 <pop_from_list>:
    printf("[init] now working on tty0\n");

40001303:	55                   	push   %ebp
40001304:	89 e5                	mov    %esp,%ebp
40001306:	83 ec 10             	sub    $0x10,%esp
    printf("[init] executing virtual file drivers\n");
40001309:	8b 45 08             	mov    0x8(%ebp),%eax
4000130c:	8b 00                	mov    (%eax),%eax
4000130e:	85 c0                	test   %eax,%eax
40001310:	75 07                	jne    40001319 <pop_from_list+0x16>
    texec("/ibin/urnd_prov", 0);
40001312:	b8 00 00 00 00       	mov    $0x0,%eax
40001317:	eb 19                	jmp    40001332 <pop_from_list+0x2f>
    waitResp(cntrl);
40001319:	8b 45 08             	mov    0x8(%ebp),%eax
4000131c:	8b 00                	mov    (%eax),%eax
4000131e:	89 45 fc             	mov    %eax,-0x4(%ebp)

40001321:	ff 75 fc             	pushl  -0x4(%ebp)
40001324:	ff 75 08             	pushl  0x8(%ebp)
40001327:	e8 68 ff ff ff       	call   40001294 <remove_from_list>
4000132c:	83 c4 08             	add    $0x8,%esp
    printf("[init] switching to shell\n");
4000132f:	8b 45 fc             	mov    -0x4(%ebp),%eax

40001332:	c9                   	leave  
40001333:	c3                   	ret    

40001334 <allocate_unused_nodes>:
    char* testparams[] = {
        "test1",
40001334:	55                   	push   %ebp
40001335:	89 e5                	mov    %esp,%ebp
40001337:	83 ec 18             	sub    $0x18,%esp
        "test2",
4000133a:	83 ec 0c             	sub    $0xc,%esp
4000133d:	6a 01                	push   $0x1
4000133f:	e8 e0 03 00 00       	call   40001724 <vmm_alloc_cont>
40001344:	83 c4 10             	add    $0x10,%esp
40001347:	89 45 f0             	mov    %eax,-0x10(%ebp)
        0
4000134a:	83 ec 04             	sub    $0x4,%esp
4000134d:	68 00 10 00 00       	push   $0x1000
40001352:	6a 00                	push   $0x0
40001354:	ff 75 f0             	pushl  -0x10(%ebp)
40001357:	e8 e0 fb ff ff       	call   40000f3c <memset>
4000135c:	83 c4 10             	add    $0x10,%esp
    };

4000135f:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
40001366:	eb 23                	jmp    4000138b <allocate_unused_nodes+0x57>
    texec("/ibin/csh", 0);
40001368:	8b 55 f4             	mov    -0xc(%ebp),%edx
4000136b:	89 d0                	mov    %edx,%eax
4000136d:	01 c0                	add    %eax,%eax
4000136f:	01 d0                	add    %edx,%eax
40001371:	c1 e0 02             	shl    $0x2,%eax
40001374:	03 45 f0             	add    -0x10(%ebp),%eax
40001377:	83 ec 08             	sub    $0x8,%esp
4000137a:	50                   	push   %eax
4000137b:	68 08 32 00 40       	push   $0x40003208
40001380:	e8 66 ff ff ff       	call   400012eb <append_to_list>
40001385:	83 c4 10             	add    $0x10,%esp
    char* testparams[] = {
        "test1",
        "test2",
        0
    };

40001388:	ff 45 f4             	incl   -0xc(%ebp)
4000138b:	81 7d f4 54 01 00 00 	cmpl   $0x154,-0xc(%ebp)
40001392:	76 d4                	jbe    40001368 <allocate_unused_nodes+0x34>
    texec("/ibin/csh", 0);

    register_irq_handler(0x21, hdlrx21);
40001394:	c9                   	leave  
40001395:	c3                   	ret    

40001396 <pop_unused_node>:

    while(1);
40001396:	55                   	push   %ebp
40001397:	89 e5                	mov    %esp,%ebp
40001399:	83 ec 18             	sub    $0x18,%esp

4000139c:	68 08 32 00 40       	push   $0x40003208
400013a1:	e8 5d ff ff ff       	call   40001303 <pop_from_list>
400013a6:	83 c4 04             	add    $0x4,%esp
400013a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return 0;
}
400013ac:	eb 18                	jmp    400013c6 <pop_unused_node+0x30>
400013ae:	e8 81 ff ff ff       	call   40001334 <allocate_unused_nodes>
400013b3:	83 ec 0c             	sub    $0xc,%esp
400013b6:	68 08 32 00 40       	push   $0x40003208
400013bb:	e8 43 ff ff ff       	call   40001303 <pop_from_list>
400013c0:	83 c4 10             	add    $0x10,%esp
400013c3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    register_irq_handler(0x21, hdlrx21);

    while(1);

    return 0;
}
400013c6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
400013ca:	74 e2                	je     400013ae <pop_unused_node+0x18>
400013cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
400013cf:	c9                   	leave  
400013d0:	c3                   	ret    

400013d1 <merge_into_frees>:
400013d1:	55                   	push   %ebp
400013d2:	89 e5                	mov    %esp,%ebp
400013d4:	83 ec 10             	sub    $0x10,%esp
400013d7:	ff 75 08             	pushl  0x8(%ebp)
400013da:	68 0c 32 00 40       	push   $0x4000320c
400013df:	e8 b0 fe ff ff       	call   40001294 <remove_from_list>
400013e4:	83 c4 08             	add    $0x8,%esp
400013e7:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
400013ee:	a1 10 32 00 40       	mov    0x40003210,%eax
400013f3:	89 45 fc             	mov    %eax,-0x4(%ebp)
400013f6:	e9 82 00 00 00       	jmp    4000147d <merge_into_frees+0xac>
400013fb:	8b 45 fc             	mov    -0x4(%ebp),%eax
400013fe:	8b 50 04             	mov    0x4(%eax),%edx
40001401:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001404:	8b 00                	mov    (%eax),%eax
40001406:	01 c2                	add    %eax,%edx
40001408:	8b 45 08             	mov    0x8(%ebp),%eax
4000140b:	8b 40 04             	mov    0x4(%eax),%eax
4000140e:	39 c2                	cmp    %eax,%edx
40001410:	75 1e                	jne    40001430 <merge_into_frees+0x5f>
40001412:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001415:	8b 50 04             	mov    0x4(%eax),%edx
40001418:	8b 45 08             	mov    0x8(%ebp),%eax
4000141b:	89 50 04             	mov    %edx,0x4(%eax)
4000141e:	ff 75 fc             	pushl  -0x4(%ebp)
40001421:	68 10 32 00 40       	push   $0x40003210
40001426:	e8 69 fe ff ff       	call   40001294 <remove_from_list>
4000142b:	83 c4 08             	add    $0x8,%esp
4000142e:	eb b7                	jmp    400013e7 <merge_into_frees+0x16>
40001430:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001433:	8b 50 04             	mov    0x4(%eax),%edx
40001436:	8b 45 08             	mov    0x8(%ebp),%eax
40001439:	8b 48 04             	mov    0x4(%eax),%ecx
4000143c:	8b 45 08             	mov    0x8(%ebp),%eax
4000143f:	8b 00                	mov    (%eax),%eax
40001441:	8d 04 01             	lea    (%ecx,%eax,1),%eax
40001444:	39 c2                	cmp    %eax,%edx
40001446:	75 26                	jne    4000146e <merge_into_frees+0x9d>
40001448:	8b 45 08             	mov    0x8(%ebp),%eax
4000144b:	8b 10                	mov    (%eax),%edx
4000144d:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001450:	8b 00                	mov    (%eax),%eax
40001452:	01 c2                	add    %eax,%edx
40001454:	8b 45 08             	mov    0x8(%ebp),%eax
40001457:	89 10                	mov    %edx,(%eax)
40001459:	ff 75 fc             	pushl  -0x4(%ebp)
4000145c:	68 10 32 00 40       	push   $0x40003210
40001461:	e8 2e fe ff ff       	call   40001294 <remove_from_list>
40001466:	83 c4 08             	add    $0x8,%esp
40001469:	e9 79 ff ff ff       	jmp    400013e7 <merge_into_frees+0x16>
4000146e:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001471:	89 45 f8             	mov    %eax,-0x8(%ebp)
40001474:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001477:	8b 40 08             	mov    0x8(%eax),%eax
4000147a:	89 45 fc             	mov    %eax,-0x4(%ebp)
4000147d:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
40001481:	0f 85 74 ff ff ff    	jne    400013fb <merge_into_frees+0x2a>
40001487:	ff 75 08             	pushl  0x8(%ebp)
4000148a:	68 10 32 00 40       	push   $0x40003210
4000148f:	e8 57 fe ff ff       	call   400012eb <append_to_list>
40001494:	83 c4 08             	add    $0x8,%esp
40001497:	c9                   	leave  
40001498:	c3                   	ret    

40001499 <malloc>:
40001499:	55                   	push   %ebp
4000149a:	89 e5                	mov    %esp,%ebp
4000149c:	83 ec 28             	sub    $0x28,%esp
4000149f:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
400014a6:	a1 10 32 00 40       	mov    0x40003210,%eax
400014ab:	89 45 dc             	mov    %eax,-0x24(%ebp)
400014ae:	eb 19                	jmp    400014c9 <malloc+0x30>
400014b0:	8b 45 dc             	mov    -0x24(%ebp),%eax
400014b3:	8b 00                	mov    (%eax),%eax
400014b5:	3b 45 08             	cmp    0x8(%ebp),%eax
400014b8:	73 17                	jae    400014d1 <malloc+0x38>
400014ba:	8b 45 dc             	mov    -0x24(%ebp),%eax
400014bd:	89 45 d8             	mov    %eax,-0x28(%ebp)
400014c0:	8b 45 dc             	mov    -0x24(%ebp),%eax
400014c3:	8b 40 08             	mov    0x8(%eax),%eax
400014c6:	89 45 dc             	mov    %eax,-0x24(%ebp)
400014c9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
400014cd:	75 e1                	jne    400014b0 <malloc+0x17>
400014cf:	eb 01                	jmp    400014d2 <malloc+0x39>
400014d1:	90                   	nop    
400014d2:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
400014d6:	0f 85 a6 00 00 00    	jne    40001582 <malloc+0xe9>
400014dc:	8b 45 08             	mov    0x8(%ebp),%eax
400014df:	c1 e8 0c             	shr    $0xc,%eax
400014e2:	89 45 e0             	mov    %eax,-0x20(%ebp)
400014e5:	8b 45 08             	mov    0x8(%ebp),%eax
400014e8:	25 ff 0f 00 00       	and    $0xfff,%eax
400014ed:	85 c0                	test   %eax,%eax
400014ef:	74 03                	je     400014f4 <malloc+0x5b>
400014f1:	ff 45 e0             	incl   -0x20(%ebp)
400014f4:	83 ec 0c             	sub    $0xc,%esp
400014f7:	ff 75 e0             	pushl  -0x20(%ebp)
400014fa:	e8 25 02 00 00       	call   40001724 <vmm_alloc_cont>
400014ff:	83 c4 10             	add    $0x10,%esp
40001502:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40001505:	e8 8c fe ff ff       	call   40001396 <pop_unused_node>
4000150a:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000150d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
40001510:	8b 45 e8             	mov    -0x18(%ebp),%eax
40001513:	89 50 04             	mov    %edx,0x4(%eax)
40001516:	8b 45 e8             	mov    -0x18(%ebp),%eax
40001519:	8b 55 08             	mov    0x8(%ebp),%edx
4000151c:	89 10                	mov    %edx,(%eax)
4000151e:	8b 45 e0             	mov    -0x20(%ebp),%eax
40001521:	c1 e0 0c             	shl    $0xc,%eax
40001524:	3b 45 08             	cmp    0x8(%ebp),%eax
40001527:	76 3e                	jbe    40001567 <malloc+0xce>
40001529:	e8 68 fe ff ff       	call   40001396 <pop_unused_node>
4000152e:	89 45 ec             	mov    %eax,-0x14(%ebp)
40001531:	8b 45 e8             	mov    -0x18(%ebp),%eax
40001534:	8b 50 04             	mov    0x4(%eax),%edx
40001537:	8b 45 e8             	mov    -0x18(%ebp),%eax
4000153a:	8b 00                	mov    (%eax),%eax
4000153c:	01 c2                	add    %eax,%edx
4000153e:	8b 45 ec             	mov    -0x14(%ebp),%eax
40001541:	89 50 04             	mov    %edx,0x4(%eax)
40001544:	8b 45 e0             	mov    -0x20(%ebp),%eax
40001547:	c1 e0 0c             	shl    $0xc,%eax
4000154a:	89 c2                	mov    %eax,%edx
4000154c:	2b 55 08             	sub    0x8(%ebp),%edx
4000154f:	8b 45 ec             	mov    -0x14(%ebp),%eax
40001552:	89 10                	mov    %edx,(%eax)
40001554:	83 ec 08             	sub    $0x8,%esp
40001557:	ff 75 ec             	pushl  -0x14(%ebp)
4000155a:	68 10 32 00 40       	push   $0x40003210
4000155f:	e8 87 fd ff ff       	call   400012eb <append_to_list>
40001564:	83 c4 10             	add    $0x10,%esp
40001567:	83 ec 08             	sub    $0x8,%esp
4000156a:	ff 75 e8             	pushl  -0x18(%ebp)
4000156d:	68 0c 32 00 40       	push   $0x4000320c
40001572:	e8 74 fd ff ff       	call   400012eb <append_to_list>
40001577:	83 c4 10             	add    $0x10,%esp
4000157a:	8b 45 e8             	mov    -0x18(%ebp),%eax
4000157d:	8b 40 04             	mov    0x4(%eax),%eax
40001580:	eb 7b                	jmp    400015fd <malloc+0x164>
40001582:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001585:	8b 00                	mov    (%eax),%eax
40001587:	2b 45 08             	sub    0x8(%ebp),%eax
4000158a:	89 45 f0             	mov    %eax,-0x10(%ebp)
4000158d:	8b 45 dc             	mov    -0x24(%ebp),%eax
40001590:	8b 55 08             	mov    0x8(%ebp),%edx
40001593:	89 10                	mov    %edx,(%eax)
40001595:	83 ec 08             	sub    $0x8,%esp
40001598:	ff 75 dc             	pushl  -0x24(%ebp)
4000159b:	68 10 32 00 40       	push   $0x40003210
400015a0:	e8 ef fc ff ff       	call   40001294 <remove_from_list>
400015a5:	83 c4 10             	add    $0x10,%esp
400015a8:	83 ec 08             	sub    $0x8,%esp
400015ab:	ff 75 dc             	pushl  -0x24(%ebp)
400015ae:	68 0c 32 00 40       	push   $0x4000320c
400015b3:	e8 33 fd ff ff       	call   400012eb <append_to_list>
400015b8:	83 c4 10             	add    $0x10,%esp
400015bb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
400015bf:	74 36                	je     400015f7 <malloc+0x15e>
400015c1:	e8 d0 fd ff ff       	call   40001396 <pop_unused_node>
400015c6:	89 45 f4             	mov    %eax,-0xc(%ebp)
400015c9:	8b 45 dc             	mov    -0x24(%ebp),%eax
400015cc:	8b 50 04             	mov    0x4(%eax),%edx
400015cf:	8b 45 dc             	mov    -0x24(%ebp),%eax
400015d2:	8b 00                	mov    (%eax),%eax
400015d4:	01 c2                	add    %eax,%edx
400015d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
400015d9:	89 50 04             	mov    %edx,0x4(%eax)
400015dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
400015df:	8b 55 f0             	mov    -0x10(%ebp),%edx
400015e2:	89 10                	mov    %edx,(%eax)
400015e4:	83 ec 08             	sub    $0x8,%esp
400015e7:	ff 75 f4             	pushl  -0xc(%ebp)
400015ea:	68 10 32 00 40       	push   $0x40003210
400015ef:	e8 f7 fc ff ff       	call   400012eb <append_to_list>
400015f4:	83 c4 10             	add    $0x10,%esp
400015f7:	8b 45 dc             	mov    -0x24(%ebp),%eax
400015fa:	8b 40 04             	mov    0x4(%eax),%eax
400015fd:	c9                   	leave  
400015fe:	c3                   	ret    

400015ff <calloc>:
400015ff:	55                   	push   %ebp
40001600:	89 e5                	mov    %esp,%ebp
40001602:	83 ec 18             	sub    $0x18,%esp
40001605:	8b 45 08             	mov    0x8(%ebp),%eax
40001608:	0f af 45 0c          	imul   0xc(%ebp),%eax
4000160c:	89 45 f0             	mov    %eax,-0x10(%ebp)
4000160f:	83 ec 0c             	sub    $0xc,%esp
40001612:	ff 75 f0             	pushl  -0x10(%ebp)
40001615:	e8 7f fe ff ff       	call   40001499 <malloc>
4000161a:	83 c4 10             	add    $0x10,%esp
4000161d:	89 45 f4             	mov    %eax,-0xc(%ebp)
40001620:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
40001624:	74 13                	je     40001639 <calloc+0x3a>
40001626:	83 ec 04             	sub    $0x4,%esp
40001629:	ff 75 f0             	pushl  -0x10(%ebp)
4000162c:	6a 00                	push   $0x0
4000162e:	ff 75 f4             	pushl  -0xc(%ebp)
40001631:	e8 06 f9 ff ff       	call   40000f3c <memset>
40001636:	83 c4 10             	add    $0x10,%esp
40001639:	8b 45 f4             	mov    -0xc(%ebp),%eax
4000163c:	c9                   	leave  
4000163d:	c3                   	ret    

4000163e <realloc>:
4000163e:	55                   	push   %ebp
4000163f:	89 e5                	mov    %esp,%ebp
40001641:	83 ec 18             	sub    $0x18,%esp
40001644:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000164b:	a1 0c 32 00 40       	mov    0x4000320c,%eax
40001650:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001653:	eb 7a                	jmp    400016cf <realloc+0x91>
40001655:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001658:	8b 50 04             	mov    0x4(%eax),%edx
4000165b:	8b 45 08             	mov    0x8(%ebp),%eax
4000165e:	39 c2                	cmp    %eax,%edx
40001660:	75 5e                	jne    400016c0 <realloc+0x82>
40001662:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
40001666:	75 15                	jne    4000167d <realloc+0x3f>
40001668:	83 ec 0c             	sub    $0xc,%esp
4000166b:	ff 75 08             	pushl  0x8(%ebp)
4000166e:	e8 69 00 00 00       	call   400016dc <free>
40001673:	83 c4 10             	add    $0x10,%esp
40001676:	b8 00 00 00 00       	mov    $0x0,%eax
4000167b:	eb 5d                	jmp    400016da <realloc+0x9c>
4000167d:	83 ec 0c             	sub    $0xc,%esp
40001680:	ff 75 0c             	pushl  0xc(%ebp)
40001683:	e8 11 fe ff ff       	call   40001499 <malloc>
40001688:	83 c4 10             	add    $0x10,%esp
4000168b:	89 45 f4             	mov    %eax,-0xc(%ebp)
4000168e:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001691:	8b 10                	mov    (%eax),%edx
40001693:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001696:	8b 40 04             	mov    0x4(%eax),%eax
40001699:	83 ec 04             	sub    $0x4,%esp
4000169c:	52                   	push   %edx
4000169d:	50                   	push   %eax
4000169e:	ff 75 f4             	pushl  -0xc(%ebp)
400016a1:	e8 c4 f8 ff ff       	call   40000f6a <memcpy>
400016a6:	83 c4 10             	add    $0x10,%esp
400016a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
400016ac:	8b 40 04             	mov    0x4(%eax),%eax
400016af:	83 ec 0c             	sub    $0xc,%esp
400016b2:	50                   	push   %eax
400016b3:	e8 24 00 00 00       	call   400016dc <free>
400016b8:	83 c4 10             	add    $0x10,%esp
400016bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
400016be:	eb 1a                	jmp    400016da <realloc+0x9c>
400016c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
400016c3:	89 45 ec             	mov    %eax,-0x14(%ebp)
400016c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
400016c9:	8b 40 08             	mov    0x8(%eax),%eax
400016cc:	89 45 f0             	mov    %eax,-0x10(%ebp)
400016cf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
400016d3:	75 80                	jne    40001655 <realloc+0x17>
400016d5:	b8 00 00 00 00       	mov    $0x0,%eax
400016da:	c9                   	leave  
400016db:	c3                   	ret    

400016dc <free>:
400016dc:	55                   	push   %ebp
400016dd:	89 e5                	mov    %esp,%ebp
400016df:	83 ec 10             	sub    $0x10,%esp
400016e2:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
400016e9:	a1 0c 32 00 40       	mov    0x4000320c,%eax
400016ee:	89 45 fc             	mov    %eax,-0x4(%ebp)
400016f1:	eb 29                	jmp    4000171c <free+0x40>
400016f3:	8b 45 fc             	mov    -0x4(%ebp),%eax
400016f6:	8b 50 04             	mov    0x4(%eax),%edx
400016f9:	8b 45 08             	mov    0x8(%ebp),%eax
400016fc:	39 c2                	cmp    %eax,%edx
400016fe:	75 0d                	jne    4000170d <free+0x31>
40001700:	ff 75 fc             	pushl  -0x4(%ebp)
40001703:	e8 c9 fc ff ff       	call   400013d1 <merge_into_frees>
40001708:	83 c4 04             	add    $0x4,%esp
4000170b:	eb 15                	jmp    40001722 <free+0x46>
4000170d:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001710:	89 45 f8             	mov    %eax,-0x8(%ebp)
40001713:	8b 45 fc             	mov    -0x4(%ebp),%eax
40001716:	8b 40 08             	mov    0x8(%eax),%eax
40001719:	89 45 fc             	mov    %eax,-0x4(%ebp)
4000171c:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
40001720:	75 d1                	jne    400016f3 <free+0x17>
40001722:	c9                   	leave  
40001723:	c3                   	ret    

40001724 <vmm_alloc_cont>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
40001724:	55                   	push   %ebp
40001725:	89 e5                	mov    %esp,%ebp
40001727:	83 ec 28             	sub    $0x28,%esp
static void waitResp(HANDLE cntrl) {
    char resp = 0;

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
4000172a:	c7 45 e0 cb 00 00 00 	movl   $0xcb,-0x20(%ebp)
40001731:	8b 45 08             	mov    0x8(%ebp),%eax
40001734:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40001737:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000173e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40001745:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000174c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
}

40001753:	83 ec 0c             	sub    $0xc,%esp
40001756:	8d 45 e0             	lea    -0x20(%ebp),%eax
40001759:	50                   	push   %eax
4000175a:	e8 89 00 00 00       	call   400017e8 <syscall>
4000175f:	83 c4 10             	add    $0x10,%esp
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
40001762:	8b 45 e0             	mov    -0x20(%ebp),%eax
}
40001765:	c9                   	leave  
40001766:	c3                   	ret    

40001767 <vmm_free>:

int main(int argc, char* args[])
40001767:	55                   	push   %ebp
40001768:	89 e5                	mov    %esp,%ebp
4000176a:	83 ec 28             	sub    $0x28,%esp
{
    printf("[ibin/init] Init process started... :) Thats so good!\n");
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
4000176d:	8b 45 08             	mov    0x8(%ebp),%eax

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);
40001770:	c7 45 e0 cc 00 00 00 	movl   $0xcc,-0x20(%ebp)
40001777:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000177a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001781:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40001788:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000178f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    setstdout("/dev/tty0");
40001796:	83 ec 0c             	sub    $0xc,%esp
40001799:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000179c:	50                   	push   %eax
4000179d:	e8 46 00 00 00       	call   400017e8 <syscall>
400017a2:	83 c4 10             	add    $0x10,%esp
    setstdin ("/dev/keyboard");
400017a5:	c9                   	leave  
400017a6:	c3                   	ret    

400017a7 <print_memstat>:
    setstderr("/dev/tty0");

400017a7:	55                   	push   %ebp
400017a8:	89 e5                	mov    %esp,%ebp
400017aa:	83 ec 28             	sub    $0x28,%esp
    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

    printf("[init] switching to shell\n");

400017ad:	c7 45 e0 cd 00 00 00 	movl   $0xcd,-0x20(%ebp)
400017b4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400017bb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400017c2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400017c9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400017d0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    char* testparams[] = {
        "test1",
400017d7:	83 ec 0c             	sub    $0xc,%esp
400017da:	8d 45 e0             	lea    -0x20(%ebp),%eax
400017dd:	50                   	push   %eax
400017de:	e8 05 00 00 00       	call   400017e8 <syscall>
400017e3:	83 c4 10             	add    $0x10,%esp
        "test2",
400017e6:	c9                   	leave  
400017e7:	c3                   	ret    

400017e8 <syscall>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
400017e8:	55                   	push   %ebp
400017e9:	89 e5                	mov    %esp,%ebp
400017eb:	57                   	push   %edi
400017ec:	56                   	push   %esi
400017ed:	53                   	push   %ebx
400017ee:	83 ec 0c             	sub    $0xc,%esp

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

400017f1:	8b 45 08             	mov    0x8(%ebp),%eax
400017f4:	8b 00                	mov    (%eax),%eax
400017f6:	89 45 ec             	mov    %eax,-0x14(%ebp)
static void hdlrx21(uint32_t irq) {
400017f9:	8b 55 08             	mov    0x8(%ebp),%edx
400017fc:	8b 5a 04             	mov    0x4(%edx),%ebx
    printf("IRQ 0x21!\n");
400017ff:	8b 55 08             	mov    0x8(%ebp),%edx
40001802:	8b 4a 08             	mov    0x8(%edx),%ecx
}
40001805:	8b 55 08             	mov    0x8(%ebp),%edx
40001808:	8b 52 0c             	mov    0xc(%edx),%edx
4000180b:	89 55 e8             	mov    %edx,-0x18(%ebp)

4000180e:	8b 75 08             	mov    0x8(%ebp),%esi
40001811:	8b 76 10             	mov    0x10(%esi),%esi
int main(int argc, char* args[])
40001814:	8b 7d 08             	mov    0x8(%ebp),%edi
40001817:	8b 7f 14             	mov    0x14(%edi),%edi
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"
4000181a:	8b 45 ec             	mov    -0x14(%ebp),%eax
4000181d:	8b 55 e8             	mov    -0x18(%ebp),%edx
40001820:	cd 30                	int    $0x30
40001822:	89 55 e8             	mov    %edx,-0x18(%ebp)
40001825:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001828:	8b 45 08             	mov    0x8(%ebp),%eax
4000182b:	89 45 ec             	mov    %eax,-0x14(%ebp)
4000182e:	8b 45 f0             	mov    -0x10(%ebp),%eax
40001831:	8b 55 ec             	mov    -0x14(%ebp),%edx
40001834:	89 02                	mov    %eax,(%edx)
40001836:	8b 45 08             	mov    0x8(%ebp),%eax
40001839:	89 58 04             	mov    %ebx,0x4(%eax)
4000183c:	8b 45 08             	mov    0x8(%ebp),%eax
4000183f:	89 48 08             	mov    %ecx,0x8(%eax)
40001842:	8b 45 08             	mov    0x8(%ebp),%eax
40001845:	8b 55 e8             	mov    -0x18(%ebp),%edx
40001848:	89 50 0c             	mov    %edx,0xc(%eax)
4000184b:	8b 45 08             	mov    0x8(%ebp),%eax
4000184e:	89 70 10             	mov    %esi,0x10(%eax)
40001851:	8b 45 08             	mov    0x8(%ebp),%eax
40001854:	89 78 14             	mov    %edi,0x14(%eax)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
{
40001857:	83 c4 0c             	add    $0xc,%esp
4000185a:	5b                   	pop    %ebx
4000185b:	5e                   	pop    %esi
4000185c:	5f                   	pop    %edi
4000185d:	5d                   	pop    %ebp
4000185e:	c3                   	ret    
