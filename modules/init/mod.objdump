
../../initrfs/ibin/init:     file format elf32-i386
../../initrfs/ibin/init
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x400004d7

Program Header:
    LOAD off    0x00001000 vaddr 0x40000000 paddr 0x40000000 align 2**12
         filesz 0x0000232a memsz 0x0000232a flags r-x
    LOAD off    0x00004000 vaddr 0x40003000 paddr 0x40003000 align 2**12
         filesz 0x00000000 memsz 0x00000214 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000012b0  40000000  40000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000001a0  40002000  40002000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rodata.str1.1 0000018a  400021a0  400021a0  000031a0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000214  40003000  40003000  00004000  2**2
                  ALLOC
  4 .stab         00004950  00000000  00000000  0000332c  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000007e  00000000  00000000  00007c7c  2**0
                  CONTENTS, READONLY
  6 .stabstr      000018d7  00000000  00000000  00007cfa  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
40000000 l    d  .text	00000000 .text
40002000 l    d  .rodata	00000000 .rodata
400021a0 l    d  .rodata.str1.1	00000000 .rodata.str1.1
40003000 l    d  .bss	00000000 .bss
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 init.c
40000000 l     F .text	00000029 waitResp
40000029 l     F .text	00000018 hdlrx21
00000000 l    df *ABS*	00000000 process.c
40003000 l     O .bss	00000200 irq_handlers
40002188 l     O .rodata	00000018 C.7.1012
40000549 l     F .text	000000c0 _handle_rpc
00000000 l    df *ABS*	00000000 stdio.c
4000060c l     F .text	00000047 resolveHandle
40000abc l     F .text	0000004a printrwerror
40000909 l     F .text	0000003f putn
00000000 l    df *ABS*	00000000 string.c
00000000 l    df *ABS*	00000000 stdlib.c
40000fb0 l     F .text	00000069 pop_unused_node
00000000 l    df *ABS*	00000000 vmmcall.c
00000000 l    df *ABS*	00000000 syscall.c
400002cd g     F .text	0000003d getExecPath
400009c0 g     F .text	00000014 putchar
40000d6d g     F .text	00000033 strcpy
40000350 g     F .text	0000003e yield
400009d4 g     F .text	000000e8 printf
40001260 g     F .text	00000050 syscall
40000bd1 g     F .text	00000042 fgets
40000bc5 g     F .text	0000000c getc
40000c9c g     F .text	00000026 memcpy
400008f7 g     F .text	00000012 puts
4000038e g     F .text	0000003d pexists
40001019 g     F .text	000000f8 malloc
40000423 g     F .text	0000003d fetch_rpc_data
40000da0 g     F .text	000000a5 strtoknc
40000263 g     F .text	0000003d changeExecPath
40003210 g     O .bss	00000004 first_free
400007a6 g     F .text	00000012 setstdout
40001171 g     F .text	00000034 calloc
40001223 g     F .text	0000003d vmm_alloc_cont
400001f1 g     F .text	0000003c exec
400004d7 g     F .text	00000072 _start
40001111 g     F .text	00000060 realloc
4000049a g     F .text	0000003d set_rpc_handler
40000e7e g     F .text	00000052 strtok
40000cc2 g     F .text	00000047 memcmp
40000b06 g     F .text	00000085 fread
40003208 g     O .bss	00000004 first_unused
4000070a g     F .text	0000003c fopen
40000c80 g     F .text	0000001c memset
40000041 g     F .text	0000013d main
400006cd g     F .text	0000003d fclose
40000bb6 g     F .text	0000000f getchar
40000c13 g     F .text	0000006c getln
40003204 g     O .bss	00000004 fr
40000690 g     F .text	0000003d favailable
400009ad g     F .text	00000013 putc
40000d09 g     F .text	00000049 strcmp
40000b8b g     F .text	0000002b fgetc
40003200 g     O .bss	00000004 sp
400002a0 g     F .text	0000002d cd
4000320c g     O .bss	00000004 first_used
40000948 g     F .text	00000065 fputc
400007f6 g     F .text	00000093 fwrite
40000794 g     F .text	00000012 setstdin
4000022d g     F .text	00000036 texec
40000e45 g     F .text	00000039 strclone
4000030a g     F .text	00000046 exit
400003cb g     F .text	00000058 register_irq_handler
40000746 g     F .text	0000003c fopenpmhandle
400011e6 g     F .text	0000003d vmm_free
40000180 g     F .text	00000071 printFilesystemError
40000d52 g     F .text	0000001b strlen
400007b8 g     F .text	0000003e getLastVFSErr
40000889 g     F .text	0000006e fputs
40000653 g     F .text	0000003d fmkfifo
40000460 g     F .text	0000003a call_rpc
40000782 g     F .text	00000012 setstderr
400011a8 g     F .text	0000003e print_memstat
40000ed0 g     F .text	000000e0 free



Disassembly of section .text:

40000000 <waitResp>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"

static void waitResp(HANDLE cntrl) {
40000000:	55                   	push   %ebp
40000001:	89 e5                	mov    %esp,%ebp
40000003:	83 ec 18             	sub    $0x18,%esp
    char resp = 0;
40000006:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)

    while(resp != 'K') {
4000000a:	eb 14                	jmp    40000020 <waitResp+0x20>
        fread(cntrl, &resp, sizeof(char));
4000000c:	83 ec 04             	sub    $0x4,%esp
4000000f:	6a 01                	push   $0x1
40000011:	8d 45 f7             	lea    -0x9(%ebp),%eax
40000014:	50                   	push   %eax
40000015:	ff 75 08             	pushl  0x8(%ebp)
40000018:	e8 e9 0a 00 00       	call   40000b06 <fread>
4000001d:	83 c4 10             	add    $0x10,%esp
#include "stdlib.h"

static void waitResp(HANDLE cntrl) {
    char resp = 0;

    while(resp != 'K') {
40000020:	8a 45 f7             	mov    -0x9(%ebp),%al
40000023:	3c 4b                	cmp    $0x4b,%al
40000025:	75 e5                	jne    4000000c <waitResp+0xc>
        fread(cntrl, &resp, sizeof(char));
    }
}
40000027:	c9                   	leave  
40000028:	c3                   	ret    

40000029 <hdlrx21>:

static void hdlrx21(uint32_t irq) {
40000029:	55                   	push   %ebp
4000002a:	89 e5                	mov    %esp,%ebp
4000002c:	83 ec 08             	sub    $0x8,%esp
    printf("IRQ 0x21!\n");
4000002f:	83 ec 0c             	sub    $0xc,%esp
40000032:	68 00 20 00 40       	push   $0x40002000
40000037:	e8 98 09 00 00       	call   400009d4 <printf>
4000003c:	83 c4 10             	add    $0x10,%esp
}
4000003f:	c9                   	leave  
40000040:	c3                   	ret    

40000041 <main>:

int main(int argc, char* args[])
{
40000041:	8d 4c 24 04          	lea    0x4(%esp),%ecx
40000045:	83 e4 f0             	and    $0xfffffff0,%esp
40000048:	ff 71 fc             	pushl  -0x4(%ecx)
4000004b:	55                   	push   %ebp
4000004c:	89 e5                	mov    %esp,%ebp
4000004e:	51                   	push   %ecx
4000004f:	83 ec 14             	sub    $0x14,%esp
    printf("[ibin/init] initalizing...\n");
40000052:	83 ec 0c             	sub    $0xc,%esp
40000055:	68 0b 20 00 40       	push   $0x4000200b
4000005a:	e8 75 09 00 00       	call   400009d4 <printf>
4000005f:	83 c4 10             	add    $0x10,%esp

    HANDLE cntrl = fmkfifo("/var/cntrl/init");
40000062:	83 ec 0c             	sub    $0xc,%esp
40000065:	68 27 20 00 40       	push   $0x40002027
4000006a:	e8 e4 05 00 00       	call   40000653 <fmkfifo>
4000006f:	83 c4 10             	add    $0x10,%esp
40000072:	89 45 f4             	mov    %eax,-0xc(%ebp)

    printf("[init] starting kbc driver\n");
40000075:	83 ec 0c             	sub    $0xc,%esp
40000078:	68 37 20 00 40       	push   $0x40002037
4000007d:	e8 52 09 00 00       	call   400009d4 <printf>
40000082:	83 c4 10             	add    $0x10,%esp
    texec("/ibin/drivers/kbc", 0);
40000085:	83 ec 08             	sub    $0x8,%esp
40000088:	6a 00                	push   $0x0
4000008a:	68 53 20 00 40       	push   $0x40002053
4000008f:	e8 99 01 00 00       	call   4000022d <texec>
40000094:	83 c4 10             	add    $0x10,%esp
    waitResp(cntrl);
40000097:	83 ec 0c             	sub    $0xc,%esp
4000009a:	ff 75 f4             	pushl  -0xc(%ebp)
4000009d:	e8 5e ff ff ff       	call   40000000 <waitResp>
400000a2:	83 c4 10             	add    $0x10,%esp

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
400000a5:	83 ec 0c             	sub    $0xc,%esp
400000a8:	68 68 20 00 40       	push   $0x40002068
400000ad:	e8 22 09 00 00       	call   400009d4 <printf>
400000b2:	83 c4 10             	add    $0x10,%esp

    texec("/ibin/ttytovga", 0);
400000b5:	83 ec 08             	sub    $0x8,%esp
400000b8:	6a 00                	push   $0x0
400000ba:	68 c4 20 00 40       	push   $0x400020c4
400000bf:	e8 69 01 00 00       	call   4000022d <texec>
400000c4:	83 c4 10             	add    $0x10,%esp
    waitResp(cntrl);
400000c7:	83 ec 0c             	sub    $0xc,%esp
400000ca:	ff 75 f4             	pushl  -0xc(%ebp)
400000cd:	e8 2e ff ff ff       	call   40000000 <waitResp>
400000d2:	83 c4 10             	add    $0x10,%esp

    setstdout("/dev/tty0");
400000d5:	83 ec 0c             	sub    $0xc,%esp
400000d8:	68 d3 20 00 40       	push   $0x400020d3
400000dd:	e8 c4 06 00 00       	call   400007a6 <setstdout>
400000e2:	83 c4 10             	add    $0x10,%esp
    setstdin ("/dev/keyboard");
400000e5:	83 ec 0c             	sub    $0xc,%esp
400000e8:	68 dd 20 00 40       	push   $0x400020dd
400000ed:	e8 a2 06 00 00       	call   40000794 <setstdin>
400000f2:	83 c4 10             	add    $0x10,%esp
    setstderr("/dev/tty0");
400000f5:	83 ec 0c             	sub    $0xc,%esp
400000f8:	68 d3 20 00 40       	push   $0x400020d3
400000fd:	e8 80 06 00 00       	call   40000782 <setstderr>
40000102:	83 c4 10             	add    $0x10,%esp

    printf("[init] now working on tty0\n");
40000105:	83 ec 0c             	sub    $0xc,%esp
40000108:	68 eb 20 00 40       	push   $0x400020eb
4000010d:	e8 c2 08 00 00       	call   400009d4 <printf>
40000112:	83 c4 10             	add    $0x10,%esp

    printf("[init] executing virtual file drivers\n");
40000115:	83 ec 0c             	sub    $0xc,%esp
40000118:	68 08 21 00 40       	push   $0x40002108
4000011d:	e8 b2 08 00 00       	call   400009d4 <printf>
40000122:	83 c4 10             	add    $0x10,%esp
    texec("/ibin/urnd_prov", 0);
40000125:	83 ec 08             	sub    $0x8,%esp
40000128:	6a 00                	push   $0x0
4000012a:	68 2f 21 00 40       	push   $0x4000212f
4000012f:	e8 f9 00 00 00       	call   4000022d <texec>
40000134:	83 c4 10             	add    $0x10,%esp
    waitResp(cntrl);
40000137:	83 ec 0c             	sub    $0xc,%esp
4000013a:	ff 75 f4             	pushl  -0xc(%ebp)
4000013d:	e8 be fe ff ff       	call   40000000 <waitResp>
40000142:	83 c4 10             	add    $0x10,%esp

    printf("[init] switching to shell\n");
40000145:	83 ec 0c             	sub    $0xc,%esp
40000148:	68 3f 21 00 40       	push   $0x4000213f
4000014d:	e8 82 08 00 00       	call   400009d4 <printf>
40000152:	83 c4 10             	add    $0x10,%esp

    char* testparams[] = {
        "test1",
        "test2",
        0
    };
40000155:	c7 45 e8 5a 21 00 40 	movl   $0x4000215a,-0x18(%ebp)
4000015c:	c7 45 ec 60 21 00 40 	movl   $0x40002160,-0x14(%ebp)
40000163:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)

    texec("/ibin/csh", 0);
4000016a:	83 ec 08             	sub    $0x8,%esp
4000016d:	6a 00                	push   $0x0
4000016f:	68 66 21 00 40       	push   $0x40002166
40000174:	e8 b4 00 00 00       	call   4000022d <texec>
40000179:	83 c4 10             	add    $0x10,%esp

    //register_irq_handler(0x21, hdlrx21);

    while(1);
4000017c:	eb fe                	jmp    4000017c <main+0x13b>
	...

40000180 <printFilesystemError>:
40000180:	55                   	push   %ebp
40000181:	89 e5                	mov    %esp,%ebp
40000183:	83 ec 08             	sub    $0x8,%esp
40000186:	8b 55 0c             	mov    0xc(%ebp),%edx
40000189:	8b 45 08             	mov    0x8(%ebp),%eax
4000018c:	83 fa 05             	cmp    $0x5,%edx
4000018f:	77 43                	ja     400001d4 <printFilesystemError+0x54>
40000191:	ff 24 95 70 21 00 40 	jmp    *0x40002170(,%edx,4)
40000198:	52                   	push   %edx
40000199:	52                   	push   %edx
4000019a:	50                   	push   %eax
4000019b:	68 a0 21 00 40       	push   $0x400021a0
400001a0:	eb 3a                	jmp    400001dc <printFilesystemError+0x5c>
400001a2:	51                   	push   %ecx
400001a3:	51                   	push   %ecx
400001a4:	50                   	push   %eax
400001a5:	68 b2 21 00 40       	push   $0x400021b2
400001aa:	eb 30                	jmp    400001dc <printFilesystemError+0x5c>
400001ac:	52                   	push   %edx
400001ad:	52                   	push   %edx
400001ae:	50                   	push   %eax
400001af:	68 d1 21 00 40       	push   $0x400021d1
400001b4:	eb 26                	jmp    400001dc <printFilesystemError+0x5c>
400001b6:	51                   	push   %ecx
400001b7:	51                   	push   %ecx
400001b8:	50                   	push   %eax
400001b9:	68 fb 21 00 40       	push   $0x400021fb
400001be:	eb 1c                	jmp    400001dc <printFilesystemError+0x5c>
400001c0:	52                   	push   %edx
400001c1:	52                   	push   %edx
400001c2:	50                   	push   %eax
400001c3:	68 10 22 00 40       	push   $0x40002210
400001c8:	eb 12                	jmp    400001dc <printFilesystemError+0x5c>
400001ca:	51                   	push   %ecx
400001cb:	51                   	push   %ecx
400001cc:	50                   	push   %eax
400001cd:	68 4b 22 00 40       	push   $0x4000224b
400001d2:	eb 08                	jmp    400001dc <printFilesystemError+0x5c>
400001d4:	52                   	push   %edx
400001d5:	52                   	push   %edx
400001d6:	50                   	push   %eax
400001d7:	68 5e 22 00 40       	push   $0x4000225e
400001dc:	e8 f3 07 00 00       	call   400009d4 <printf>
400001e1:	c7 45 08 7b 22 00 40 	movl   $0x4000227b,0x8(%ebp)
400001e8:	83 c4 10             	add    $0x10,%esp
400001eb:	c9                   	leave  
400001ec:	e9 e3 07 00 00       	jmp    400009d4 <printf>

400001f1 <exec>:
400001f1:	55                   	push   %ebp
400001f2:	89 e5                	mov    %esp,%ebp
400001f4:	83 ec 34             	sub    $0x34,%esp
400001f7:	8b 45 08             	mov    0x8(%ebp),%eax
400001fa:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%ebp)
40000201:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000204:	8b 45 0c             	mov    0xc(%ebp),%eax
40000207:	89 45 e8             	mov    %eax,-0x18(%ebp)
4000020a:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000020d:	50                   	push   %eax
4000020e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000215:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000021c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000223:	e8 38 10 00 00       	call   40001260 <syscall>
40000228:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000022b:	c9                   	leave  
4000022c:	c3                   	ret    

4000022d <texec>:
4000022d:	55                   	push   %ebp
4000022e:	89 e5                	mov    %esp,%ebp
40000230:	56                   	push   %esi
40000231:	53                   	push   %ebx
40000232:	53                   	push   %ebx
40000233:	53                   	push   %ebx
40000234:	8b 75 08             	mov    0x8(%ebp),%esi
40000237:	ff 75 0c             	pushl  0xc(%ebp)
4000023a:	56                   	push   %esi
4000023b:	e8 b1 ff ff ff       	call   400001f1 <exec>
40000240:	83 c4 10             	add    $0x10,%esp
40000243:	89 c3                	mov    %eax,%ebx
40000245:	85 c0                	test   %eax,%eax
40000247:	75 11                	jne    4000025a <texec+0x2d>
40000249:	e8 6a 05 00 00       	call   400007b8 <getLastVFSErr>
4000024e:	51                   	push   %ecx
4000024f:	51                   	push   %ecx
40000250:	50                   	push   %eax
40000251:	56                   	push   %esi
40000252:	e8 29 ff ff ff       	call   40000180 <printFilesystemError>
40000257:	83 c4 10             	add    $0x10,%esp
4000025a:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000025d:	89 d8                	mov    %ebx,%eax
4000025f:	5b                   	pop    %ebx
40000260:	5e                   	pop    %esi
40000261:	5d                   	pop    %ebp
40000262:	c3                   	ret    

40000263 <changeExecPath>:
40000263:	55                   	push   %ebp
40000264:	89 e5                	mov    %esp,%ebp
40000266:	83 ec 34             	sub    $0x34,%esp
40000269:	8b 45 08             	mov    0x8(%ebp),%eax
4000026c:	c7 45 e0 07 00 00 00 	movl   $0x7,-0x20(%ebp)
40000273:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000276:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000279:	50                   	push   %eax
4000027a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000281:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000288:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000028f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000296:	e8 c5 0f 00 00       	call   40001260 <syscall>
4000029b:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000029e:	c9                   	leave  
4000029f:	c3                   	ret    

400002a0 <cd>:
400002a0:	55                   	push   %ebp
400002a1:	89 e5                	mov    %esp,%ebp
400002a3:	53                   	push   %ebx
400002a4:	83 ec 10             	sub    $0x10,%esp
400002a7:	8b 5d 08             	mov    0x8(%ebp),%ebx
400002aa:	53                   	push   %ebx
400002ab:	e8 b3 ff ff ff       	call   40000263 <changeExecPath>
400002b0:	83 c4 10             	add    $0x10,%esp
400002b3:	85 c0                	test   %eax,%eax
400002b5:	75 11                	jne    400002c8 <cd+0x28>
400002b7:	e8 fc 04 00 00       	call   400007b8 <getLastVFSErr>
400002bc:	52                   	push   %edx
400002bd:	52                   	push   %edx
400002be:	50                   	push   %eax
400002bf:	53                   	push   %ebx
400002c0:	e8 bb fe ff ff       	call   40000180 <printFilesystemError>
400002c5:	83 c4 10             	add    $0x10,%esp
400002c8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
400002cb:	c9                   	leave  
400002cc:	c3                   	ret    

400002cd <getExecPath>:
400002cd:	55                   	push   %ebp
400002ce:	89 e5                	mov    %esp,%ebp
400002d0:	83 ec 34             	sub    $0x34,%esp
400002d3:	8b 45 08             	mov    0x8(%ebp),%eax
400002d6:	c7 45 e0 06 00 00 00 	movl   $0x6,-0x20(%ebp)
400002dd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400002e0:	8d 45 e0             	lea    -0x20(%ebp),%eax
400002e3:	50                   	push   %eax
400002e4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400002eb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400002f2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400002f9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000300:	e8 5b 0f 00 00       	call   40001260 <syscall>
40000305:	83 c4 10             	add    $0x10,%esp
40000308:	c9                   	leave  
40000309:	c3                   	ret    

4000030a <exit>:
4000030a:	55                   	push   %ebp
4000030b:	89 e5                	mov    %esp,%ebp
4000030d:	83 ec 34             	sub    $0x34,%esp
40000310:	8b 45 08             	mov    0x8(%ebp),%eax
40000313:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
4000031a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000031d:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000320:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000327:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000032e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000335:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000033c:	50                   	push   %eax
4000033d:	e8 1e 0f 00 00       	call   40001260 <syscall>
40000342:	c7 04 24 66 22 00 40 	movl   $0x40002266,(%esp)
40000349:	e8 86 06 00 00       	call   400009d4 <printf>
4000034e:	eb f2                	jmp    40000342 <exit+0x38>

40000350 <yield>:

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000350:	55                   	push   %ebp
40000351:	89 e5                	mov    %esp,%ebp
40000353:	83 ec 34             	sub    $0x34,%esp
40000356:	8d 45 e0             	lea    -0x20(%ebp),%eax
}
40000359:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%ebp)
40000360:	50                   	push   %eax
}
40000361:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000368:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000036f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000376:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000037d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000384:	e8 d7 0e 00 00       	call   40001260 <syscall>
40000389:	83 c4 10             	add    $0x10,%esp
4000038c:	c9                   	leave  
4000038d:	c3                   	ret    

4000038e <pexists>:

int main(int argc, char* args[])
{
    printf("[ibin/init] initalizing...\n");

    HANDLE cntrl = fmkfifo("/var/cntrl/init");
4000038e:	55                   	push   %ebp
4000038f:	89 e5                	mov    %esp,%ebp
40000391:	83 ec 34             	sub    $0x34,%esp
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    texec("/ibin/ttytovga", 0);
40000394:	8b 45 08             	mov    0x8(%ebp),%eax
40000397:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
4000039e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    waitResp(cntrl);

400003a1:	8d 45 e0             	lea    -0x20(%ebp),%eax
400003a4:	50                   	push   %eax
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    texec("/ibin/ttytovga", 0);
400003a5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400003ac:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400003b3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400003ba:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    waitResp(cntrl);

400003c1:	e8 9a 0e 00 00       	call   40001260 <syscall>
    setstdout("/dev/tty0");
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");
400003c6:	8b 45 e0             	mov    -0x20(%ebp),%eax
400003c9:	c9                   	leave  
400003ca:	c3                   	ret    

400003cb <register_irq_handler>:
400003cb:	55                   	push   %ebp
400003cc:	89 e5                	mov    %esp,%ebp
400003ce:	53                   	push   %ebx
400003cf:	83 ec 30             	sub    $0x30,%esp
    //register_irq_handler(0x21, hdlrx21);

    while(1);

    return 0;
}
400003d2:	8d 45 e0             	lea    -0x20(%ebp),%eax
400003d5:	8b 5d 08             	mov    0x8(%ebp),%ebx
    //register_irq_handler(0x21, hdlrx21);

    while(1);

    return 0;
}
400003d8:	50                   	push   %eax
    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);

400003d9:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%ebp)
400003e0:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
400003e3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400003ea:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400003f1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400003f8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    return 0;
}
400003ff:	e8 5c 0e 00 00       	call   40001260 <syscall>
40000404:	83 c4 10             	add    $0x10,%esp
40000407:	31 c0                	xor    %eax,%eax
40000409:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
4000040d:	74 0f                	je     4000041e <register_irq_handler+0x53>
4000040f:	8b 45 0c             	mov    0xc(%ebp),%eax
40000412:	89 04 9d 00 30 00 40 	mov    %eax,0x40003000(,%ebx,4)
40000419:	b8 01 00 00 00       	mov    $0x1,%eax
4000041e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
40000421:	c9                   	leave  
40000422:	c3                   	ret    

40000423 <fetch_rpc_data>:
    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);

    setstdout("/dev/tty0");
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");
40000423:	55                   	push   %ebp
40000424:	89 e5                	mov    %esp,%ebp
40000426:	83 ec 34             	sub    $0x34,%esp

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

    printf("[init] switching to shell\n");
40000429:	8b 45 08             	mov    0x8(%ebp),%eax
4000042c:	c7 45 e0 21 00 00 00 	movl   $0x21,-0x20(%ebp)
40000433:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    char* testparams[] = {
40000436:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000439:	50                   	push   %eax

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

    printf("[init] switching to shell\n");
4000043a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000441:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000448:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000044f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    char* testparams[] = {
40000456:	e8 05 0e 00 00       	call   40001260 <syscall>
4000045b:	83 c4 10             	add    $0x10,%esp
        "test1",
4000045e:	c9                   	leave  
4000045f:	c3                   	ret    

40000460 <call_rpc>:
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
{
    printf("[ibin/init] initalizing...\n");
40000460:	55                   	push   %ebp
40000461:	89 e5                	mov    %esp,%ebp
40000463:	83 ec 34             	sub    $0x34,%esp

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
40000466:	8b 45 08             	mov    0x8(%ebp),%eax
40000469:	c7 45 e0 1f 00 00 00 	movl   $0x1f,-0x20(%ebp)
40000470:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000473:	8b 45 0c             	mov    0xc(%ebp),%eax
40000476:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000479:	8b 45 10             	mov    0x10(%ebp),%eax
4000047c:	89 45 ec             	mov    %eax,-0x14(%ebp)
4000047f:	8b 45 14             	mov    0x14(%ebp),%eax
40000482:	89 45 f0             	mov    %eax,-0x10(%ebp)

    texec("/ibin/ttytovga", 0);
40000485:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000488:	50                   	push   %eax

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
40000489:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    texec("/ibin/ttytovga", 0);
40000490:	e8 cb 0d 00 00       	call   40001260 <syscall>
    waitResp(cntrl);

    setstdout("/dev/tty0");
40000495:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000498:	c9                   	leave  
40000499:	c3                   	ret    

4000049a <set_rpc_handler>:
4000049a:	55                   	push   %ebp
4000049b:	89 e5                	mov    %esp,%ebp
4000049d:	57                   	push   %edi
4000049e:	56                   	push   %esi
4000049f:	be 88 21 00 40       	mov    $0x40002188,%esi
400004a4:	83 ec 24             	sub    $0x24,%esp
400004a7:	8d 7d e0             	lea    -0x20(%ebp),%edi
400004aa:	68 00 02 00 00       	push   $0x200
400004af:	6a 00                	push   $0x0
400004b1:	68 00 30 00 40       	push   $0x40003000
400004b6:	e8 c5 07 00 00       	call   40000c80 <memset>
400004bb:	b9 06 00 00 00       	mov    $0x6,%ecx
400004c0:	8d 45 e0             	lea    -0x20(%ebp),%eax
400004c3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
400004c5:	89 04 24             	mov    %eax,(%esp)
400004c8:	e8 93 0d 00 00       	call   40001260 <syscall>
400004cd:	83 c4 10             	add    $0x10,%esp
400004d0:	8d 65 f8             	lea    -0x8(%ebp),%esp
400004d3:	5e                   	pop    %esi
400004d4:	5f                   	pop    %edi
400004d5:	5d                   	pop    %ebp
400004d6:	c3                   	ret    

400004d7 <_start>:

    setstdout("/dev/tty0");
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");

    printf("[init] now working on tty0\n");
400004d7:	55                   	push   %ebp
400004d8:	89 e5                	mov    %esp,%ebp
400004da:	56                   	push   %esi
400004db:	53                   	push   %ebx

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

400004dc:	31 db                	xor    %ebx,%ebx

    setstdout("/dev/tty0");
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");

    printf("[init] now working on tty0\n");
400004de:	83 ec 2c             	sub    $0x2c,%esp
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
}

400004e1:	8d 45 e0             	lea    -0x20(%ebp),%eax
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400004e4:	c7 45 e0 04 00 00 00 	movl   $0x4,-0x20(%ebp)
400004eb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
}

400004f2:	50                   	push   %eax
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400004f3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400004fa:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000501:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000508:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
}

4000050f:	e8 4c 0d 00 00       	call   40001260 <syscall>
int main(int argc, char* args[])
{
40000514:	8b 75 e0             	mov    -0x20(%ebp),%esi
    printf("[init] now working on tty0\n");

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

40000517:	83 c4 10             	add    $0x10,%esp
4000051a:	85 f6                	test   %esi,%esi
4000051c:	75 05                	jne    40000523 <_start+0x4c>
4000051e:	89 f3                	mov    %esi,%ebx
40000520:	eb 07                	jmp    40000529 <_start+0x52>
    printf("[init] switching to shell\n");

40000522:	43                   	inc    %ebx

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

    printf("[init] switching to shell\n");
40000523:	83 3c 9e 00          	cmpl   $0x0,(%esi,%ebx,4)
40000527:	75 f9                	jne    40000522 <_start+0x4b>

    char* testparams[] = {
        "test1",
        "test2",
        0
40000529:	e8 6c ff ff ff       	call   4000049a <set_rpc_handler>
    };

4000052e:	51                   	push   %ecx
4000052f:	51                   	push   %ecx
40000530:	56                   	push   %esi
40000531:	53                   	push   %ebx
40000532:	e8 0a fb ff ff       	call   40000041 <main>
    texec("/ibin/csh", 0);

40000537:	89 04 24             	mov    %eax,(%esp)
4000053a:	e8 cb fd ff ff       	call   4000030a <exit>
4000053f:	83 c4 10             	add    $0x10,%esp
    //register_irq_handler(0x21, hdlrx21);
40000542:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000545:	5b                   	pop    %ebx
40000546:	5e                   	pop    %esi
40000547:	5d                   	pop    %ebp
40000548:	c3                   	ret    

40000549 <_handle_rpc>:
40000549:	55                   	push   %ebp
4000054a:	89 e5                	mov    %esp,%ebp
4000054c:	56                   	push   %esi
4000054d:	53                   	push   %ebx
4000054e:	83 ec 2c             	sub    $0x2c,%esp
40000551:	ff 75 10             	pushl  0x10(%ebp)
40000554:	8b 75 0c             	mov    0xc(%ebp),%esi
40000557:	e8 bd 0a 00 00       	call   40001019 <malloc>
4000055c:	89 04 24             	mov    %eax,(%esp)
4000055f:	89 c3                	mov    %eax,%ebx
40000561:	e8 bd fe ff ff       	call   40000423 <fetch_rpc_data>
40000566:	83 c4 10             	add    $0x10,%esp
40000569:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
4000056d:	75 4b                	jne    400005ba <_handle_rpc+0x71>
4000056f:	8b 04 b5 00 30 00 40 	mov    0x40003000(,%esi,4),%eax
40000576:	85 c0                	test   %eax,%eax
40000578:	74 40                	je     400005ba <_handle_rpc+0x71>
4000057a:	83 ec 0c             	sub    $0xc,%esp
4000057d:	56                   	push   %esi
4000057e:	ff d0                	call   *%eax
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
40000580:	8d 45 e0             	lea    -0x20(%ebp),%eax

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

40000583:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
4000058a:	89 04 24             	mov    %eax,(%esp)

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

4000058d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000594:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000059b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400005a2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400005a9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400005b0:	e8 ab 0c 00 00       	call   40001260 <syscall>
400005b5:	83 c4 10             	add    $0x10,%esp
400005b8:	eb fe                	jmp    400005b8 <_handle_rpc+0x6f>
400005ba:	83 ec 0c             	sub    $0xc,%esp
400005bd:	68 6d 22 00 40       	push   $0x4000226d
400005c2:	e8 0d 04 00 00       	call   400009d4 <printf>
400005c7:	89 1c 24             	mov    %ebx,(%esp)
400005ca:	e8 01 09 00 00       	call   40000ed0 <free>
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400005cf:	8d 45 e0             	lea    -0x20(%ebp),%eax

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

400005d2:	c7 45 e0 1e 00 00 00 	movl   $0x1e,-0x20(%ebp)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400005d9:	89 04 24             	mov    %eax,(%esp)

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

400005dc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400005e3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400005ea:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400005f1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400005f8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400005ff:	e8 5c 0c 00 00       	call   40001260 <syscall>
40000604:	83 c4 10             	add    $0x10,%esp
40000607:	eb fe                	jmp    40000607 <_handle_rpc+0xbe>
40000609:	00 00                	add    %al,(%eax)
	...

4000060c <resolveHandle>:
    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);

    setstdout("/dev/tty0");
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");
4000060c:	55                   	push   %ebp
4000060d:	89 e5                	mov    %esp,%ebp
4000060f:	83 ec 28             	sub    $0x28,%esp

40000612:	3d fe 0f 00 00       	cmp    $0xffe,%eax
40000617:	77 38                	ja     40000651 <resolveHandle+0x45>
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    texec("/ibin/ttytovga", 0);
40000619:	83 ec 0c             	sub    $0xc,%esp

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
4000061c:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    texec("/ibin/ttytovga", 0);
4000061f:	8d 45 e0             	lea    -0x20(%ebp),%eax

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
40000622:	c7 45 e0 14 00 00 00 	movl   $0x14,-0x20(%ebp)

    texec("/ibin/ttytovga", 0);
40000629:	50                   	push   %eax

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
4000062a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000631:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000638:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000063f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    texec("/ibin/ttytovga", 0);
40000646:	e8 15 0c 00 00       	call   40001260 <syscall>
    waitResp(cntrl);

4000064b:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000064e:	83 c4 10             	add    $0x10,%esp
    setstderr("/dev/tty0");

    printf("[init] now working on tty0\n");

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
40000651:	c9                   	leave  
40000652:	c3                   	ret    

40000653 <fmkfifo>:
40000653:	55                   	push   %ebp
40000654:	89 e5                	mov    %esp,%ebp
40000656:	83 ec 34             	sub    $0x34,%esp
40000659:	8b 45 08             	mov    0x8(%ebp),%eax
4000065c:	c7 45 e0 0e 00 00 00 	movl   $0xe,-0x20(%ebp)
40000663:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000666:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000669:	50                   	push   %eax
4000066a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000671:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000678:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000067f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000686:	e8 d5 0b 00 00       	call   40001260 <syscall>
4000068b:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000068e:	c9                   	leave  
4000068f:	c3                   	ret    

40000690 <favailable>:
40000690:	55                   	push   %ebp
40000691:	89 e5                	mov    %esp,%ebp
40000693:	83 ec 34             	sub    $0x34,%esp
40000696:	8b 45 08             	mov    0x8(%ebp),%eax
40000699:	c7 45 e0 10 00 00 00 	movl   $0x10,-0x20(%ebp)
400006a0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006a3:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006a6:	50                   	push   %eax
400006a7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006ae:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006b5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400006bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400006c3:	e8 98 0b 00 00       	call   40001260 <syscall>
400006c8:	8b 45 e0             	mov    -0x20(%ebp),%eax
400006cb:	c9                   	leave  
400006cc:	c3                   	ret    

400006cd <fclose>:
400006cd:	55                   	push   %ebp
400006ce:	89 e5                	mov    %esp,%ebp
400006d0:	83 ec 34             	sub    $0x34,%esp
400006d3:	8b 45 08             	mov    0x8(%ebp),%eax
400006d6:	c7 45 e0 0b 00 00 00 	movl   $0xb,-0x20(%ebp)
400006dd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400006e0:	8d 45 e0             	lea    -0x20(%ebp),%eax
400006e3:	50                   	push   %eax
400006e4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400006eb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400006f2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400006f9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000700:	e8 5b 0b 00 00       	call   40001260 <syscall>
40000705:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000708:	c9                   	leave  
40000709:	c3                   	ret    

4000070a <fopen>:
4000070a:	55                   	push   %ebp
4000070b:	89 e5                	mov    %esp,%ebp
4000070d:	83 ec 34             	sub    $0x34,%esp
40000710:	8b 45 08             	mov    0x8(%ebp),%eax
40000713:	c7 45 e0 0a 00 00 00 	movl   $0xa,-0x20(%ebp)
4000071a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000071d:	8b 45 0c             	mov    0xc(%ebp),%eax
40000720:	89 45 e8             	mov    %eax,-0x18(%ebp)
40000723:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000726:	50                   	push   %eax
40000727:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000072e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000735:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
4000073c:	e8 1f 0b 00 00       	call   40001260 <syscall>
40000741:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000744:	c9                   	leave  
40000745:	c3                   	ret    

40000746 <fopenpmhandle>:
    waitResp(cntrl);

    printf("[init] switching to shell\n");

    char* testparams[] = {
        "test1",
40000746:	55                   	push   %ebp
40000747:	89 e5                	mov    %esp,%ebp
40000749:	83 ec 34             	sub    $0x34,%esp
    };

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

4000074c:	8b 45 08             	mov    0x8(%ebp),%eax
4000074f:	c7 45 e0 15 00 00 00 	movl   $0x15,-0x20(%ebp)
40000756:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000759:	8b 45 0c             	mov    0xc(%ebp),%eax
4000075c:	89 45 e8             	mov    %eax,-0x18(%ebp)
    while(1);

4000075f:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000762:	50                   	push   %eax
    };

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

40000763:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000076a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000771:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    while(1);

40000778:	e8 e3 0a 00 00       	call   40001260 <syscall>
    return 0;
}
4000077d:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000780:	c9                   	leave  
40000781:	c3                   	ret    

40000782 <setstderr>:
40000782:	55                   	push   %ebp
40000783:	89 e5                	mov    %esp,%ebp
40000785:	83 ec 10             	sub    $0x10,%esp
40000788:	ff 75 08             	pushl  0x8(%ebp)
4000078b:	6a 03                	push   $0x3
4000078d:	e8 b4 ff ff ff       	call   40000746 <fopenpmhandle>
40000792:	c9                   	leave  
40000793:	c3                   	ret    

40000794 <setstdin>:
    return 0;
}
40000794:	55                   	push   %ebp
40000795:	89 e5                	mov    %esp,%ebp
40000797:	83 ec 10             	sub    $0x10,%esp
4000079a:	ff 75 08             	pushl  0x8(%ebp)
4000079d:	6a 02                	push   $0x2
4000079f:	e8 a2 ff ff ff       	call   40000746 <fopenpmhandle>
400007a4:	c9                   	leave  
400007a5:	c3                   	ret    

400007a6 <setstdout>:

    return 0;
}
400007a6:	55                   	push   %ebp
400007a7:	89 e5                	mov    %esp,%ebp
400007a9:	83 ec 10             	sub    $0x10,%esp
400007ac:	ff 75 08             	pushl  0x8(%ebp)
400007af:	6a 01                	push   $0x1
400007b1:	e8 90 ff ff ff       	call   40000746 <fopenpmhandle>
400007b6:	c9                   	leave  
400007b7:	c3                   	ret    

400007b8 <getLastVFSErr>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"

400007b8:	55                   	push   %ebp
400007b9:	89 e5                	mov    %esp,%ebp
400007bb:	83 ec 34             	sub    $0x34,%esp
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400007be:	8d 45 e0             	lea    -0x20(%ebp),%eax

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

400007c1:	c7 45 e0 0f 00 00 00 	movl   $0xf,-0x20(%ebp)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400007c8:	50                   	push   %eax

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

400007c9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400007d0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400007d7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400007de:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400007e5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
400007ec:	e8 6f 0a 00 00       	call   40001260 <syscall>
}

int main(int argc, char* args[])
400007f1:	8b 45 e0             	mov    -0x20(%ebp),%eax
400007f4:	c9                   	leave  
400007f5:	c3                   	ret    

400007f6 <fwrite>:
400007f6:	55                   	push   %ebp
400007f7:	89 e5                	mov    %esp,%ebp
400007f9:	57                   	push   %edi
400007fa:	56                   	push   %esi
400007fb:	53                   	push   %ebx
400007fc:	83 ec 3c             	sub    $0x3c,%esp
400007ff:	8b 45 08             	mov    0x8(%ebp),%eax
40000802:	8b 7d 10             	mov    0x10(%ebp),%edi
40000805:	e8 02 fe ff ff       	call   4000060c <resolveHandle>
4000080a:	83 ec 0c             	sub    $0xc,%esp
4000080d:	89 c6                	mov    %eax,%esi
4000080f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
40000812:	8b 45 0c             	mov    0xc(%ebp),%eax
40000815:	c7 45 d0 0c 00 00 00 	movl   $0xc,-0x30(%ebp)
4000081c:	89 45 d8             	mov    %eax,-0x28(%ebp)
4000081f:	8d 45 d0             	lea    -0x30(%ebp),%eax
40000822:	89 7d dc             	mov    %edi,-0x24(%ebp)
40000825:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
4000082c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000833:	50                   	push   %eax
40000834:	89 45 c4             	mov    %eax,-0x3c(%ebp)
40000837:	eb 2d                	jmp    40000866 <fwrite+0x70>
40000839:	e8 12 fb ff ff       	call   40000350 <yield>
4000083e:	8b 45 0c             	mov    0xc(%ebp),%eax
40000841:	83 ec 0c             	sub    $0xc,%esp
40000844:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000847:	8d 45 d0             	lea    -0x30(%ebp),%eax
4000084a:	c7 45 d0 0c 00 00 00 	movl   $0xc,-0x30(%ebp)
40000851:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000854:	89 7d dc             	mov    %edi,-0x24(%ebp)
40000857:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
4000085e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000865:	50                   	push   %eax
40000866:	e8 f5 09 00 00       	call   40001260 <syscall>
4000086b:	8b 5d d0             	mov    -0x30(%ebp),%ebx
4000086e:	83 c4 10             	add    $0x10,%esp
40000871:	83 fb 01             	cmp    $0x1,%ebx
40000874:	74 c3                	je     40000839 <fwrite+0x43>
40000876:	89 f0                	mov    %esi,%eax
40000878:	89 da                	mov    %ebx,%edx
4000087a:	e8 3d 02 00 00       	call   40000abc <printrwerror>
4000087f:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000882:	89 d8                	mov    %ebx,%eax
40000884:	5b                   	pop    %ebx
40000885:	5e                   	pop    %esi
40000886:	5f                   	pop    %edi
40000887:	5d                   	pop    %ebp
40000888:	c3                   	ret    

40000889 <fputs>:
40000889:	55                   	push   %ebp
4000088a:	89 e5                	mov    %esp,%ebp
4000088c:	56                   	push   %esi
4000088d:	53                   	push   %ebx
4000088e:	83 ec 20             	sub    $0x20,%esp
40000891:	8b 45 0c             	mov    0xc(%ebp),%eax
40000894:	8b 5d 08             	mov    0x8(%ebp),%ebx
40000897:	e8 70 fd ff ff       	call   4000060c <resolveHandle>
4000089c:	89 c6                	mov    %eax,%esi
4000089e:	85 c0                	test   %eax,%eax
400008a0:	74 16                	je     400008b8 <fputs+0x2f>
400008a2:	83 ec 0c             	sub    $0xc,%esp
400008a5:	53                   	push   %ebx
400008a6:	e8 a7 04 00 00       	call   40000d52 <strlen>
400008ab:	83 c4 0c             	add    $0xc,%esp
400008ae:	50                   	push   %eax
400008af:	53                   	push   %ebx
400008b0:	56                   	push   %esi
400008b1:	e8 40 ff ff ff       	call   400007f6 <fwrite>
400008b6:	eb 35                	jmp    400008ed <fputs+0x64>
400008b8:	83 ec 0c             	sub    $0xc,%esp
400008bb:	8d 45 e0             	lea    -0x20(%ebp),%eax
400008be:	c7 45 e0 ca 00 00 00 	movl   $0xca,-0x20(%ebp)
400008c5:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
400008c8:	50                   	push   %eax
400008c9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400008d0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400008d7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400008de:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400008e5:	e8 76 09 00 00       	call   40001260 <syscall>
400008ea:	8b 45 e0             	mov    -0x20(%ebp),%eax
400008ed:	83 c4 10             	add    $0x10,%esp
400008f0:	8d 65 f8             	lea    -0x8(%ebp),%esp
400008f3:	5b                   	pop    %ebx
400008f4:	5e                   	pop    %esi
400008f5:	5d                   	pop    %ebp
400008f6:	c3                   	ret    

400008f7 <puts>:
400008f7:	55                   	push   %ebp
400008f8:	89 e5                	mov    %esp,%ebp
400008fa:	83 ec 10             	sub    $0x10,%esp
400008fd:	6a 01                	push   $0x1
400008ff:	ff 75 08             	pushl  0x8(%ebp)
40000902:	e8 82 ff ff ff       	call   40000889 <fputs>
40000907:	c9                   	leave  
40000908:	c3                   	ret    

40000909 <putn>:
40000909:	55                   	push   %ebp
4000090a:	89 e5                	mov    %esp,%ebp
4000090c:	56                   	push   %esi
4000090d:	53                   	push   %ebx
4000090e:	31 f6                	xor    %esi,%esi
40000910:	83 ec 50             	sub    $0x50,%esp
40000913:	89 d3                	mov    %edx,%ebx
40000915:	83 fa 24             	cmp    $0x24,%edx
40000918:	7f 25                	jg     4000093f <putn+0x36>
4000091a:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
4000091e:	8d 4d f7             	lea    -0x9(%ebp),%ecx
40000921:	31 d2                	xor    %edx,%edx
40000923:	49                   	dec    %ecx
40000924:	f7 f3                	div    %ebx
40000926:	46                   	inc    %esi
40000927:	85 c0                	test   %eax,%eax
40000929:	8a 92 7d 22 00 40    	mov    0x4000227d(%edx),%dl
4000092f:	88 11                	mov    %dl,(%ecx)
40000931:	75 ee                	jne    40000921 <putn+0x18>
40000933:	83 ec 0c             	sub    $0xc,%esp
40000936:	51                   	push   %ecx
40000937:	e8 bb ff ff ff       	call   400008f7 <puts>
4000093c:	83 c4 10             	add    $0x10,%esp
4000093f:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000942:	89 f0                	mov    %esi,%eax
40000944:	5b                   	pop    %ebx
40000945:	5e                   	pop    %esi
40000946:	5d                   	pop    %ebp
40000947:	c3                   	ret    

40000948 <fputc>:
40000948:	55                   	push   %ebp
40000949:	89 e5                	mov    %esp,%ebp
4000094b:	83 ec 38             	sub    $0x38,%esp
4000094e:	8b 45 08             	mov    0x8(%ebp),%eax
40000951:	88 45 d4             	mov    %al,-0x2c(%ebp)
40000954:	8b 45 0c             	mov    0xc(%ebp),%eax
40000957:	e8 b0 fc ff ff       	call   4000060c <resolveHandle>
4000095c:	85 c0                	test   %eax,%eax
4000095e:	74 0f                	je     4000096f <fputc+0x27>
40000960:	52                   	push   %edx
40000961:	8d 55 d4             	lea    -0x2c(%ebp),%edx
40000964:	6a 01                	push   $0x1
40000966:	52                   	push   %edx
40000967:	50                   	push   %eax
40000968:	e8 89 fe ff ff       	call   400007f6 <fwrite>
4000096d:	eb 39                	jmp    400009a8 <fputc+0x60>
4000096f:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
40000973:	83 ec 0c             	sub    $0xc,%esp
40000976:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000979:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000097c:	c7 45 e0 c9 00 00 00 	movl   $0xc9,-0x20(%ebp)
40000983:	50                   	push   %eax
40000984:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000098b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000992:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40000999:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400009a0:	e8 bb 08 00 00       	call   40001260 <syscall>
400009a5:	8b 45 e0             	mov    -0x20(%ebp),%eax
400009a8:	83 c4 10             	add    $0x10,%esp
400009ab:	c9                   	leave  
400009ac:	c3                   	ret    

400009ad <putc>:
400009ad:	55                   	push   %ebp
400009ae:	89 e5                	mov    %esp,%ebp
400009b0:	83 ec 08             	sub    $0x8,%esp
400009b3:	0f be 45 08          	movsbl 0x8(%ebp),%eax
400009b7:	89 45 08             	mov    %eax,0x8(%ebp)
400009ba:	c9                   	leave  
400009bb:	e9 88 ff ff ff       	jmp    40000948 <fputc>

400009c0 <putchar>:
400009c0:	55                   	push   %ebp
400009c1:	89 e5                	mov    %esp,%ebp
400009c3:	83 ec 10             	sub    $0x10,%esp
400009c6:	0f be 45 08          	movsbl 0x8(%ebp),%eax
400009ca:	6a 01                	push   $0x1
400009cc:	50                   	push   %eax
400009cd:	e8 76 ff ff ff       	call   40000948 <fputc>
400009d2:	c9                   	leave  
400009d3:	c3                   	ret    

400009d4 <printf>:
400009d4:	55                   	push   %ebp
400009d5:	89 e5                	mov    %esp,%ebp
400009d7:	57                   	push   %edi
400009d8:	56                   	push   %esi
400009d9:	53                   	push   %ebx
400009da:	83 ec 1c             	sub    $0x1c,%esp
400009dd:	8d 75 0c             	lea    0xc(%ebp),%esi
400009e0:	8b 7d 08             	mov    0x8(%ebp),%edi
400009e3:	31 db                	xor    %ebx,%ebx
400009e5:	e9 be 00 00 00       	jmp    40000aa8 <printf+0xd4>
400009ea:	3c 25                	cmp    $0x25,%al
400009ec:	0f 85 a4 00 00 00    	jne    40000a96 <printf+0xc2>
400009f2:	47                   	inc    %edi
400009f3:	8a 07                	mov    (%edi),%al
400009f5:	3c 70                	cmp    $0x70,%al
400009f7:	74 47                	je     40000a40 <printf+0x6c>
400009f9:	7f 1a                	jg     40000a15 <printf+0x41>
400009fb:	3c 63                	cmp    $0x63,%al
400009fd:	74 5a                	je     40000a59 <printf+0x85>
400009ff:	7f 0e                	jg     40000a0f <printf+0x3b>
40000a01:	84 c0                	test   %al,%al
40000a03:	0f 84 a9 00 00 00    	je     40000ab2 <printf+0xde>
40000a09:	3c 25                	cmp    $0x25,%al
40000a0b:	75 6c                	jne    40000a79 <printf+0xa5>
40000a0d:	eb 63                	jmp    40000a72 <printf+0x9e>
40000a0f:	3c 64                	cmp    $0x64,%al
40000a11:	75 66                	jne    40000a79 <printf+0xa5>
40000a13:	eb 1e                	jmp    40000a33 <printf+0x5f>
40000a15:	3c 75                	cmp    $0x75,%al
40000a17:	74 1a                	je     40000a33 <printf+0x5f>
40000a19:	3c 78                	cmp    $0x78,%al
40000a1b:	74 23                	je     40000a40 <printf+0x6c>
40000a1d:	3c 73                	cmp    $0x73,%al
40000a1f:	75 58                	jne    40000a79 <printf+0xa5>
40000a21:	83 ec 0c             	sub    $0xc,%esp
40000a24:	8d 46 04             	lea    0x4(%esi),%eax
40000a27:	ff 36                	pushl  (%esi)
40000a29:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a2c:	e8 c6 fe ff ff       	call   400008f7 <puts>
40000a31:	eb 38                	jmp    40000a6b <printf+0x97>
40000a33:	8d 46 04             	lea    0x4(%esi),%eax
40000a36:	ba 0a 00 00 00       	mov    $0xa,%edx
40000a3b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a3e:	eb 0b                	jmp    40000a4b <printf+0x77>
40000a40:	8d 46 04             	lea    0x4(%esi),%eax
40000a43:	ba 10 00 00 00       	mov    $0x10,%edx
40000a48:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a4b:	8b 06                	mov    (%esi),%eax
40000a4d:	e8 b7 fe ff ff       	call   40000909 <putn>
40000a52:	8b 75 e4             	mov    -0x1c(%ebp),%esi
40000a55:	01 c3                	add    %eax,%ebx
40000a57:	eb 4e                	jmp    40000aa7 <printf+0xd3>
40000a59:	8d 46 04             	lea    0x4(%esi),%eax
40000a5c:	83 ec 0c             	sub    $0xc,%esp
40000a5f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a62:	0f be 06             	movsbl (%esi),%eax
40000a65:	50                   	push   %eax
40000a66:	e8 55 ff ff ff       	call   400009c0 <putchar>
40000a6b:	01 c3                	add    %eax,%ebx
40000a6d:	8b 75 e4             	mov    -0x1c(%ebp),%esi
40000a70:	eb 32                	jmp    40000aa4 <printf+0xd0>
40000a72:	83 ec 0c             	sub    $0xc,%esp
40000a75:	6a 25                	push   $0x25
40000a77:	eb 24                	jmp    40000a9d <printf+0xc9>
40000a79:	83 ec 0c             	sub    $0xc,%esp
40000a7c:	6a 25                	push   $0x25
40000a7e:	e8 3d ff ff ff       	call   400009c0 <putchar>
40000a83:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000a86:	0f be 07             	movsbl (%edi),%eax
40000a89:	89 04 24             	mov    %eax,(%esp)
40000a8c:	e8 2f ff ff ff       	call   400009c0 <putchar>
40000a91:	03 45 e4             	add    -0x1c(%ebp),%eax
40000a94:	eb 0c                	jmp    40000aa2 <printf+0xce>
40000a96:	83 ec 0c             	sub    $0xc,%esp
40000a99:	0f be c0             	movsbl %al,%eax
40000a9c:	50                   	push   %eax
40000a9d:	e8 1e ff ff ff       	call   400009c0 <putchar>
40000aa2:	01 c3                	add    %eax,%ebx
40000aa4:	83 c4 10             	add    $0x10,%esp
40000aa7:	47                   	inc    %edi
40000aa8:	8a 07                	mov    (%edi),%al
40000aaa:	84 c0                	test   %al,%al
40000aac:	0f 85 38 ff ff ff    	jne    400009ea <printf+0x16>
40000ab2:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000ab5:	89 d8                	mov    %ebx,%eax
40000ab7:	5b                   	pop    %ebx
40000ab8:	5e                   	pop    %esi
40000ab9:	5f                   	pop    %edi
40000aba:	5d                   	pop    %ebp
40000abb:	c3                   	ret    

40000abc <printrwerror>:
40000abc:	55                   	push   %ebp
40000abd:	89 e5                	mov    %esp,%ebp
40000abf:	83 ec 08             	sub    $0x8,%esp
40000ac2:	83 fa 02             	cmp    $0x2,%edx
40000ac5:	75 0a                	jne    40000ad1 <printrwerror+0x15>
40000ac7:	52                   	push   %edx
40000ac8:	52                   	push   %edx
40000ac9:	50                   	push   %eax
40000aca:	68 a2 22 00 40       	push   $0x400022a2
40000acf:	eb 2b                	jmp    40000afc <printrwerror+0x40>
40000ad1:	83 fa 03             	cmp    $0x3,%edx
40000ad4:	75 0a                	jne    40000ae0 <printrwerror+0x24>
40000ad6:	51                   	push   %ecx
40000ad7:	51                   	push   %ecx
40000ad8:	50                   	push   %eax
40000ad9:	68 ba 22 00 40       	push   $0x400022ba
40000ade:	eb 1c                	jmp    40000afc <printrwerror+0x40>
40000ae0:	83 fa 04             	cmp    $0x4,%edx
40000ae3:	75 0a                	jne    40000aef <printrwerror+0x33>
40000ae5:	52                   	push   %edx
40000ae6:	52                   	push   %edx
40000ae7:	50                   	push   %eax
40000ae8:	68 d5 22 00 40       	push   $0x400022d5
40000aed:	eb 0d                	jmp    40000afc <printrwerror+0x40>
40000aef:	83 fa 05             	cmp    $0x5,%edx
40000af2:	75 10                	jne    40000b04 <printrwerror+0x48>
40000af4:	51                   	push   %ecx
40000af5:	51                   	push   %ecx
40000af6:	50                   	push   %eax
40000af7:	68 ff 22 00 40       	push   $0x400022ff
40000afc:	e8 d3 fe ff ff       	call   400009d4 <printf>
40000b01:	83 c4 10             	add    $0x10,%esp
40000b04:	c9                   	leave  
40000b05:	c3                   	ret    

40000b06 <fread>:
40000b06:	55                   	push   %ebp
40000b07:	89 e5                	mov    %esp,%ebp
40000b09:	57                   	push   %edi
40000b0a:	56                   	push   %esi
40000b0b:	53                   	push   %ebx
40000b0c:	83 ec 38             	sub    $0x38,%esp
40000b0f:	8d 7d d0             	lea    -0x30(%ebp),%edi
40000b12:	8b 45 0c             	mov    0xc(%ebp),%eax
40000b15:	8b 75 08             	mov    0x8(%ebp),%esi
40000b18:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000b1b:	8b 45 10             	mov    0x10(%ebp),%eax
40000b1e:	c7 45 d0 0d 00 00 00 	movl   $0xd,-0x30(%ebp)
40000b25:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000b28:	89 45 dc             	mov    %eax,-0x24(%ebp)
40000b2b:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000b32:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000b39:	eb 2c                	jmp    40000b67 <fread+0x61>
40000b3b:	e8 10 f8 ff ff       	call   40000350 <yield>
40000b40:	8b 45 0c             	mov    0xc(%ebp),%eax
40000b43:	89 45 d8             	mov    %eax,-0x28(%ebp)
40000b46:	8b 45 10             	mov    0x10(%ebp),%eax
40000b49:	c7 45 d0 0d 00 00 00 	movl   $0xd,-0x30(%ebp)
40000b50:	89 75 d4             	mov    %esi,-0x2c(%ebp)
40000b53:	89 45 dc             	mov    %eax,-0x24(%ebp)
40000b56:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
40000b5d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
40000b64:	83 ec 0c             	sub    $0xc,%esp
40000b67:	57                   	push   %edi
40000b68:	e8 f3 06 00 00       	call   40001260 <syscall>
40000b6d:	8b 5d d0             	mov    -0x30(%ebp),%ebx
40000b70:	83 c4 10             	add    $0x10,%esp
40000b73:	83 fb 01             	cmp    $0x1,%ebx
40000b76:	74 c3                	je     40000b3b <fread+0x35>
40000b78:	89 f0                	mov    %esi,%eax
40000b7a:	89 da                	mov    %ebx,%edx
40000b7c:	e8 3b ff ff ff       	call   40000abc <printrwerror>
40000b81:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000b84:	89 d8                	mov    %ebx,%eax
40000b86:	5b                   	pop    %ebx
40000b87:	5e                   	pop    %esi
40000b88:	5f                   	pop    %edi
40000b89:	5d                   	pop    %ebp
40000b8a:	c3                   	ret    

40000b8b <fgetc>:
40000b8b:	55                   	push   %ebp
40000b8c:	89 e5                	mov    %esp,%ebp
40000b8e:	83 ec 18             	sub    $0x18,%esp
40000b91:	8b 45 08             	mov    0x8(%ebp),%eax
40000b94:	e8 73 fa ff ff       	call   4000060c <resolveHandle>
40000b99:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
40000b9d:	85 c0                	test   %eax,%eax
40000b9f:	74 10                	je     40000bb1 <fgetc+0x26>
40000ba1:	8d 55 f7             	lea    -0x9(%ebp),%edx
40000ba4:	51                   	push   %ecx
40000ba5:	6a 01                	push   $0x1
40000ba7:	52                   	push   %edx
40000ba8:	50                   	push   %eax
40000ba9:	e8 58 ff ff ff       	call   40000b06 <fread>
40000bae:	83 c4 10             	add    $0x10,%esp
40000bb1:	8a 45 f7             	mov    -0x9(%ebp),%al
40000bb4:	c9                   	leave  
40000bb5:	c3                   	ret    

40000bb6 <getchar>:
40000bb6:	55                   	push   %ebp
40000bb7:	89 e5                	mov    %esp,%ebp
40000bb9:	83 ec 14             	sub    $0x14,%esp
40000bbc:	6a 02                	push   $0x2
40000bbe:	e8 c8 ff ff ff       	call   40000b8b <fgetc>
40000bc3:	c9                   	leave  
40000bc4:	c3                   	ret    

40000bc5 <getc>:
40000bc5:	55                   	push   %ebp
40000bc6:	89 e5                	mov    %esp,%ebp
40000bc8:	83 ec 08             	sub    $0x8,%esp
40000bcb:	c9                   	leave  
40000bcc:	e9 ba ff ff ff       	jmp    40000b8b <fgetc>

40000bd1 <fgets>:
40000bd1:	55                   	push   %ebp
40000bd2:	89 e5                	mov    %esp,%ebp
40000bd4:	57                   	push   %edi
40000bd5:	56                   	push   %esi
40000bd6:	53                   	push   %ebx
40000bd7:	83 ec 1c             	sub    $0x1c,%esp
40000bda:	31 db                	xor    %ebx,%ebx
40000bdc:	8b 7d 0c             	mov    0xc(%ebp),%edi
40000bdf:	8b 75 08             	mov    0x8(%ebp),%esi
40000be2:	8d 47 ff             	lea    -0x1(%edi),%eax
40000be5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000be8:	eb 16                	jmp    40000c00 <fgets+0x2f>
40000bea:	83 ec 0c             	sub    $0xc,%esp
40000bed:	ff 75 10             	pushl  0x10(%ebp)
40000bf0:	e8 96 ff ff ff       	call   40000b8b <fgetc>
40000bf5:	83 c4 10             	add    $0x10,%esp
40000bf8:	88 04 1e             	mov    %al,(%esi,%ebx,1)
40000bfb:	84 c0                	test   %al,%al
40000bfd:	74 0a                	je     40000c09 <fgets+0x38>
40000bff:	43                   	inc    %ebx
40000c00:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
40000c03:	7c e5                	jl     40000bea <fgets+0x19>
40000c05:	c6 04 3e 00          	movb   $0x0,(%esi,%edi,1)
40000c09:	8d 65 f4             	lea    -0xc(%ebp),%esp
40000c0c:	89 f0                	mov    %esi,%eax
40000c0e:	5b                   	pop    %ebx
40000c0f:	5e                   	pop    %esi
40000c10:	5f                   	pop    %edi
40000c11:	5d                   	pop    %ebp
40000c12:	c3                   	ret    

40000c13 <getln>:
40000c13:	55                   	push   %ebp
40000c14:	89 e5                	mov    %esp,%ebp
40000c16:	56                   	push   %esi
40000c17:	53                   	push   %ebx
40000c18:	31 db                	xor    %ebx,%ebx
40000c1a:	8b 75 08             	mov    0x8(%ebp),%esi
40000c1d:	eb 42                	jmp    40000c61 <getln+0x4e>
40000c1f:	3c 0a                	cmp    $0xa,%al
40000c21:	75 0f                	jne    40000c32 <getln+0x1f>
40000c23:	83 ec 0c             	sub    $0xc,%esp
40000c26:	6a 0a                	push   $0xa
40000c28:	e8 93 fd ff ff       	call   400009c0 <putchar>
40000c2d:	83 c4 10             	add    $0x10,%esp
40000c30:	eb 40                	jmp    40000c72 <getln+0x5f>
40000c32:	3c 08                	cmp    $0x8,%al
40000c34:	75 18                	jne    40000c4e <getln+0x3b>
40000c36:	85 db                	test   %ebx,%ebx
40000c38:	74 0e                	je     40000c48 <getln+0x35>
40000c3a:	83 ec 0c             	sub    $0xc,%esp
40000c3d:	4b                   	dec    %ebx
40000c3e:	6a 08                	push   $0x8
40000c40:	e8 7b fd ff ff       	call   400009c0 <putchar>
40000c45:	83 c4 10             	add    $0x10,%esp
40000c48:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
40000c4c:	eb 13                	jmp    40000c61 <getln+0x4e>
40000c4e:	83 ec 0c             	sub    $0xc,%esp
40000c51:	88 04 1e             	mov    %al,(%esi,%ebx,1)
40000c54:	0f be c0             	movsbl %al,%eax
40000c57:	50                   	push   %eax
40000c58:	43                   	inc    %ebx
40000c59:	e8 62 fd ff ff       	call   400009c0 <putchar>
40000c5e:	83 c4 10             	add    $0x10,%esp
40000c61:	83 ec 0c             	sub    $0xc,%esp
40000c64:	6a 02                	push   $0x2
40000c66:	e8 20 ff ff ff       	call   40000b8b <fgetc>
40000c6b:	83 c4 10             	add    $0x10,%esp
40000c6e:	84 c0                	test   %al,%al
40000c70:	75 ad                	jne    40000c1f <getln+0xc>
40000c72:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
40000c76:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000c79:	89 f0                	mov    %esi,%eax
40000c7b:	5b                   	pop    %ebx
40000c7c:	5e                   	pop    %esi
40000c7d:	5d                   	pop    %ebp
40000c7e:	c3                   	ret    
	...

40000c80 <memset>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"
40000c80:	55                   	push   %ebp
40000c81:	89 e5                	mov    %esp,%ebp
40000c83:	53                   	push   %ebx
40000c84:	8b 45 08             	mov    0x8(%ebp),%eax
40000c87:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000c8a:	8b 4d 10             	mov    0x10(%ebp),%ecx

40000c8d:	89 c2                	mov    %eax,%edx
static void waitResp(HANDLE cntrl) {
    char resp = 0;
40000c8f:	eb 04                	jmp    40000c95 <memset+0x15>

40000c91:	88 1a                	mov    %bl,(%edx)
40000c93:	49                   	dec    %ecx
40000c94:	42                   	inc    %edx
#include "stdio.h"
#include "process.h"
#include "stdlib.h"

static void waitResp(HANDLE cntrl) {
    char resp = 0;
40000c95:	85 c9                	test   %ecx,%ecx
40000c97:	75 f8                	jne    40000c91 <memset+0x11>

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}
40000c99:	5b                   	pop    %ebx
40000c9a:	5d                   	pop    %ebp
40000c9b:	c3                   	ret    

40000c9c <memcpy>:

static void hdlrx21(uint32_t irq) {
40000c9c:	55                   	push   %ebp
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
40000c9d:	31 c9                	xor    %ecx,%ecx
    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
40000c9f:	89 e5                	mov    %esp,%ebp
40000ca1:	56                   	push   %esi
40000ca2:	53                   	push   %ebx
40000ca3:	8b 75 10             	mov    0x10(%ebp),%esi
40000ca6:	8b 45 08             	mov    0x8(%ebp),%eax
40000ca9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
40000cac:	85 f6                	test   %esi,%esi
40000cae:	75 04                	jne    40000cb4 <memcpy+0x18>
40000cb0:	31 c0                	xor    %eax,%eax
40000cb2:	eb 0a                	jmp    40000cbe <memcpy+0x22>
{
    printf("[ibin/init] initalizing...\n");

40000cb4:	8a 14 0b             	mov    (%ebx,%ecx,1),%dl
40000cb7:	88 14 08             	mov    %dl,(%eax,%ecx,1)
40000cba:	41                   	inc    %ecx
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
{
    printf("[ibin/init] initalizing...\n");
40000cbb:	4e                   	dec    %esi
40000cbc:	75 f6                	jne    40000cb4 <memcpy+0x18>

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
40000cbe:	5b                   	pop    %ebx
40000cbf:	5e                   	pop    %esi
40000cc0:	5d                   	pop    %ebp
40000cc1:	c3                   	ret    

40000cc2 <memcmp>:
    waitResp(cntrl);

40000cc2:	55                   	push   %ebp
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
40000cc3:	83 c8 ff             	or     $0xffffffff,%eax
    HANDLE cntrl = fmkfifo("/var/cntrl/init");

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

40000cc6:	89 e5                	mov    %esp,%ebp
40000cc8:	57                   	push   %edi
40000cc9:	56                   	push   %esi
40000cca:	53                   	push   %ebx
40000ccb:	8b 75 08             	mov    0x8(%ebp),%esi
40000cce:	8b 7d 0c             	mov    0xc(%ebp),%edi
40000cd1:	8b 5d 10             	mov    0x10(%ebp),%ebx
    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
40000cd4:	85 f6                	test   %esi,%esi
40000cd6:	74 2c                	je     40000d04 <memcmp+0x42>

    texec("/ibin/ttytovga", 0);
40000cd8:	b8 01 00 00 00       	mov    $0x1,%eax
40000cdd:	85 ff                	test   %edi,%edi
40000cdf:	74 23                	je     40000d04 <memcmp+0x42>
    waitResp(cntrl);

40000ce1:	31 d2                	xor    %edx,%edx
40000ce3:	85 db                	test   %ebx,%ebx
40000ce5:	75 17                	jne    40000cfe <memcmp+0x3c>
40000ce7:	eb 19                	jmp    40000d02 <memcmp+0x40>
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");

    printf("[init] now working on tty0\n");

    printf("[init] executing virtual file drivers\n");
40000ce9:	8a 04 16             	mov    (%esi,%edx,1),%al
40000cec:	8a 0c 17             	mov    (%edi,%edx,1),%cl
40000cef:	38 c8                	cmp    %cl,%al
40000cf1:	74 0a                	je     40000cfd <memcmp+0x3b>
    texec("/ibin/urnd_prov", 0);
40000cf3:	0f b6 c0             	movzbl %al,%eax
40000cf6:	0f b6 c9             	movzbl %cl,%ecx
40000cf9:	29 c8                	sub    %ecx,%eax
40000cfb:	eb 07                	jmp    40000d04 <memcmp+0x42>
    setstdout("/dev/tty0");
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");

    printf("[init] now working on tty0\n");

40000cfd:	42                   	inc    %edx
40000cfe:	39 da                	cmp    %ebx,%edx
40000d00:	72 e7                	jb     40000ce9 <memcmp+0x27>
40000d02:	31 c0                	xor    %eax,%eax
    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

    printf("[init] switching to shell\n");

40000d04:	5b                   	pop    %ebx
40000d05:	5e                   	pop    %esi
40000d06:	5f                   	pop    %edi
40000d07:	5d                   	pop    %ebp
40000d08:	c3                   	ret    

40000d09 <strcmp>:
    char* testparams[] = {
        "test1",
40000d09:	55                   	push   %ebp

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000d0a:	31 c0                	xor    %eax,%eax
    waitResp(cntrl);

    printf("[init] switching to shell\n");

    char* testparams[] = {
        "test1",
40000d0c:	89 e5                	mov    %esp,%ebp
40000d0e:	56                   	push   %esi
40000d0f:	53                   	push   %ebx

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000d10:	31 db                	xor    %ebx,%ebx
    waitResp(cntrl);

    printf("[init] switching to shell\n");

    char* testparams[] = {
        "test1",
40000d12:	8b 55 08             	mov    0x8(%ebp),%edx
40000d15:	8b 4d 0c             	mov    0xc(%ebp),%ecx

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000d18:	85 d2                	test   %edx,%edx
40000d1a:	75 03                	jne    40000d1f <strcmp+0x16>
40000d1c:	eb 09                	jmp    40000d27 <strcmp+0x1e>

    return 0;
}
40000d1e:	40                   	inc    %eax
40000d1f:	89 c3                	mov    %eax,%ebx
40000d21:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
40000d25:	75 f7                	jne    40000d1e <strcmp+0x15>

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000d27:	31 c0                	xor    %eax,%eax
40000d29:	31 f6                	xor    %esi,%esi
40000d2b:	85 c9                	test   %ecx,%ecx
40000d2d:	75 03                	jne    40000d32 <strcmp+0x29>
40000d2f:	eb 09                	jmp    40000d3a <strcmp+0x31>

    return 0;
}
40000d31:	40                   	inc    %eax
40000d32:	89 c6                	mov    %eax,%esi
40000d34:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)
40000d38:	75 f7                	jne    40000d31 <strcmp+0x28>
        "test1",
        "test2",
        0
    };

    texec("/ibin/csh", 0);
40000d3a:	89 f0                	mov    %esi,%eax
40000d3c:	39 de                	cmp    %ebx,%esi
40000d3e:	7e 02                	jle    40000d42 <strcmp+0x39>
40000d40:	89 d8                	mov    %ebx,%eax
40000d42:	40                   	inc    %eax
40000d43:	50                   	push   %eax
40000d44:	51                   	push   %ecx
40000d45:	52                   	push   %edx
40000d46:	e8 77 ff ff ff       	call   40000cc2 <memcmp>

40000d4b:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000d4e:	5b                   	pop    %ebx
40000d4f:	5e                   	pop    %esi
40000d50:	5d                   	pop    %ebp
40000d51:	c3                   	ret    

40000d52 <strlen>:
    //register_irq_handler(0x21, hdlrx21);

40000d52:	55                   	push   %ebp
    while(1);
40000d53:	31 d2                	xor    %edx,%edx
    };

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

40000d55:	89 e5                	mov    %esp,%ebp
    while(1);
40000d57:	31 c0                	xor    %eax,%eax
    };

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

40000d59:	8b 4d 08             	mov    0x8(%ebp),%ecx
    while(1);
40000d5c:	85 c9                	test   %ecx,%ecx
40000d5e:	75 03                	jne    40000d63 <strlen+0x11>
40000d60:	eb 09                	jmp    40000d6b <strlen+0x19>

    return 0;
}
40000d62:	42                   	inc    %edx
40000d63:	89 d0                	mov    %edx,%eax
40000d65:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)
40000d69:	75 f7                	jne    40000d62 <strlen+0x10>
40000d6b:	5d                   	pop    %ebp
40000d6c:	c3                   	ret    

40000d6d <strcpy>:
40000d6d:	55                   	push   %ebp

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000d6e:	31 d2                	xor    %edx,%edx
}
40000d70:	89 e5                	mov    %esp,%ebp
40000d72:	56                   	push   %esi
40000d73:	53                   	push   %ebx

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000d74:	31 c9                	xor    %ecx,%ecx
}
40000d76:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000d79:	8b 45 08             	mov    0x8(%ebp),%eax

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000d7c:	85 db                	test   %ebx,%ebx
40000d7e:	75 03                	jne    40000d83 <strcpy+0x16>
40000d80:	eb 09                	jmp    40000d8b <strcpy+0x1e>

    return 0;
}
40000d82:	42                   	inc    %edx
40000d83:	89 d1                	mov    %edx,%ecx
40000d85:	80 3c 13 00          	cmpb   $0x0,(%ebx,%edx,1)
40000d89:	75 f7                	jne    40000d82 <strcpy+0x15>

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
40000d8b:	89 ce                	mov    %ecx,%esi
40000d8d:	46                   	inc    %esi
40000d8e:	74 0c                	je     40000d9c <strcpy+0x2f>
40000d90:	31 d2                	xor    %edx,%edx
{
    printf("[ibin/init] initalizing...\n");

40000d92:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
40000d95:	88 0c 10             	mov    %cl,(%eax,%edx,1)
40000d98:	42                   	inc    %edx
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
{
    printf("[ibin/init] initalizing...\n");
40000d99:	4e                   	dec    %esi
40000d9a:	75 f6                	jne    40000d92 <strcpy+0x25>
40000d9c:	5b                   	pop    %ebx
40000d9d:	5e                   	pop    %esi
40000d9e:	5d                   	pop    %ebp
40000d9f:	c3                   	ret    

40000da0 <strtoknc>:
40000da0:	55                   	push   %ebp

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000da1:	31 c0                	xor    %eax,%eax
40000da3:	89 e5                	mov    %esp,%ebp
40000da5:	57                   	push   %edi
40000da6:	56                   	push   %esi
40000da7:	53                   	push   %ebx
40000da8:	83 ec 04             	sub    $0x4,%esp
40000dab:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000dae:	8b 4d 08             	mov    0x8(%ebp),%ecx

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000db1:	85 db                	test   %ebx,%ebx
40000db3:	75 06                	jne    40000dbb <strtoknc+0x1b>
40000db5:	e9 83 00 00 00       	jmp    40000e3d <strtoknc+0x9d>

    return 0;
}
40000dba:	40                   	inc    %eax
40000dbb:	89 c7                	mov    %eax,%edi
40000dbd:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
40000dc1:	75 f7                	jne    40000dba <strtoknc+0x1a>
40000dc3:	85 c0                	test   %eax,%eax
40000dc5:	74 76                	je     40000e3d <strtoknc+0x9d>
40000dc7:	85 c9                	test   %ecx,%ecx
40000dc9:	75 0b                	jne    40000dd6 <strtoknc+0x36>
40000dcb:	83 3d 00 32 00 40 00 	cmpl   $0x0,0x40003200
40000dd2:	75 08                	jne    40000ddc <strtoknc+0x3c>
40000dd4:	eb 67                	jmp    40000e3d <strtoknc+0x9d>
40000dd6:	89 0d 00 32 00 40    	mov    %ecx,0x40003200
40000ddc:	a1 00 32 00 40       	mov    0x40003200,%eax
40000de1:	31 c9                	xor    %ecx,%ecx
40000de3:	eb 0b                	jmp    40000df0 <strtoknc+0x50>
40000de5:	8a 10                	mov    (%eax),%dl
40000de7:	3a 14 0b             	cmp    (%ebx,%ecx,1),%dl
40000dea:	75 03                	jne    40000def <strtoknc+0x4f>
40000dec:	40                   	inc    %eax
40000ded:	eb 05                	jmp    40000df4 <strtoknc+0x54>
40000def:	41                   	inc    %ecx
40000df0:	39 f9                	cmp    %edi,%ecx
40000df2:	7c f1                	jl     40000de5 <strtoknc+0x45>
40000df4:	39 f9                	cmp    %edi,%ecx
40000df6:	75 e9                	jne    40000de1 <strtoknc+0x41>
40000df8:	a3 00 32 00 40       	mov    %eax,0x40003200
40000dfd:	80 38 00             	cmpb   $0x0,(%eax)
40000e00:	75 28                	jne    40000e2a <strtoknc+0x8a>
40000e02:	c7 05 00 32 00 40 00 	movl   $0x0,0x40003200
40000e09:	00 00 00 
40000e0c:	eb 2f                	jmp    40000e3d <strtoknc+0x9d>
40000e0e:	8a 55 f3             	mov    -0xd(%ebp),%dl
40000e11:	3a 14 0b             	cmp    (%ebx,%ecx,1),%dl
40000e14:	75 05                	jne    40000e1b <strtoknc+0x7b>
40000e16:	c6 06 00             	movb   $0x0,(%esi)
40000e19:	eb 05                	jmp    40000e20 <strtoknc+0x80>
40000e1b:	41                   	inc    %ecx
40000e1c:	39 f9                	cmp    %edi,%ecx
40000e1e:	7c ee                	jl     40000e0e <strtoknc+0x6e>
40000e20:	ff 05 00 32 00 40    	incl   0x40003200
40000e26:	39 f9                	cmp    %edi,%ecx
40000e28:	7c 15                	jl     40000e3f <strtoknc+0x9f>
40000e2a:	8b 35 00 32 00 40    	mov    0x40003200,%esi
40000e30:	8a 16                	mov    (%esi),%dl
40000e32:	88 55 f3             	mov    %dl,-0xd(%ebp)
40000e35:	84 d2                	test   %dl,%dl
40000e37:	74 06                	je     40000e3f <strtoknc+0x9f>
40000e39:	31 c9                	xor    %ecx,%ecx
40000e3b:	eb df                	jmp    40000e1c <strtoknc+0x7c>
40000e3d:	31 c0                	xor    %eax,%eax
40000e3f:	5a                   	pop    %edx
40000e40:	5b                   	pop    %ebx
40000e41:	5e                   	pop    %esi
40000e42:	5f                   	pop    %edi
40000e43:	5d                   	pop    %ebp
40000e44:	c3                   	ret    

40000e45 <strclone>:
40000e45:	55                   	push   %ebp

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000e46:	31 c0                	xor    %eax,%eax
40000e48:	89 e5                	mov    %esp,%ebp
40000e4a:	56                   	push   %esi
40000e4b:	53                   	push   %ebx

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000e4c:	31 d2                	xor    %edx,%edx
40000e4e:	8b 5d 08             	mov    0x8(%ebp),%ebx

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);

    while(1);
40000e51:	85 db                	test   %ebx,%ebx
40000e53:	75 03                	jne    40000e58 <strclone+0x13>
40000e55:	eb 09                	jmp    40000e60 <strclone+0x1b>

    return 0;
}
40000e57:	40                   	inc    %eax
40000e58:	89 c2                	mov    %eax,%edx
40000e5a:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
40000e5e:	75 f7                	jne    40000e57 <strclone+0x12>
40000e60:	83 ec 0c             	sub    $0xc,%esp
40000e63:	42                   	inc    %edx
40000e64:	52                   	push   %edx
40000e65:	e8 af 01 00 00       	call   40001019 <malloc>
40000e6a:	59                   	pop    %ecx
40000e6b:	89 c6                	mov    %eax,%esi
40000e6d:	58                   	pop    %eax
40000e6e:	53                   	push   %ebx
40000e6f:	56                   	push   %esi
40000e70:	e8 f8 fe ff ff       	call   40000d6d <strcpy>
40000e75:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000e78:	89 f0                	mov    %esi,%eax
40000e7a:	5b                   	pop    %ebx
40000e7b:	5e                   	pop    %esi
40000e7c:	5d                   	pop    %ebp
40000e7d:	c3                   	ret    

40000e7e <strtok>:
40000e7e:	55                   	push   %ebp
40000e7f:	89 e5                	mov    %esp,%ebp
40000e81:	56                   	push   %esi
40000e82:	53                   	push   %ebx
40000e83:	8b 75 08             	mov    0x8(%ebp),%esi
40000e86:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40000e89:	85 f6                	test   %esi,%esi
40000e8b:	74 2e                	je     40000ebb <strtok+0x3d>
40000e8d:	a1 04 32 00 40       	mov    0x40003204,%eax
40000e92:	85 c0                	test   %eax,%eax
40000e94:	74 0c                	je     40000ea2 <strtok+0x24>
40000e96:	83 ec 0c             	sub    $0xc,%esp
40000e99:	50                   	push   %eax
40000e9a:	e8 31 00 00 00       	call   40000ed0 <free>
40000e9f:	83 c4 10             	add    $0x10,%esp
40000ea2:	83 ec 0c             	sub    $0xc,%esp
40000ea5:	56                   	push   %esi
40000ea6:	e8 9a ff ff ff       	call   40000e45 <strclone>
40000eab:	83 c4 10             	add    $0x10,%esp
40000eae:	a3 04 32 00 40       	mov    %eax,0x40003204
40000eb3:	89 5d 0c             	mov    %ebx,0xc(%ebp)
40000eb6:	89 45 08             	mov    %eax,0x8(%ebp)
40000eb9:	eb 0a                	jmp    40000ec5 <strtok+0x47>
40000ebb:	89 5d 0c             	mov    %ebx,0xc(%ebp)
40000ebe:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)
40000ec5:	8d 65 f8             	lea    -0x8(%ebp),%esp
40000ec8:	5b                   	pop    %ebx
40000ec9:	5e                   	pop    %esi
40000eca:	5d                   	pop    %ebp
40000ecb:	e9 d0 fe ff ff       	jmp    40000da0 <strtoknc>

40000ed0 <free>:
40000ed0:	55                   	push   %ebp
40000ed1:	89 e5                	mov    %esp,%ebp
40000ed3:	57                   	push   %edi
40000ed4:	56                   	push   %esi
40000ed5:	53                   	push   %ebx
40000ed6:	83 ec 08             	sub    $0x8,%esp
40000ed9:	8b 15 0c 32 00 40    	mov    0x4000320c,%edx
40000edf:	8b 4d 08             	mov    0x8(%ebp),%ecx
40000ee2:	89 d0                	mov    %edx,%eax
40000ee4:	e9 b8 00 00 00       	jmp    40000fa1 <free+0xd1>
40000ee9:	3b 48 04             	cmp    0x4(%eax),%ecx
40000eec:	0f 85 ac 00 00 00    	jne    40000f9e <free+0xce>
40000ef2:	31 c9                	xor    %ecx,%ecx
40000ef4:	eb 23                	jmp    40000f19 <free+0x49>

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

40000ef6:	39 c2                	cmp    %eax,%edx
40000ef8:	75 1a                	jne    40000f14 <free+0x44>
static void hdlrx21(uint32_t irq) {
40000efa:	85 c9                	test   %ecx,%ecx
40000efc:	8b 50 08             	mov    0x8(%eax),%edx
40000eff:	75 0e                	jne    40000f0f <free+0x3f>
    printf("IRQ 0x21!\n");
40000f01:	89 15 0c 32 00 40    	mov    %edx,0x4000320c
40000f07:	8b 0d 10 32 00 40    	mov    0x40003210,%ecx
40000f0d:	eb 10                	jmp    40000f1f <free+0x4f>
}

int main(int argc, char* args[])
40000f0f:	89 51 08             	mov    %edx,0x8(%ecx)
40000f12:	eb f3                	jmp    40000f07 <free+0x37>
{
    printf("[ibin/init] initalizing...\n");

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

40000f14:	89 d1                	mov    %edx,%ecx
40000f16:	8b 52 08             	mov    0x8(%edx),%edx
    char resp = 0;

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}
40000f19:	85 d2                	test   %edx,%edx
40000f1b:	75 d9                	jne    40000ef6 <free+0x26>
40000f1d:	eb e8                	jmp    40000f07 <free+0x37>
40000f1f:	89 ca                	mov    %ecx,%edx
40000f21:	eb 6d                	jmp    40000f90 <free+0xc0>
40000f23:	8b 5a 04             	mov    0x4(%edx),%ebx
40000f26:	8b 32                	mov    (%edx),%esi
40000f28:	8b 78 04             	mov    0x4(%eax),%edi
40000f2b:	89 7d ec             	mov    %edi,-0x14(%ebp)
40000f2e:	8d 3c 1e             	lea    (%esi,%ebx,1),%edi
40000f31:	89 7d f0             	mov    %edi,-0x10(%ebp)
40000f34:	8b 7d ec             	mov    -0x14(%ebp),%edi
40000f37:	39 7d f0             	cmp    %edi,-0x10(%ebp)
40000f3a:	75 18                	jne    40000f54 <free+0x84>
40000f3c:	89 58 04             	mov    %ebx,0x4(%eax)
40000f3f:	31 f6                	xor    %esi,%esi
40000f41:	89 cb                	mov    %ecx,%ebx
40000f43:	eb 09                	jmp    40000f4e <free+0x7e>

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

40000f45:	39 d3                	cmp    %edx,%ebx
40000f47:	74 29                	je     40000f72 <free+0xa2>
int main(int argc, char* args[])
{
    printf("[ibin/init] initalizing...\n");

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

40000f49:	89 de                	mov    %ebx,%esi
40000f4b:	8b 5b 08             	mov    0x8(%ebx),%ebx
    char resp = 0;

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}
40000f4e:	85 db                	test   %ebx,%ebx
40000f50:	75 f3                	jne    40000f45 <free+0x75>
40000f52:	eb cb                	jmp    40000f1f <free+0x4f>
40000f54:	8b 38                	mov    (%eax),%edi
40000f56:	89 7d f0             	mov    %edi,-0x10(%ebp)
40000f59:	8b 7d ec             	mov    -0x14(%ebp),%edi
40000f5c:	03 7d f0             	add    -0x10(%ebp),%edi
40000f5f:	39 fb                	cmp    %edi,%ebx
40000f61:	75 2a                	jne    40000f8d <free+0xbd>
40000f63:	03 75 f0             	add    -0x10(%ebp),%esi
40000f66:	89 cb                	mov    %ecx,%ebx
40000f68:	89 30                	mov    %esi,(%eax)
40000f6a:	31 f6                	xor    %esi,%esi
40000f6c:	eb 19                	jmp    40000f87 <free+0xb7>

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

40000f6e:	39 d3                	cmp    %edx,%ebx
40000f70:	75 10                	jne    40000f82 <free+0xb2>
static void hdlrx21(uint32_t irq) {
40000f72:	85 f6                	test   %esi,%esi
40000f74:	8b 53 08             	mov    0x8(%ebx),%edx
40000f77:	75 04                	jne    40000f7d <free+0xad>
    printf("IRQ 0x21!\n");
40000f79:	89 d1                	mov    %edx,%ecx
40000f7b:	eb a2                	jmp    40000f1f <free+0x4f>
}

int main(int argc, char* args[])
40000f7d:	89 56 08             	mov    %edx,0x8(%esi)
40000f80:	eb 9d                	jmp    40000f1f <free+0x4f>
{
    printf("[ibin/init] initalizing...\n");

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

40000f82:	89 de                	mov    %ebx,%esi
40000f84:	8b 5b 08             	mov    0x8(%ebx),%ebx
    char resp = 0;

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}
40000f87:	85 db                	test   %ebx,%ebx
40000f89:	75 e3                	jne    40000f6e <free+0x9e>
40000f8b:	eb 92                	jmp    40000f1f <free+0x4f>
40000f8d:	8b 52 08             	mov    0x8(%edx),%edx
40000f90:	85 d2                	test   %edx,%edx
40000f92:	75 8f                	jne    40000f23 <free+0x53>
    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

40000f94:	89 48 08             	mov    %ecx,0x8(%eax)
    texec("/ibin/ttytovga", 0);
40000f97:	a3 10 32 00 40       	mov    %eax,0x40003210
40000f9c:	eb 0b                	jmp    40000fa9 <free+0xd9>
40000f9e:	8b 40 08             	mov    0x8(%eax),%eax
40000fa1:	85 c0                	test   %eax,%eax
40000fa3:	0f 85 40 ff ff ff    	jne    40000ee9 <free+0x19>
40000fa9:	58                   	pop    %eax
40000faa:	5a                   	pop    %edx
40000fab:	5b                   	pop    %ebx
40000fac:	5e                   	pop    %esi
40000fad:	5f                   	pop    %edi
40000fae:	5d                   	pop    %ebp
40000faf:	c3                   	ret    

40000fb0 <pop_unused_node>:
    char* testparams[] = {
        "test1",
        "test2",
        0
    };

40000fb0:	55                   	push   %ebp
40000fb1:	89 e5                	mov    %esp,%ebp
40000fb3:	53                   	push   %ebx
40000fb4:	83 ec 04             	sub    $0x4,%esp

    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);

    setstdout("/dev/tty0");
    setstdin ("/dev/keyboard");
40000fb7:	a1 08 32 00 40       	mov    0x40003208,%eax
40000fbc:	eb 45                	jmp    40001003 <pop_unused_node+0x53>
    printf("[init] now working on tty0\n");

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

40000fbe:	83 ec 0c             	sub    $0xc,%esp
40000fc1:	6a 01                	push   $0x1
40000fc3:	e8 5b 02 00 00       	call   40001223 <vmm_alloc_cont>
    printf("[init] switching to shell\n");
40000fc8:	83 c4 0c             	add    $0xc,%esp
    printf("[init] now working on tty0\n");

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

40000fcb:	89 c3                	mov    %eax,%ebx
    printf("[init] switching to shell\n");
40000fcd:	68 00 10 00 00       	push   $0x1000
40000fd2:	6a 00                	push   $0x0
40000fd4:	50                   	push   %eax
40000fd5:	e8 a6 fc ff ff       	call   40000c80 <memset>
40000fda:	8b 15 08 32 00 40    	mov    0x40003208,%edx
40000fe0:	8d 43 0c             	lea    0xc(%ebx),%eax
    char* testparams[] = {
        "test1",
        "test2",
        0
    };

40000fe3:	8d 8b fc 0f 00 00    	lea    0xffc(%ebx),%ecx
40000fe9:	83 c4 10             	add    $0x10,%esp
    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

40000fec:	89 50 08             	mov    %edx,0x8(%eax)
40000fef:	89 c2                	mov    %eax,%edx
40000ff1:	83 c0 0c             	add    $0xc,%eax
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);

    printf("[init] switching to shell\n");

    char* testparams[] = {
40000ff4:	39 c8                	cmp    %ecx,%eax
40000ff6:	75 f4                	jne    40000fec <pop_unused_node+0x3c>
40000ff8:	8d 83 f0 0f 00 00    	lea    0xff0(%ebx),%eax
40000ffe:	a3 08 32 00 40       	mov    %eax,0x40003208

    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);

    setstdout("/dev/tty0");
    setstdin ("/dev/keyboard");
40001003:	85 c0                	test   %eax,%eax
40001005:	74 b7                	je     40000fbe <pop_unused_node+0xe>
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
40001007:	8b 50 08             	mov    0x8(%eax),%edx
        0
    };

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);
4000100a:	85 c0                	test   %eax,%eax
        fread(cntrl, &resp, sizeof(char));
    }
}

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
4000100c:	89 15 08 32 00 40    	mov    %edx,0x40003208
        0
    };

    texec("/ibin/csh", 0);

    //register_irq_handler(0x21, hdlrx21);
40001012:	74 aa                	je     40000fbe <pop_unused_node+0xe>

    while(1);

    return 0;
}
40001014:	8b 5d fc             	mov    -0x4(%ebp),%ebx
40001017:	c9                   	leave  
40001018:	c3                   	ret    

40001019 <malloc>:
40001019:	55                   	push   %ebp
4000101a:	89 e5                	mov    %esp,%ebp
4000101c:	57                   	push   %edi
4000101d:	56                   	push   %esi
4000101e:	53                   	push   %ebx
4000101f:	83 ec 1c             	sub    $0x1c,%esp
40001022:	a1 10 32 00 40       	mov    0x40003210,%eax
40001027:	8b 75 08             	mov    0x8(%ebp),%esi
4000102a:	89 c3                	mov    %eax,%ebx
4000102c:	eb 07                	jmp    40001035 <malloc+0x1c>
4000102e:	39 33                	cmp    %esi,(%ebx)
40001030:	73 0c                	jae    4000103e <malloc+0x25>
40001032:	8b 5b 08             	mov    0x8(%ebx),%ebx
40001035:	85 db                	test   %ebx,%ebx
40001037:	75 f5                	jne    4000102e <malloc+0x15>
40001039:	e9 93 00 00 00       	jmp    400010d1 <malloc+0xb8>
4000103e:	8b 3b                	mov    (%ebx),%edi
40001040:	31 d2                	xor    %edx,%edx
40001042:	29 f7                	sub    %esi,%edi
40001044:	89 33                	mov    %esi,(%ebx)
40001046:	eb 4b                	jmp    40001093 <malloc+0x7a>
40001048:	e8 63 ff ff ff       	call   40000fb0 <pop_unused_node>
4000104d:	8b 13                	mov    (%ebx),%edx
4000104f:	03 53 04             	add    0x4(%ebx),%edx
40001052:	29 f7                	sub    %esi,%edi
40001054:	89 50 04             	mov    %edx,0x4(%eax)
    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

40001057:	8b 15 10 32 00 40    	mov    0x40003210,%edx
4000105d:	89 50 08             	mov    %edx,0x8(%eax)
40001060:	89 38                	mov    %edi,(%eax)
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    texec("/ibin/ttytovga", 0);
40001062:	a3 10 32 00 40       	mov    %eax,0x40003210
    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

40001067:	a1 0c 32 00 40       	mov    0x4000320c,%eax
4000106c:	89 43 08             	mov    %eax,0x8(%ebx)
    texec("/ibin/ttytovga", 0);
4000106f:	89 1d 0c 32 00 40    	mov    %ebx,0x4000320c
40001075:	eb 4f                	jmp    400010c6 <malloc+0xad>

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}

40001077:	39 d8                	cmp    %ebx,%eax
40001079:	75 13                	jne    4000108e <malloc+0x75>
static void hdlrx21(uint32_t irq) {
4000107b:	85 d2                	test   %edx,%edx
4000107d:	8b 43 08             	mov    0x8(%ebx),%eax
40001080:	75 07                	jne    40001089 <malloc+0x70>
    printf("IRQ 0x21!\n");
40001082:	a3 10 32 00 40       	mov    %eax,0x40003210
40001087:	eb 0e                	jmp    40001097 <malloc+0x7e>
}

int main(int argc, char* args[])
40001089:	89 42 08             	mov    %eax,0x8(%edx)
4000108c:	eb 09                	jmp    40001097 <malloc+0x7e>
{
    printf("[ibin/init] initalizing...\n");

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

4000108e:	89 c2                	mov    %eax,%edx
40001090:	8b 40 08             	mov    0x8(%eax),%eax
    char resp = 0;

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
}
40001093:	85 c0                	test   %eax,%eax
40001095:	75 e0                	jne    40001077 <malloc+0x5e>
    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

40001097:	a1 0c 32 00 40       	mov    0x4000320c,%eax
4000109c:	85 ff                	test   %edi,%edi
    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

4000109e:	89 43 08             	mov    %eax,0x8(%ebx)
    texec("/ibin/ttytovga", 0);
400010a1:	89 1d 0c 32 00 40    	mov    %ebx,0x4000320c
400010a7:	74 1d                	je     400010c6 <malloc+0xad>
400010a9:	e8 02 ff ff ff       	call   40000fb0 <pop_unused_node>
400010ae:	8b 13                	mov    (%ebx),%edx
400010b0:	03 53 04             	add    0x4(%ebx),%edx
400010b3:	89 50 04             	mov    %edx,0x4(%eax)
    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

400010b6:	8b 15 10 32 00 40    	mov    0x40003210,%edx
400010bc:	89 50 08             	mov    %edx,0x8(%eax)
400010bf:	89 38                	mov    %edi,(%eax)
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    texec("/ibin/ttytovga", 0);
400010c1:	a3 10 32 00 40       	mov    %eax,0x40003210
400010c6:	8b 43 04             	mov    0x4(%ebx),%eax
400010c9:	8d 65 f4             	lea    -0xc(%ebp),%esp
400010cc:	5b                   	pop    %ebx
400010cd:	5e                   	pop    %esi
400010ce:	5f                   	pop    %edi
400010cf:	5d                   	pop    %ebp
400010d0:	c3                   	ret    
400010d1:	89 f0                	mov    %esi,%eax
400010d3:	89 f7                	mov    %esi,%edi
400010d5:	c1 ef 0c             	shr    $0xc,%edi
400010d8:	25 ff 0f 00 00       	and    $0xfff,%eax
400010dd:	83 f8 01             	cmp    $0x1,%eax
400010e0:	83 df ff             	sbb    $0xffffffff,%edi
400010e3:	83 ec 0c             	sub    $0xc,%esp
400010e6:	57                   	push   %edi
400010e7:	e8 37 01 00 00       	call   40001223 <vmm_alloc_cont>
400010ec:	c1 e7 0c             	shl    $0xc,%edi
400010ef:	89 45 e4             	mov    %eax,-0x1c(%ebp)
400010f2:	e8 b9 fe ff ff       	call   40000fb0 <pop_unused_node>
400010f7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
400010fa:	83 c4 10             	add    $0x10,%esp
400010fd:	89 c3                	mov    %eax,%ebx
400010ff:	89 50 04             	mov    %edx,0x4(%eax)
40001102:	89 30                	mov    %esi,(%eax)
40001104:	39 f7                	cmp    %esi,%edi
40001106:	0f 86 5b ff ff ff    	jbe    40001067 <malloc+0x4e>
4000110c:	e9 37 ff ff ff       	jmp    40001048 <malloc+0x2f>

40001111 <realloc>:
40001111:	55                   	push   %ebp
40001112:	89 e5                	mov    %esp,%ebp
40001114:	56                   	push   %esi
40001115:	53                   	push   %ebx
40001116:	8b 1d 0c 32 00 40    	mov    0x4000320c,%ebx
4000111c:	8b 55 08             	mov    0x8(%ebp),%edx
4000111f:	8b 45 0c             	mov    0xc(%ebp),%eax
40001122:	eb 3e                	jmp    40001162 <realloc+0x51>
40001124:	3b 53 04             	cmp    0x4(%ebx),%edx
40001127:	75 36                	jne    4000115f <realloc+0x4e>
40001129:	85 c0                	test   %eax,%eax
4000112b:	75 0b                	jne    40001138 <realloc+0x27>
4000112d:	52                   	push   %edx
4000112e:	31 f6                	xor    %esi,%esi
40001130:	e8 9b fd ff ff       	call   40000ed0 <free>
40001135:	5b                   	pop    %ebx
40001136:	eb 30                	jmp    40001168 <realloc+0x57>
40001138:	83 ec 0c             	sub    $0xc,%esp
4000113b:	50                   	push   %eax
4000113c:	e8 d8 fe ff ff       	call   40001019 <malloc>
40001141:	83 c4 0c             	add    $0xc,%esp
40001144:	89 c6                	mov    %eax,%esi
40001146:	ff 33                	pushl  (%ebx)
40001148:	ff 73 04             	pushl  0x4(%ebx)
4000114b:	50                   	push   %eax
4000114c:	e8 4b fb ff ff       	call   40000c9c <memcpy>
40001151:	59                   	pop    %ecx
40001152:	ff 73 04             	pushl  0x4(%ebx)
40001155:	e8 76 fd ff ff       	call   40000ed0 <free>
4000115a:	83 c4 10             	add    $0x10,%esp
4000115d:	eb 09                	jmp    40001168 <realloc+0x57>
4000115f:	8b 5b 08             	mov    0x8(%ebx),%ebx
40001162:	85 db                	test   %ebx,%ebx
40001164:	75 be                	jne    40001124 <realloc+0x13>
40001166:	31 f6                	xor    %esi,%esi
40001168:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000116b:	89 f0                	mov    %esi,%eax
4000116d:	5b                   	pop    %ebx
4000116e:	5e                   	pop    %esi
4000116f:	5d                   	pop    %ebp
40001170:	c3                   	ret    

40001171 <calloc>:
40001171:	55                   	push   %ebp
40001172:	89 e5                	mov    %esp,%ebp
40001174:	56                   	push   %esi
40001175:	53                   	push   %ebx
40001176:	8b 5d 0c             	mov    0xc(%ebp),%ebx
40001179:	83 ec 0c             	sub    $0xc,%esp
4000117c:	0f af 5d 08          	imul   0x8(%ebp),%ebx
40001180:	53                   	push   %ebx
40001181:	e8 93 fe ff ff       	call   40001019 <malloc>
40001186:	83 c4 10             	add    $0x10,%esp
40001189:	89 c6                	mov    %eax,%esi
4000118b:	85 c0                	test   %eax,%eax
4000118d:	74 0d                	je     4000119c <calloc+0x2b>
4000118f:	50                   	push   %eax
40001190:	53                   	push   %ebx
40001191:	6a 00                	push   $0x0
40001193:	56                   	push   %esi
40001194:	e8 e7 fa ff ff       	call   40000c80 <memset>
40001199:	83 c4 10             	add    $0x10,%esp
4000119c:	8d 65 f8             	lea    -0x8(%ebp),%esp
4000119f:	89 f0                	mov    %esi,%eax
400011a1:	5b                   	pop    %ebx
400011a2:	5e                   	pop    %esi
400011a3:	5d                   	pop    %ebp
400011a4:	c3                   	ret    
400011a5:	00 00                	add    %al,(%eax)
	...

400011a8 <print_memstat>:
    waitResp(cntrl);

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");

    texec("/ibin/ttytovga", 0);
    waitResp(cntrl);
400011a8:	55                   	push   %ebp
400011a9:	89 e5                	mov    %esp,%ebp
400011ab:	83 ec 34             	sub    $0x34,%esp

    printf("[init] now working on tty0\n");

    printf("[init] executing virtual file drivers\n");
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);
400011ae:	8d 45 e0             	lea    -0x20(%ebp),%eax
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");

    printf("[init] now working on tty0\n");

    printf("[init] executing virtual file drivers\n");
400011b1:	c7 45 e0 cd 00 00 00 	movl   $0xcd,-0x20(%ebp)
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);
400011b8:	50                   	push   %eax
    setstdin ("/dev/keyboard");
    setstderr("/dev/tty0");

    printf("[init] now working on tty0\n");

    printf("[init] executing virtual file drivers\n");
400011b9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400011c0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400011c7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400011ce:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400011d5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    texec("/ibin/urnd_prov", 0);
    waitResp(cntrl);
400011dc:	e8 7f 00 00 00       	call   40001260 <syscall>
400011e1:	83 c4 10             	add    $0x10,%esp

400011e4:	c9                   	leave  
400011e5:	c3                   	ret    

400011e6 <vmm_free>:

static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
400011e6:	55                   	push   %ebp
400011e7:	89 e5                	mov    %esp,%ebp
400011e9:	83 ec 34             	sub    $0x34,%esp

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);
400011ec:	8b 45 08             	mov    0x8(%ebp),%eax
400011ef:	c7 45 e0 cc 00 00 00 	movl   $0xcc,-0x20(%ebp)
400011f6:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
400011f9:	8d 45 e0             	lea    -0x20(%ebp),%eax
400011fc:	50                   	push   %eax

    HANDLE cntrl = fmkfifo("/var/cntrl/init");

    printf("[init] starting kbc driver\n");
    texec("/ibin/drivers/kbc", 0);
    waitResp(cntrl);
400011fd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001204:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
4000120b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
40001212:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    printf("[ibin/init] Switching into TTY to VGA mode.\nIf you see this something probably went wrong.\n");
40001219:	e8 42 00 00 00       	call   40001260 <syscall>
4000121e:	83 c4 10             	add    $0x10,%esp

40001221:	c9                   	leave  
40001222:	c3                   	ret    

40001223 <vmm_alloc_cont>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
40001223:	55                   	push   %ebp
40001224:	89 e5                	mov    %esp,%ebp
40001226:	83 ec 34             	sub    $0x34,%esp
static void waitResp(HANDLE cntrl) {
    char resp = 0;

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
40001229:	8b 45 08             	mov    0x8(%ebp),%eax
4000122c:	c7 45 e0 cb 00 00 00 	movl   $0xcb,-0x20(%ebp)
40001233:	89 45 e4             	mov    %eax,-0x1c(%ebp)
}

40001236:	8d 45 e0             	lea    -0x20(%ebp),%eax
40001239:	50                   	push   %eax
static void waitResp(HANDLE cntrl) {
    char resp = 0;

    while(resp != 'K') {
        fread(cntrl, &resp, sizeof(char));
    }
4000123a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40001241:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40001248:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000124f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
}

40001256:	e8 05 00 00 00       	call   40001260 <syscall>
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
}
4000125b:	8b 45 e0             	mov    -0x20(%ebp),%eax
4000125e:	c9                   	leave  
4000125f:	c3                   	ret    

40001260 <syscall>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
40001260:	55                   	push   %ebp
40001261:	89 e5                	mov    %esp,%ebp
40001263:	57                   	push   %edi
40001264:	56                   	push   %esi
40001265:	53                   	push   %ebx
40001266:	83 ec 10             	sub    $0x10,%esp
#include "stdlib.h"
40001269:	8b 55 08             	mov    0x8(%ebp),%edx
4000126c:	8b 45 08             	mov    0x8(%ebp),%eax
4000126f:	8b 72 0c             	mov    0xc(%edx),%esi
40001272:	8b 00                	mov    (%eax),%eax
40001274:	89 75 e4             	mov    %esi,-0x1c(%ebp)
40001277:	8b 5a 04             	mov    0x4(%edx),%ebx
4000127a:	8b 4a 08             	mov    0x8(%edx),%ecx
4000127d:	8b 72 10             	mov    0x10(%edx),%esi
40001280:	8b 7a 14             	mov    0x14(%edx),%edi
40001283:	89 45 ec             	mov    %eax,-0x14(%ebp)
40001286:	8b 55 e4             	mov    -0x1c(%ebp),%edx
40001289:	cd 30                	int    $0x30
4000128b:	89 55 e8             	mov    %edx,-0x18(%ebp)
4000128e:	8b 55 08             	mov    0x8(%ebp),%edx
40001291:	89 45 f0             	mov    %eax,-0x10(%ebp)
40001294:	89 02                	mov    %eax,(%edx)
40001296:	8b 45 e8             	mov    -0x18(%ebp),%eax
40001299:	89 5a 04             	mov    %ebx,0x4(%edx)
4000129c:	89 4a 08             	mov    %ecx,0x8(%edx)
4000129f:	89 42 0c             	mov    %eax,0xc(%edx)
400012a2:	89 72 10             	mov    %esi,0x10(%edx)
400012a5:	89 7a 14             	mov    %edi,0x14(%edx)
static void hdlrx21(uint32_t irq) {
    printf("IRQ 0x21!\n");
}

int main(int argc, char* args[])
{
400012a8:	83 c4 10             	add    $0x10,%esp
400012ab:	5b                   	pop    %ebx
400012ac:	5e                   	pop    %esi
400012ad:	5f                   	pop    %edi
400012ae:	5d                   	pop    %ebp
400012af:	c3                   	ret    
