
../../initrfs/ibin/memstat:     file format elf32-i386
../../initrfs/ibin/memstat
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x40000000

Program Header:
    LOAD off    0x00001000 vaddr 0x40000000 paddr 0x40000000 align 2**12
         filesz 0x0000015f memsz 0x0000015f flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000015f  40000000  40000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a08  00000000  00000000  00001160  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .comment      00000036  00000000  00000000  00001b68  2**0
                  CONTENTS, READONLY
  3 .stabstr      00000c85  00000000  00000000  00001b9e  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
40000000 l    d  .text	00000000 .text
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 memstat.c
00000000 l    df *ABS*	00000000 vmmcall.c
00000000 l    df *ABS*	00000000 syscall.c
400000e8 g     F .text	00000077 syscall
40000024 g     F .text	00000043 vmm_alloc_cont
40000000 g     F .text	00000024 main
40000067 g     F .text	00000040 vmm_free
400000a7 g     F .text	00000041 print_memstat



Disassembly of section .text:

40000000 <main>:
#include "process.h"
#include "stdlib.h"
#include "vmmcall.h"
 
int main(int argc, char* args[])
{
40000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
40000004:	83 e4 f0             	and    $0xfffffff0,%esp
40000007:	ff 71 fc             	pushl  -0x4(%ecx)
4000000a:	55                   	push   %ebp
4000000b:	89 e5                	mov    %esp,%ebp
4000000d:	51                   	push   %ecx
4000000e:	83 ec 04             	sub    $0x4,%esp
    print_memstat();
40000011:	e8 91 00 00 00       	call   400000a7 <print_memstat>
    return 0;
40000016:	b8 00 00 00 00       	mov    $0x0,%eax
}
4000001b:	83 c4 04             	add    $0x4,%esp
4000001e:	59                   	pop    %ecx
4000001f:	5d                   	pop    %ebp
40000020:	8d 61 fc             	lea    -0x4(%ecx),%esp
40000023:	c3                   	ret    

40000024 <vmm_alloc_cont>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
40000024:	55                   	push   %ebp
40000025:	89 e5                	mov    %esp,%ebp
40000027:	83 ec 28             	sub    $0x28,%esp
 
int main(int argc, char* args[])
{
    print_memstat();
    return 0;
}
4000002a:	c7 45 e0 cb 00 00 00 	movl   $0xcb,-0x20(%ebp)
40000031:	8b 45 08             	mov    0x8(%ebp),%eax
40000034:	89 45 e4             	mov    %eax,-0x1c(%ebp)
40000037:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
4000003e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000045:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000004c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000053:	83 ec 0c             	sub    $0xc,%esp
40000056:	8d 45 e0             	lea    -0x20(%ebp),%eax
40000059:	50                   	push   %eax
4000005a:	e8 89 00 00 00       	call   400000e8 <syscall>
4000005f:	83 c4 10             	add    $0x10,%esp
40000062:	8b 45 e0             	mov    -0x20(%ebp),%eax
40000065:	c9                   	leave  
40000066:	c3                   	ret    

40000067 <vmm_free>:
40000067:	55                   	push   %ebp
40000068:	89 e5                	mov    %esp,%ebp
4000006a:	83 ec 28             	sub    $0x28,%esp
4000006d:	8b 45 08             	mov    0x8(%ebp),%eax
40000070:	c7 45 e0 cc 00 00 00 	movl   $0xcc,-0x20(%ebp)
40000077:	89 45 e4             	mov    %eax,-0x1c(%ebp)
4000007a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
40000081:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
40000088:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
4000008f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
40000096:	83 ec 0c             	sub    $0xc,%esp
40000099:	8d 45 e0             	lea    -0x20(%ebp),%eax
4000009c:	50                   	push   %eax
4000009d:	e8 46 00 00 00       	call   400000e8 <syscall>
400000a2:	83 c4 10             	add    $0x10,%esp
400000a5:	c9                   	leave  
400000a6:	c3                   	ret    

400000a7 <print_memstat>:
400000a7:	55                   	push   %ebp
400000a8:	89 e5                	mov    %esp,%ebp
400000aa:	83 ec 28             	sub    $0x28,%esp
400000ad:	c7 45 e0 cd 00 00 00 	movl   $0xcd,-0x20(%ebp)
400000b4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
400000bb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
400000c2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
400000c9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
400000d0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
400000d7:	83 ec 0c             	sub    $0xc,%esp
400000da:	8d 45 e0             	lea    -0x20(%ebp),%eax
400000dd:	50                   	push   %eax
400000de:	e8 05 00 00 00       	call   400000e8 <syscall>
400000e3:	83 c4 10             	add    $0x10,%esp
400000e6:	c9                   	leave  
400000e7:	c3                   	ret    

400000e8 <syscall>:
#include "stdint.h"
#include "stdio.h"
#include "process.h"
400000e8:	55                   	push   %ebp
400000e9:	89 e5                	mov    %esp,%ebp
400000eb:	57                   	push   %edi
400000ec:	56                   	push   %esi
400000ed:	53                   	push   %ebx
400000ee:	83 ec 0c             	sub    $0xc,%esp
{
    print_memstat();
    return 0;
}
400000f1:	8b 45 08             	mov    0x8(%ebp),%eax
400000f4:	8b 00                	mov    (%eax),%eax
400000f6:	89 45 ec             	mov    %eax,-0x14(%ebp)
400000f9:	8b 55 08             	mov    0x8(%ebp),%edx
400000fc:	8b 5a 04             	mov    0x4(%edx),%ebx
400000ff:	8b 55 08             	mov    0x8(%ebp),%edx
40000102:	8b 4a 08             	mov    0x8(%edx),%ecx
40000105:	8b 55 08             	mov    0x8(%ebp),%edx
40000108:	8b 52 0c             	mov    0xc(%edx),%edx
4000010b:	89 55 e8             	mov    %edx,-0x18(%ebp)
4000010e:	8b 75 08             	mov    0x8(%ebp),%esi
40000111:	8b 76 10             	mov    0x10(%esi),%esi
40000114:	8b 7d 08             	mov    0x8(%ebp),%edi
40000117:	8b 7f 14             	mov    0x14(%edi),%edi
#include "stdint.h"
#include "stdio.h"
#include "process.h"
#include "stdlib.h"
4000011a:	8b 45 ec             	mov    -0x14(%ebp),%eax
4000011d:	8b 55 e8             	mov    -0x18(%ebp),%edx
40000120:	cd 30                	int    $0x30
40000122:	89 55 e8             	mov    %edx,-0x18(%ebp)
40000125:	89 45 f0             	mov    %eax,-0x10(%ebp)
40000128:	8b 45 08             	mov    0x8(%ebp),%eax
4000012b:	89 45 ec             	mov    %eax,-0x14(%ebp)
4000012e:	8b 45 f0             	mov    -0x10(%ebp),%eax
40000131:	8b 55 ec             	mov    -0x14(%ebp),%edx
40000134:	89 02                	mov    %eax,(%edx)
40000136:	8b 45 08             	mov    0x8(%ebp),%eax
40000139:	89 58 04             	mov    %ebx,0x4(%eax)
4000013c:	8b 45 08             	mov    0x8(%ebp),%eax
4000013f:	89 48 08             	mov    %ecx,0x8(%eax)
40000142:	8b 45 08             	mov    0x8(%ebp),%eax
40000145:	8b 55 e8             	mov    -0x18(%ebp),%edx
40000148:	89 50 0c             	mov    %edx,0xc(%eax)
4000014b:	8b 45 08             	mov    0x8(%ebp),%eax
4000014e:	89 70 10             	mov    %esi,0x10(%eax)
40000151:	8b 45 08             	mov    0x8(%ebp),%eax
40000154:	89 78 14             	mov    %edi,0x14(%eax)
40000157:	83 c4 0c             	add    $0xc,%esp
4000015a:	5b                   	pop    %ebx
4000015b:	5e                   	pop    %esi
4000015c:	5f                   	pop    %edi
4000015d:	5d                   	pop    %ebp
4000015e:	c3                   	ret    
